{"version":3,"file":"static/js/81563.92906937e0.chunk.js","mappings":"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,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,MACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,MACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,MACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,MACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,MACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,MACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,MACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,IACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,OACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,OACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,MC3jKH,EAAW,CACpB,CACI,EACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,MACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,OACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,MC73GH,EAAW,CACpB,CACI,OACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,EACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,OACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,GACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,IACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,IACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,QACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,KACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,MACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,MACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,MACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,OACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,OACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,OACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,QACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,OACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,OACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,KAIZ,CACI,SACA,MACA,CACI,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,GAEJ,CACI,qBACA,IAEJ,CACI,qBACA,GAEJ,CACI,qBACA,G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","sources":["webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/construct/createSignedTx.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/construct/createSigningPayload.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/construct/createSigningPayloadToU8a.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/construct/encodeUnsignedTx.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/construct/getTxHash.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/construct/index.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/decode/decode.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/decode/decodeSignedTx.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/decode/decodeSigningPayload.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/decode/decodeUnsignedHexTx.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/decode/decodeUnsignedTx.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/decode/index.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/index.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/metadata/createDecorated.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/metadata/createMetadata.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/metadata/getRegistryBase.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/metadata/index.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/metadata/toSpecifiedCallsOnlyV14.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/method/defineMethod.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/method/index.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/method/toTxMethod.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/util/deriveAddress.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/util/importPrivateKey.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/util/index.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/util/isBrowser.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/core/util/polkadotss58Format.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/index.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/types/codec.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/types/decode.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/types/index.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/types/method.js","webpack://web/../../node_modules/@substrate/txwrapper-core/lib/types/registry.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/index.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/crowdloan/addMemo.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/crowdloan/contribute.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/crowdloan/index.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/crowdloan/types.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/crowdloan/withdraw.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/index.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/xcmPallet/index.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/xcmPallet/limitedReserveTransferAssets.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/xcmPallet/limitedTeleportAssets.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/xcmPallet/reserveTransferAssets.js","webpack://web/../../node_modules/@substrate/txwrapper-polkadot/lib/methods/xcmPallet/teleportAssets.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/assets/approveTransfer.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/assets/cancelApproval.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/assets/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/assets/transfer.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/assets/transferApproved.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/assets/transferKeepAlive.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/balances/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/balances/transfer.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/balances/transferAll.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/balances/transferAllowDeath.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/balances/transferKeepAlive.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/democracy/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/democracy/vote.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/foreignAssets/approveTransfer.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/foreignAssets/cancelApproval.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/foreignAssets/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/foreignAssets/transfer.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/foreignAssets/transferApproved.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/foreignAssets/transferKeepAlive.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/multisig/approveAsMulti.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/multisig/asMulti.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/multisig/cancelAsMulti.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/multisig/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/bondExtra.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/bondExtraOther.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/chill.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/claimCommission.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/claimPayout.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/claimPayoutOther.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/create.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/createWithPoolId.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/join.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/nominate.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/poolWithdrawUnbonded.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/setClaimPermission.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/setCommission.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/setCommissionChangeRate.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/setCommissionMax.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/setConfigs.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/setMetadata.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/setState.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/unbond.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/updateRoles.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/nominationPools/withdrawUnbonded.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/addProxy.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/announce.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/createPure.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/killPure.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/proxy.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/proxyAnnounced.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/rejectAnnouncement.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/removeProxies.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/proxy/removeProxy.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/session/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/session/setKeys.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/bond.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/bondExtra.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/chill.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/nominate.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/payoutStakers.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/rebond.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/setController.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/setPayee.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/unbond.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/validate.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/staking/withdrawUnbonded.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/system/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/system/remark.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/utility/asDerivative.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/utility/batch.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/utility/batchAll.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/utility/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/vesting/index.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/vesting/vest.js","webpack://web/../../node_modules/@substrate/txwrapper-substrate/lib/methods/vesting/vestOther.js","webpack://web/../../node_modules/coinselect/utils.js","webpack://web/../../node_modules/@polkadot/api-base/packageInfo.js","webpack://web/../../node_modules/@polkadot/api-augment/packageInfo.js","webpack://web/../../node_modules/@polkadot/api-augment/packageDetect.js","webpack://web/../../node_modules/@polkadot/keyring/detectOther.js","webpack://web/../../node_modules/@polkadot/keyring/packageInfo.js","webpack://web/../../node_modules/@polkadot/keyring/detectPackage.js","webpack://web/../../node_modules/@polkadot/keyring/pair/defaults.js","webpack://web/../../node_modules/@polkadot/keyring/pair/decode.js","webpack://web/../../node_modules/@polkadot/keyring/pair/index.js","webpack://web/../../node_modules/@polkadot/keyring/pair/encode.js","webpack://web/../../node_modules/@polkadot/keyring/pair/toJson.js","webpack://web/../../node_modules/@polkadot/keyring/defaults.js","webpack://web/../../node_modules/@polkadot/keyring/pairs.js","webpack://web/../../node_modules/@polkadot/keyring/keyring.js","webpack://web/../../node_modules/@polkadot/keyring/testing.js","webpack://web/../../node_modules/@polkadot/keyring/pair/nobody.js","webpack://web/../../node_modules/@polkadot/keyring/testingPairs.js","webpack://web/../../node_modules/@polkadot/keyring/index.js","webpack://web/../../node_modules/@polkadot/types-codec/abstract/Array.js","webpack://web/../../node_modules/@polkadot/types-codec/abstract/Base.js","webpack://web/../../node_modules/@polkadot/types-codec/abstract/Int.js","webpack://web/../../node_modules/@polkadot/types-codec/base/Compact.js","webpack://web/../../node_modules/@polkadot/types-codec/base/DoNotConstruct.js","webpack://web/../../node_modules/@polkadot/types-codec/base/Enum.js","webpack://web/../../node_modules/@polkadot/types-codec/base/Int.js","webpack://web/../../node_modules/@polkadot/types-codec/base/Null.js","webpack://web/../../node_modules/@polkadot/types-codec/base/Option.js","webpack://web/../../node_modules/@polkadot/types-codec/base/Result.js","webpack://web/../../node_modules/@polkadot/types-codec/base/Tuple.js","webpack://web/../../node_modules/@polkadot/types-codec/base/UInt.js","webpack://web/../../node_modules/@polkadot/types-codec/base/Vec.js","webpack://web/../../node_modules/@polkadot/types-codec/base/VecFixed.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/BTreeMap.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/BTreeSet.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/BitVec.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/Bytes.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/HashMap.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/Linkage.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/Map.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/OptionBool.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/Range.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/RangeInclusive.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/Type.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/U8aFixed.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js","webpack://web/../../node_modules/@polkadot/types-codec/extended/WrapperOpaque.js","webpack://web/../../node_modules/@polkadot/types-codec/packageDetect.js","webpack://web/../../node_modules/@polkadot/types-codec/base/VecAny.js","webpack://web/../../node_modules/@polkadot/types-codec/native/Date.js","webpack://web/../../node_modules/@polkadot/types-codec/native/Bool.js","webpack://web/../../node_modules/@polkadot/types-codec/native/Float.js","webpack://web/../../node_modules/@polkadot/types-codec/native/Json.js","webpack://web/../../node_modules/@polkadot/types-codec/native/Raw.js","webpack://web/../../node_modules/@polkadot/types-codec/native/Set.js","webpack://web/../../node_modules/@polkadot/types-codec/native/Struct.js","webpack://web/../../node_modules/@polkadot/types-codec/native/Text.js","webpack://web/../../node_modules/@polkadot/types-codec/packageInfo.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/F32.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/F64.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/I128.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/I16.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/I256.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/I32.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/I64.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/I8.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/ISize.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/U128.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/U16.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/U256.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/U32.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/U64.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/U8.js","webpack://web/../../node_modules/@polkadot/types-codec/primitive/USize.js","webpack://web/../../node_modules/@polkadot/types-codec/utils/compareArray.js","webpack://web/../../node_modules/@polkadot/types-codec/utils/compareMap.js","webpack://web/../../node_modules/@polkadot/types-codec/utils/compareSet.js","webpack://web/../../node_modules/@polkadot/types-codec/utils/decodeU8a.js","webpack://web/../../node_modules/@polkadot/types-codec/utils/sanitize.js","webpack://web/../../node_modules/@polkadot/types-codec/utils/sortValues.js","webpack://web/../../node_modules/@polkadot/types-codec/utils/toConstructors.js","webpack://web/../../node_modules/@polkadot/types-codec/utils/typesToMap.js","webpack://web/../../node_modules/@polkadot/types-codec/utils/util.js","webpack://web/../../node_modules/@polkadot/types-create/create/class.js","webpack://web/../../node_modules/@polkadot/types-create/create/type.js","webpack://web/../../node_modules/@polkadot/types-create/types/types.js","webpack://web/../../node_modules/@polkadot/types-create/util/encodeTypes.js","webpack://web/../../node_modules/@polkadot/types-create/util/getTypeDef.js","webpack://web/../../node_modules/@polkadot/types-create/util/typeSplit.js","webpack://web/../../node_modules/@polkadot/types-create/util/xcm.js","webpack://web/../../node_modules/@polkadot/types-known/packageInfo.js","webpack://web/../../node_modules/@polkadot/types-known/packageDetect.js","webpack://web/../../node_modules/@polkadot/types-known/chain/index.js","webpack://web/../../node_modules/@polkadot/types-known/spec/centrifuge-chain.js","webpack://web/../../node_modules/@polkadot/types-known/spec/kusama.js","webpack://web/../../node_modules/@polkadot/types-known/spec/polkadot.js","webpack://web/../../node_modules/@polkadot/types-known/spec/rococo.js","webpack://web/../../node_modules/@polkadot/types-known/spec/statemine.js","webpack://web/../../node_modules/@polkadot/types-known/spec/statemint.js","webpack://web/../../node_modules/@polkadot/types-known/spec/westend.js","webpack://web/../../node_modules/@polkadot/types-known/spec/westmint.js","webpack://web/../../node_modules/@polkadot/types-known/spec/index.js","webpack://web/../../node_modules/@polkadot/types-known/spec/node.js","webpack://web/../../node_modules/@polkadot/types-known/spec/node-template.js","webpack://web/../../node_modules/@polkadot/types-known/spec/shell.js","webpack://web/../../node_modules/@polkadot/types-known/upgrades/e2e/kusama.js","webpack://web/../../node_modules/@polkadot/types-known/upgrades/e2e/polkadot.js","webpack://web/../../node_modules/@polkadot/types-known/upgrades/e2e/westend.js","webpack://web/../../node_modules/@polkadot/types-known/upgrades/index.js","webpack://web/../../node_modules/@polkadot/types-known/util.js","webpack://web/../../node_modules/@polkadot/types/create/createClass.js","webpack://web/../../node_modules/@polkadot/types/create/createType.js","webpack://web/../../node_modules/@polkadot/types/create/lazy.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/signedExtensions/polkadot.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/signedExtensions/shell.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/signedExtensions/substrate.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/signedExtensions/index.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/signedExtensions/statemint.js","webpack://web/../../node_modules/@polkadot/types/create/registry.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/Extrinsic.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/constants.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js","webpack://web/../../node_modules/@polkadot/types/generic/Event.js","webpack://web/../../node_modules/@polkadot/types-create/packageInfo.js","webpack://web/../../node_modules/@polkadot/types/packageDetect.js","webpack://web/../../node_modules/@polkadot/types/metadata/PortableRegistry/toV1.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/ExtrinsicEra.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/ExtrinsicPayloadUnknown.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/ExtrinsicUnknown.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/SignerPayload.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/util.js","webpack://web/../../node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js","webpack://web/../../node_modules/@polkadot/types/generic/AccountId.js","webpack://web/../../node_modules/@polkadot/types/generic/AccountIndex.js","webpack://web/../../node_modules/@polkadot/types/generic/Block.js","webpack://web/../../node_modules/@polkadot/types/generic/Call.js","webpack://web/../../node_modules/@polkadot/types/generic/ChainProperties.js","webpack://web/../../node_modules/@polkadot/types/generic/ConsensusEngineId.js","webpack://web/../../node_modules/@polkadot/types/generic/LookupSource.js","webpack://web/../../node_modules/@polkadot/types/generic/MultiAddress.js","webpack://web/../../node_modules/@polkadot/types/generic/Vote.js","webpack://web/../../node_modules/@polkadot/types/ethereum/AccountId.js","webpack://web/../../node_modules/@polkadot/types/ethereum/LookupSource.js","webpack://web/../../node_modules/@polkadot/types/primitive/Data.js","webpack://web/../../node_modules/@polkadot/types/primitive/StorageKey.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/scaleInfo/v1.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/v9.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/v10.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/v11.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/hashers.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/v12.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/v13.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/v14.js","webpack://web/../../node_modules/@polkadot/types/interfaces/metadata/v15.js","webpack://web/../../node_modules/@polkadot/types/interfaces/scaleInfo/v0.js","webpack://web/../../node_modules/@polkadot/types/interfaces/scaleInfo/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/assetConversion/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/assetConversion/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/assets/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/assets/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/aura/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/aura/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/authorship/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/babe/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/babe/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/babe/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/balances/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/beefy/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/beefy/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/beefy/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/benchmark/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/benchmark/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/blockbuilder/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/blockbuilder/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/collective/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/consensus/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/contracts/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/contracts/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/contracts/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/democracy/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/dev/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/dev/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/discovery/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/discovery/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/elections/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/engine/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/engine/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/evm/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/extrinsics/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/fungibles/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/fungibles/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/genericAsset/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/genesisBuilder/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/genesisBuilder/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/gilt/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/grandpa/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/grandpa/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/grandpa/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/identity/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/imOnline/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/lottery/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/mixnet/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/mixnet/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/mmr/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/mmr/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/mmr/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/nfts/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/nfts/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/nompools/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/nompools/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/offences/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/pow/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/pow/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/proxy/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/recovery/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/scheduler/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/session/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/session/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/society/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/staking/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/staking/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/statement/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/statement/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/support/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/syncstate/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/syncstate/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/system/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/system/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/system/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/treasury/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/txpayment/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/txqueue/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/txqueue/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/uniques/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/utility/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/vesting/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/attestations/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/bridges/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/claims/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/crowdloan/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/cumulus/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/cumulus/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/finality/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/finality/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/parachains/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/parachains/slots.js","webpack://web/../../node_modules/@polkadot/types/interfaces/parachains/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/parachains/hrmp.js","webpack://web/../../node_modules/@polkadot/types/interfaces/poll/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/purchase/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/xcm/v0.js","webpack://web/../../node_modules/@polkadot/types/interfaces/xcm/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/xcm/v1.js","webpack://web/../../node_modules/@polkadot/types/interfaces/xcm/v2.js","webpack://web/../../node_modules/@polkadot/types/interfaces/contractsAbi/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/eth/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/eth/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/eth/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/nimbus/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/nimbus/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/ormlOracle/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/ormlOracle/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/ormlTokens/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/ormlTokens/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/rpc/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/rpc/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/author/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/author/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/chain/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/chain/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/childstate/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/childstate/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/offchain/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/offchain/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/offchain/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/payment/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/payment/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/payment/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/state/definitions.js","webpack://web/../../node_modules/@polkadot/types/interfaces/state/rpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/jsonrpc.js","webpack://web/../../node_modules/@polkadot/types/interfaces/runtime/runtime.js","webpack://web/../../node_modules/@polkadot/types/interfaces/runtime/definitions.js","webpack://web/../../node_modules/@polkadot/types/metadata/Metadata.js","webpack://web/../../node_modules/@polkadot/types/metadata/util/toCallsOnly.js","webpack://web/../../node_modules/@polkadot/types/metadata/util/flattenUniq.js","webpack://web/../../node_modules/@polkadot/types/metadata/util/extractTypes.js","webpack://web/../../node_modules/@polkadot/types/metadata/util/validateTypes.js","webpack://web/../../node_modules/@polkadot/types/metadata/util/getUniqTypes.js","webpack://web/../../node_modules/@polkadot/types/metadata/v9/toV10.js","webpack://web/../../node_modules/@polkadot/types/metadata/v10/toV11.js","webpack://web/../../node_modules/@polkadot/types/metadata/v11/toV12.js","webpack://web/../../node_modules/@polkadot/types/metadata/v12/toV13.js","webpack://web/../../node_modules/@polkadot/types/interfaces/alias.js","webpack://web/../../node_modules/@polkadot/types/metadata/v13/toV14.js","webpack://web/../../node_modules/@polkadot/types/metadata/v14/toV15.js","webpack://web/../../node_modules/@polkadot/types/metadata/v15/toLatest.js","webpack://web/../../node_modules/@polkadot/types/metadata/MagicNumber.js","webpack://web/../../node_modules/@polkadot/types/metadata/MetadataVersioned.js","webpack://web/../../node_modules/@polkadot/types/metadata/versions.js","webpack://web/../../node_modules/@polkadot/types/metadata/PortableRegistry/PortableRegistry.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/constants/index.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/errors/index.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/events/index.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/extrinsics/index.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/extrinsics/createUnchecked.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/index.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/storage/getHasher.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/storage/createFunction.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/storage/util.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/storage/substrate.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/storage/index.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/storage/getStorage.js","webpack://web/../../node_modules/@polkadot/types/metadata/decorate/util.js","webpack://web/../../node_modules/@polkadot/types/metadata/util/getSiName.js","webpack://web/../../node_modules/@polkadot/types/packageInfo.js","webpack://web/../../node_modules/@polkadot/types/util/storage.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/check.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/encode.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/setSS58Format.js","webpack://web/../../node_modules/@polkadot/util-crypto/base64/bs64.js","webpack://web/../../node_modules/@polkadot/util-crypto/bn.js","webpack://web/../../node_modules/@polkadot/util-crypto/crypto.js","webpack://web/../../node_modules/@polkadot/util-crypto/ed25519/deriveHard.js","webpack://web/../../node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js","webpack://web/../../node_modules/@polkadot/util-crypto/ed25519/sign.js","webpack://web/../../node_modules/@polkadot/util-crypto/ed25519/verify.js","webpack://web/../../node_modules/@polkadot/util-crypto/ethereum/encode.js","webpack://web/../../node_modules/@polkadot/util-crypto/ethereum/isAddress.js","webpack://web/../../node_modules/@polkadot/util-crypto/ethereum/isChecksum.js","webpack://web/../../node_modules/@polkadot/util-crypto/hd/ethereum/index.js","webpack://web/../../node_modules/@polkadot/util-crypto/hd/ledger/derivePrivate.js","webpack://web/../../node_modules/@polkadot/util-crypto/hd/ledger/master.js","webpack://web/../../node_modules/@polkadot/util-crypto/hd/ledger/index.js","webpack://web/../../node_modules/@polkadot/util-crypto/hd/validatePath.js","webpack://web/../../node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js","webpack://web/../../node_modules/@polkadot/networks/packageInfo.js","webpack://web/../../node_modules/@polkadot/x-randomvalues/packageInfo.js","webpack://web/../../node_modules/@polkadot/util-crypto/detectOther.js","webpack://web/../../node_modules/@polkadot/util-crypto/detectPackage.js","webpack://web/../../node_modules/@polkadot/x-bigint/shim.js","webpack://web/../../node_modules/@polkadot/util-crypto/bundleInit.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/addressToEvm.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/derivePublic.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/derive.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/keyDerived.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/encodeDerived.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/util.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/keyMulti.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/encodeMulti.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/evmToAddress.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/validate.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/is.js","webpack://web/../../node_modules/@polkadot/util-crypto/address/sort.js","webpack://web/../../node_modules/@polkadot/util-crypto/base32/bs32.js","webpack://web/../../node_modules/@polkadot/util-crypto/base64/pad.js","webpack://web/../../node_modules/@polkadot/util-crypto/base64/trim.js","webpack://web/../../node_modules/@polkadot/util-crypto/ed25519/pair/fromRandom.js","webpack://web/../../node_modules/@polkadot/util-crypto/ed25519/pair/fromSecret.js","webpack://web/../../node_modules/@polkadot/util-crypto/ed25519/pair/fromString.js","webpack://web/../../node_modules/@polkadot/util-crypto/json/decrypt.js","webpack://web/../../node_modules/@polkadot/util-crypto/json/encrypt.js","webpack://web/../../node_modules/@polkadot/util-crypto/mnemonic/generate.js","webpack://web/../../node_modules/@polkadot/util-crypto/random/asNumber.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/agreement.js","webpack://web/../../node_modules/@polkadot/util-crypto/json/constants.js","webpack://web/../../node_modules/@polkadot/util-crypto/json/decryptData.js","webpack://web/../../node_modules/@polkadot/util-crypto/json/encryptFormat.js","webpack://web/../../node_modules/@polkadot/util-crypto/keccak/asU8a.js","webpack://web/../../node_modules/@polkadot/util-crypto/key/DeriveJunction.js","webpack://web/../../node_modules/@polkadot/util-crypto/key/extractPath.js","webpack://web/../../node_modules/@polkadot/util-crypto/key/extractSuri.js","webpack://web/../../node_modules/@polkadot/util-crypto/key/fromPath.js","webpack://web/../../node_modules/@polkadot/util-crypto/key/hdkdDerive.js","webpack://web/../../node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js","webpack://web/../../node_modules/@polkadot/util-crypto/key/hdkdEcdsa.js","webpack://web/../../node_modules/@polkadot/util-crypto/key/hdkdEd25519.js","webpack://web/../../node_modules/@polkadot/util-crypto/key/hdkdSr25519.js","webpack://web/../../node_modules/@polkadot/util-crypto/mnemonic/wordlists/en.js","webpack://web/../../node_modules/@polkadot/util-crypto/mnemonic/bip39.js","webpack://web/../../node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js","webpack://web/../../node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js","webpack://web/../../node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js","webpack://web/../../node_modules/@polkadot/util-crypto/mnemonic/validate.js","webpack://web/../../node_modules/@polkadot/util-crypto/nacl/decrypt.js","webpack://web/../../node_modules/@polkadot/util-crypto/nacl/encrypt.js","webpack://web/../../node_modules/@polkadot/util-crypto/nacl/tweetnacl.js","webpack://web/../../node_modules/@polkadot/util-crypto/node_modules/@noble/curves/esm/abstract/curve.js","webpack://web/../../node_modules/@polkadot/util-crypto/node_modules/@noble/curves/esm/abstract/modular.js","webpack://web/../../node_modules/@polkadot/util-crypto/node_modules/@noble/curves/esm/abstract/utils.js","webpack://web/../../node_modules/@polkadot/util-crypto/node_modules/@noble/curves/esm/abstract/edwards.js","webpack://web/../../node_modules/@polkadot/util-crypto/node_modules/@noble/curves/esm/ed25519.js","webpack://web/../../node_modules/@polkadot/util-crypto/node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://web/../../node_modules/@polkadot/util-crypto/node_modules/@noble/curves/esm/_shortw_utils.js","webpack://web/../../node_modules/@polkadot/util-crypto/node_modules/@noble/curves/esm/secp256k1.js","webpack://web/../../node_modules/@polkadot/util-crypto/packageInfo.js","webpack://web/../../node_modules/@polkadot/util-crypto/pbkdf2/encode.js","webpack://web/../../node_modules/@polkadot/util-crypto/random/asU8a.js","webpack://web/../../node_modules/@polkadot/util-crypto/scrypt/defaults.js","webpack://web/../../node_modules/@noble/hashes/esm/scrypt.js","webpack://web/../../node_modules/@polkadot/util-crypto/scrypt/encode.js","webpack://web/../../node_modules/@polkadot/util-crypto/scrypt/fromU8a.js","webpack://web/../../node_modules/@polkadot/util-crypto/scrypt/toU8a.js","webpack://web/../../node_modules/@polkadot/util-crypto/secp256k1/compress.js","webpack://web/../../node_modules/@polkadot/util-crypto/secp256k1/expand.js","webpack://web/../../node_modules/@polkadot/util-crypto/secp256k1/hasher.js","webpack://web/../../node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js","webpack://web/../../node_modules/@polkadot/util-crypto/secp256k1/recover.js","webpack://web/../../node_modules/@polkadot/util-crypto/secp256k1/sign.js","webpack://web/../../node_modules/@polkadot/util-crypto/secp256k1/tweakAdd.js","webpack://web/../../node_modules/@polkadot/util-crypto/secp256k1/verify.js","webpack://web/../../node_modules/@polkadot/util-crypto/sha/asU8a.js","webpack://web/../../node_modules/@polkadot/util-crypto/signature/verify.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/derive.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/pair/toU8a.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/deriveHard.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/deriveSoft.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/sign.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/verify.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/vrfSign.js","webpack://web/../../node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js","webpack://web/../../node_modules/@polkadot/util-crypto/xxhash/xxhash64.js","webpack://web/../../node_modules/@polkadot/util-crypto/xxhash/asU8a.js","webpack://web/../../node_modules/@polkadot/util/array/chunk.js","webpack://web/../../node_modules/@polkadot/util/array/flatten.js","webpack://web/../../node_modules/@polkadot/util/assert.js","webpack://web/../../node_modules/@polkadot/util/bi/consts.js","webpack://web/../../node_modules/@polkadot/util/bi/helpers.js","webpack://web/../../node_modules/@polkadot/util/bi/toBigInt.js","webpack://web/../../node_modules/@polkadot/util/bi/toU8a.js","webpack://web/../../node_modules/@polkadot/util/bn/consts.js","webpack://web/../../node_modules/@polkadot/util/bn/min.js","webpack://web/../../node_modules/@polkadot/util/bn/sqrt.js","webpack://web/../../node_modules/@polkadot/util/bn/toBn.js","webpack://web/../../node_modules/@polkadot/util/bn/toHex.js","webpack://web/../../node_modules/@polkadot/util/bn/toU8a.js","webpack://web/../../node_modules/@polkadot/util/buffer/toU8a.js","webpack://web/../../node_modules/@polkadot/util/compact/addLength.js","webpack://web/../../node_modules/@polkadot/util/compact/fromU8a.js","webpack://web/../../node_modules/@polkadot/util/compact/stripLength.js","webpack://web/../../node_modules/@polkadot/util/compact/toU8a.js","webpack://web/../../node_modules/@polkadot/util/float/toU8a.js","webpack://web/../../node_modules/@polkadot/util/format/formatBalance.js","webpack://web/../../node_modules/@polkadot/util/format/formatDate.js","webpack://web/../../node_modules/@polkadot/util/format/formatDecimal.js","webpack://web/../../node_modules/@polkadot/util/format/formatNumber.js","webpack://web/../../node_modules/@polkadot/util/format/getSeparator.js","webpack://web/../../node_modules/@polkadot/util/format/si.js","webpack://web/../../node_modules/@polkadot/util/hex/stripPrefix.js","webpack://web/../../node_modules/@polkadot/util/hex/toBigInt.js","webpack://web/../../node_modules/@polkadot/util/hex/toBn.js","webpack://web/../../node_modules/@polkadot/util/hex/toNumber.js","webpack://web/../../node_modules/@polkadot/x-textdecoder/packageInfo.js","webpack://web/../../node_modules/@polkadot/x-textencoder/packageInfo.js","webpack://web/../../node_modules/@polkadot/util/detectOther.js","webpack://web/../../node_modules/@polkadot/util/detectPackage.js","webpack://web/../../node_modules/@polkadot/util/array/filter.js","webpack://web/../../node_modules/@polkadot/util/array/range.js","webpack://web/../../node_modules/@polkadot/util/array/shuffle.js","webpack://web/../../node_modules/@polkadot/util/array/unzip.js","webpack://web/../../node_modules/@polkadot/util/array/zip.js","webpack://web/../../node_modules/@polkadot/util/bi/min.js","webpack://web/../../node_modules/@polkadot/util/bi/sqrt.js","webpack://web/../../node_modules/@polkadot/util/bi/toHex.js","webpack://web/../../node_modules/@polkadot/util/extractTime.js","webpack://web/../../node_modules/@polkadot/util/format/formatElapsed.js","webpack://web/../../node_modules/@polkadot/util/hex/hasPrefix.js","webpack://web/../../node_modules/@polkadot/util/hex/addPrefix.js","webpack://web/../../node_modules/@polkadot/util/hex/fixLength.js","webpack://web/../../node_modules/@polkadot/util/hex/toString.js","webpack://web/../../node_modules/@polkadot/util/is/array.js","webpack://web/../../node_modules/@polkadot/util/is/error.js","webpack://web/../../node_modules/@polkadot/util/is/instanceOf.js","webpack://web/../../node_modules/@polkadot/util/is/ip.js","webpack://web/../../node_modules/@polkadot/util/is/jsonObject.js","webpack://web/../../node_modules/@polkadot/util/is/observable.js","webpack://web/../../node_modules/@polkadot/util/is/promise.js","webpack://web/../../node_modules/@polkadot/util/is/riscv.js","webpack://web/../../node_modules/@polkadot/util/is/testChain.js","webpack://web/../../node_modules/@polkadot/util/is/wasm.js","webpack://web/../../node_modules/@polkadot/util/number/toHex.js","webpack://web/../../node_modules/@polkadot/util/number/toU8a.js","webpack://web/../../node_modules/@polkadot/util/object/copy.js","webpack://web/../../node_modules/@polkadot/util/object/entries.js","webpack://web/../../node_modules/@polkadot/util/object/keys.js","webpack://web/../../node_modules/@polkadot/util/object/values.js","webpack://web/../../node_modules/@polkadot/util/promisify.js","webpack://web/../../node_modules/@polkadot/util/string/shorten.js","webpack://web/../../node_modules/@polkadot/util/u8a/toBuffer.js","webpack://web/../../node_modules/@polkadot/util/is/ascii.js","webpack://web/../../node_modules/@polkadot/util/is/bigInt.js","webpack://web/../../node_modules/@polkadot/util/is/bn.js","webpack://web/../../node_modules/@polkadot/util/is/boolean.js","webpack://web/../../node_modules/@polkadot/util/is/childClass.js","webpack://web/../../node_modules/@polkadot/util/is/class.js","webpack://web/../../node_modules/@polkadot/util/is/codec.js","webpack://web/../../node_modules/@polkadot/util/is/compact.js","webpack://web/../../node_modules/@polkadot/util/is/helpers.js","webpack://web/../../node_modules/@polkadot/util/is/null.js","webpack://web/../../node_modules/@polkadot/util/is/number.js","webpack://web/../../node_modules/@polkadot/util/is/object.js","webpack://web/../../node_modules/@polkadot/util/is/string.js","webpack://web/../../node_modules/@polkadot/util/is/toBigInt.js","webpack://web/../../node_modules/@polkadot/util/is/toBn.js","webpack://web/../../node_modules/@polkadot/util/is/undefined.js","webpack://web/../../node_modules/@polkadot/util/is/utf8.js","webpack://web/../../node_modules/@polkadot/util/lazy.js","webpack://web/../../node_modules/@polkadot/util/logger.js","webpack://web/../../node_modules/@polkadot/util/memoize.js","webpack://web/../../node_modules/@polkadot/util/nextTick.js","webpack://web/../../node_modules/@polkadot/util/noop.js","webpack://web/../../node_modules/@polkadot/util/object/clear.js","webpack://web/../../node_modules/@polkadot/util/object/property.js","webpack://web/../../node_modules/@polkadot/util/object/spread.js","webpack://web/../../node_modules/@polkadot/util/packageInfo.js","webpack://web/../../node_modules/@polkadot/util/string/camelCase.js","webpack://web/../../node_modules/@polkadot/util/string/lowerFirst.js","webpack://web/../../node_modules/@polkadot/util/string/toHex.js","webpack://web/../../node_modules/@polkadot/util/stringify.js","webpack://web/../../node_modules/@polkadot/util/u8a/cmp.js","webpack://web/../../node_modules/@polkadot/util/u8a/empty.js","webpack://web/../../node_modules/@polkadot/util/u8a/fixLength.js","webpack://web/../../node_modules/@polkadot/util/u8a/sorted.js","webpack://web/../../node_modules/@polkadot/util/u8a/toBigInt.js","webpack://web/../../node_modules/@polkadot/util/u8a/toBn.js","webpack://web/../../node_modules/@polkadot/util/u8a/toFloat.js","webpack://web/../../node_modules/@polkadot/util/u8a/toNumber.js","webpack://web/../../node_modules/@polkadot/util/u8a/wrap.js","webpack://web/../../node_modules/@polkadot/util/versionDetect.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSignedTx = void 0;\nconst __1 = require(\"..\");\n/**\n * Serialize a signed transaction in a format that can be submitted over the\n * Node RPC Interface from the signing payload and signature produced by the\n * remote signer.\n *\n * @param unsigned - The JSON representing the unsigned transaction.\n * @param signature - Signature of the signing payload produced by the remote\n * signer. A signed ExtrinsicPayload returns a signature with the type `0x${string}` via polkadot-js.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction createSignedTx(unsigned, signature, options) {\n    const { metadataRpc, registry, asCallsOnlyArg, asSpecifiedCallsOnlyV14, signedExtensions, userExtensions, } = options;\n    const metadata = (0, __1.createMetadata)(registry, metadataRpc, asCallsOnlyArg, asSpecifiedCallsOnlyV14);\n    registry.setMetadata(metadata, signedExtensions, userExtensions);\n    const extrinsic = registry.createType('Extrinsic', { method: unsigned.method }, { version: unsigned.version });\n    extrinsic.addSignature(unsigned.address, signature, unsigned);\n    return extrinsic.toHex();\n}\nexports.createSignedTx = createSignedTx;\n//# sourceMappingURL=createSignedTx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSigningPayload = void 0;\n/**\n * Construct the signing payload from an unsigned transaction and export it to\n * a remote signer (this is often called \"detached signing\").\n *\n * **Important!** The registry needs to be passed into the `options` argument.\n * This registry needs to be updated with latest metadata, so before calling\n * this function, make sure to run `registry.setMetadata(metadata)` first.\n *\n * **Important!** The return value of this function is **NOT** the actual\n * payload to sign: the actual payload to sign includes `method` which should\n * not be length-prefixed. To construct the actual payload to sign, see the\n * example.\n *\n * @param unsigned - The JSON representing the unsigned transaction.\n * @param options - Registry and metadata used for constructing the method.\n *\n * @example\n * ```ts\n * // Serialized signing payload.\n * const signingPayload = createSigningPayload(unsigned, {\n *   metadataRpc,\n *   registry\n * });\n *\n * // Construct an `ExtrinsicPayload` class. Careful, the `version` here is the\n * // `TRANSACTION_VERSION` format version, and **NOT** the\n * // `transaction_version` field from the `state_getRuntimeVersion` RPC\n * // endpoint.\n * const extrinsicPayload = registry\n *   .createType('ExtrinsicPayload', unsigned, {\n *     version: unsigned.version,\n *  });\n *\n * // With the `ExtrinsicPayload` class, construct the actual payload to sign.\n * // N.B. signing payloads > 256 bytes get hashed with blake2_256\n * // ref: https://github.com/paritytech/substrate/blob/master/primitives/runtime/src/generic/unchecked_extrinsic.rs#L171-L220\n * extrinsicPayloadU8a = extrinsicPayload.toU8a({ method: true })\n * const actualPayload = extrinsicPayloadU8a.length > 256\n *   ? registry.hash(extrinsicPayloadU8a)\n *   : extrinsicPayloadU8a;\n *\n * // You can now sign `actualPayload` with your private key.\n * // Note: you can use `u8ToHex` from @polkadot/util to convert `actualPayload`\n * // to a hex string.\n *\n * // Alternatively, call the `.sign()` method directly on the\n * `ExtrinsicPayload` class.\n * const { signature } = extrinsicPayload.sign(myKeyPair);\n * ```\n */\nfunction createSigningPayload(unsigned, options) {\n    const { registry } = options;\n    if (unsigned.assetId &&\n        !unsigned.signedExtensions.includes('ChargeAssetTxPayment')) {\n        throw new Error('invalid transaction argument: assetId. Unsupported signed extension ChargeAssetTxPayment');\n    }\n    return registry\n        .createType('ExtrinsicPayload', unsigned, {\n        version: unsigned.version,\n    })\n        .toHex();\n}\nexports.createSigningPayload = createSigningPayload;\n//# sourceMappingURL=createSigningPayload.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSigningPayloadToU8a = void 0;\n/**\n * Create a signing payload with the method prefix removed.\n * If the length of the payload is above 256, then it will be hashed using\n * blake2_256.\n *\n * Ref: https://github.com/paritytech/substrate/blob/master/primitives/runtime/src/generic/unchecked_extrinsic.rs#L171-L220\n *\n * This is specifically useful for external signers who will not be using\n * `ExtrinsicPayload.sign(<KeyPair>)`, but instead their own method.\n *\n * @param unsigned UnsignedTransaction to be passed in\n * @param options Registry used for constructing the payload.\n */\nfunction createSigningPayloadToU8a(unsigned, options) {\n    const { registry } = options;\n    const extrinsicPayload = registry.createType('ExtrinsicPayload', unsigned, {\n        version: unsigned.version,\n    });\n    /**\n     * Makes sure that the method bytes in the payload doesnt have a length prefix\n     * included.\n     */\n    const extrinsicPayloadU8a = extrinsicPayload.toU8a({ method: true });\n    return extrinsicPayloadU8a.length > 256\n        ? registry.hash(extrinsicPayloadU8a)\n        : extrinsicPayloadU8a;\n}\nexports.createSigningPayloadToU8a = createSigningPayloadToU8a;\n//# sourceMappingURL=createSigningPayloadToU8a.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeUnsignedTransaction = void 0;\n/**\n * Encode an unsigned transaction to submit. This utility function is to be\n * used along side `decodeUnsignedHexTx`.\n *\n * @param unsigned - An Unsigned Transaction that will be encoded.\n * @param options - Registry used for constructing the payload.\n */\nfunction encodeUnsignedTransaction(unsigned, options) {\n    const tx = options.registry.createType('Extrinsic', { method: unsigned.method }, { version: unsigned.version });\n    return tx.toHex();\n}\nexports.encodeUnsignedTransaction = encodeUnsignedTransaction;\n//# sourceMappingURL=encodeUnsignedTx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTxHash = void 0;\nconst util_crypto_1 = require(\"@polkadot/util-crypto\");\n/**\n * Derive the tx hash of a signed transaction offline.\n *\n * @param signedTx - The hex encoding of a signed transaction\n */\nfunction getTxHash(signedTx) {\n    return (0, util_crypto_1.blake2AsHex)(signedTx, 256);\n}\nexports.getTxHash = getTxHash;\n//# sourceMappingURL=getTxHash.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./createSignedTx\"), exports);\n__exportStar(require(\"./createSigningPayload\"), exports);\n__exportStar(require(\"./createSigningPayloadToU8a\"), exports);\n__exportStar(require(\"./encodeUnsignedTx\"), exports);\n__exportStar(require(\"./getTxHash\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = void 0;\nconst decodeSignedTx_1 = require(\"./decodeSignedTx\");\nconst decodeSigningPayload_1 = require(\"./decodeSigningPayload\");\nconst decodeUnsignedTx_1 = require(\"./decodeUnsignedTx\");\nfunction decode(data, options) {\n    if (typeof data === 'string') {\n        let decodedInfo;\n        try {\n            decodedInfo = (0, decodeSigningPayload_1.decodeSigningPayload)(data, options);\n        }\n        catch {\n            decodedInfo = (0, decodeSignedTx_1.decodeSignedTx)(data, options);\n        }\n        return decodedInfo;\n    }\n    return (0, decodeUnsignedTx_1.decodeUnsignedTx)(data, options);\n}\nexports.decode = decode;\n//# sourceMappingURL=decode.js.map","\"use strict\";\n/**\n * @ignore\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeSignedTx = void 0;\nconst util_1 = require(\"@polkadot/util\");\nconst __1 = require(\"..\");\n/**\n * Parse the transaction information from a signed transaction offline.\n *\n * @param signedTx - The JSON representing the signed transaction.\n * @param options - Runtime-specific data used for decoding the transaction.\n */\nfunction decodeSignedTx(signedTx, options) {\n    const { metadataRpc, registry, asCallsOnlyArg, asSpecifiedCallsOnlyV14 } = options;\n    registry.setMetadata((0, __1.createMetadata)(registry, metadataRpc, asCallsOnlyArg, asSpecifiedCallsOnlyV14));\n    const tx = registry.createType('Extrinsic', (0, util_1.hexToU8a)(signedTx), {\n        isSigned: true,\n    });\n    const methodCall = registry.createType('Call', tx.method);\n    const method = (0, __1.toTxMethod)(registry, methodCall);\n    let tip;\n    try {\n        tip = tx.tip.toNumber();\n    }\n    catch (_error) {\n        tip = tx.tip.toString();\n    }\n    return {\n        address: tx.signer.toString(),\n        eraPeriod: tx.era.asMortalEra.period.toNumber(),\n        metadataRpc,\n        method,\n        nonce: tx.nonce.toNumber(),\n        tip,\n    };\n}\nexports.decodeSignedTx = decodeSignedTx;\n//# sourceMappingURL=decodeSignedTx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeSigningPayload = void 0;\n/**\n * @ignore\n */ /** */\nconst create_1 = require(\"@polkadot/types/create\");\nconst Extrinsic_1 = require(\"@polkadot/types/extrinsic/v4/Extrinsic\");\nconst __1 = require(\"..\");\n/**\n * Parse the transaction information from a signing payload.\n *\n * @param signingPayload - The signing payload, in hex.\n * @param options - Runtime-specific data used for decoding the transaction.\n */\nfunction decodeSigningPayload(signingPayload, options) {\n    const { metadataRpc, registry, asCallsOnlyArg, asSpecifiedCallsOnlyV14 } = options;\n    registry.setMetadata((0, __1.createMetadata)(registry, metadataRpc, asCallsOnlyArg, asSpecifiedCallsOnlyV14));\n    // We use `createTypeUnsafe` here because it allows us to specify `withoutLog: true`,\n    // which silences an internal error message from polkadot-js. This is helpful in `decode`\n    // which takes in just a string. We determine if the string is a signing payload or a\n    // signed tx by first attempting to decode it as a signing payload with this function.\n    // If that fails we catch, knowing through process of elimination it should be a\n    // signed tx. `withoutLog: true` prevents an alarming error message from bubbling up\n    // to the user when we catch.\n    const payload = (0, create_1.createTypeUnsafe)(registry, 'ExtrinsicPayload', [\n        signingPayload,\n        {\n            version: Extrinsic_1.EXTRINSIC_VERSION,\n        },\n    ]);\n    const methodCall = (0, create_1.createTypeUnsafe)(registry, 'Call', [payload.method]);\n    const method = (0, __1.toTxMethod)(registry, methodCall);\n    // Immortal eras should return a period of 0\n    const eraPeriod = payload.era.isMortalEra\n        ? payload.era.asMortalEra.period.toNumber()\n        : 0;\n    let assetId;\n    if (payload.inner.assetId) {\n        assetId = payload.inner.assetId.isSome ? payload.inner.assetId : undefined;\n    }\n    let tip;\n    try {\n        tip = payload.tip.toNumber();\n    }\n    catch (_error) {\n        tip = payload.tip.toString();\n    }\n    let metadataHash;\n    if (payload.inner.metadataHash) {\n        metadataHash = payload.inner.metadataHash.isSome\n            ? payload.inner.metadataHash.toString()\n            : undefined;\n    }\n    return {\n        assetId,\n        blockHash: payload.blockHash.toHex(),\n        eraPeriod,\n        genesisHash: payload.genesisHash.toHex(),\n        metadataHash,\n        metadataRpc,\n        method,\n        nonce: payload.nonce.toNumber(),\n        specVersion: payload.specVersion.toNumber(),\n        tip,\n        transactionVersion: payload.transactionVersion.toNumber(),\n    };\n}\nexports.decodeSigningPayload = decodeSigningPayload;\n//# sourceMappingURL=decodeSigningPayload.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeUnsignedHexTx = void 0;\nconst util_1 = require(\"@polkadot/util\");\n/**\n * This should be used in conjunction with `encodeUnsignedTransaction` as the expected\n * payload will match the `Extrinsic` type we are generating via polkadot-js.\n *\n * @param encodedUnsignedTx Generated by `encodeUnsignedTransaction`\n * @param options Runtime-specific data used for decoding the transaction.\n */\nfunction decodeUnsignedHexTx(encodedUnsignedTx, options) {\n    const decodedTx = options.registry.createType('Extrinsic', (0, util_1.hexToU8a)(encodedUnsignedTx));\n    return {\n        method: decodedTx.method.toJSON(),\n        version: decodedTx.version,\n    };\n}\nexports.decodeUnsignedHexTx = decodeUnsignedHexTx;\n//# sourceMappingURL=decodeUnsignedHexTx.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeUnsignedTx = void 0;\n/**\n * @ignore\n */ /** */\nconst util_1 = require(\"@polkadot/util\");\nconst __1 = require(\"..\");\n/**\n * Parse the transaction information from an unsigned transaction offline.\n *\n * @param unsigned - The JSON representing the unsigned transaction.\n * @param options - Runtime-specific data used for decoding the transaction.\n */\nfunction decodeUnsignedTx(unsigned, options) {\n    const { metadataRpc, registry, asCallsOnlyArg, isImmortalEra, asSpecifiedCallsOnlyV14, } = options;\n    registry.setMetadata((0, __1.createMetadata)(registry, metadataRpc, asCallsOnlyArg, asSpecifiedCallsOnlyV14));\n    const methodCall = registry.createType('Call', unsigned.method);\n    const method = (0, __1.toTxMethod)(registry, methodCall);\n    const eraPeriod = isImmortalEra\n        ? (0, util_1.hexToNumber)(registry.createType('ImmortalEra', unsigned.era).toHex())\n        : registry.createType('MortalEra', unsigned.era).period.toNumber();\n    const assetId = unsigned.assetId;\n    let tip;\n    try {\n        tip = registry.createType('Compact<Balance>', unsigned.tip).toNumber();\n    }\n    catch (_error) {\n        tip = registry.createType('Compact<Balance>', unsigned.tip).toString();\n    }\n    return {\n        address: unsigned.address,\n        assetId: typeof assetId === 'object'\n            ? registry.createType('MultiLocation', assetId)\n            : registry.createType('Compact<AssetId>', assetId).toNumber(),\n        blockHash: unsigned.blockHash,\n        blockNumber: registry\n            .createType('BlockNumber', unsigned.blockNumber)\n            .toNumber(),\n        eraPeriod,\n        genesisHash: unsigned.genesisHash,\n        metadataHash: unsigned.metadataHash,\n        metadataRpc,\n        method,\n        nonce: registry.createType('Compact<Index>', unsigned.nonce).toNumber(),\n        specVersion: registry.createType('u32', unsigned.specVersion).toNumber(),\n        tip,\n        transactionVersion: registry\n            .createType('u32', unsigned.transactionVersion)\n            .toNumber(),\n    };\n}\nexports.decodeUnsignedTx = decodeUnsignedTx;\n//# sourceMappingURL=decodeUnsignedTx.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./decode\"), exports);\n__exportStar(require(\"./decodeUnsignedHexTx\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.construct = exports.getSpecTypes = exports.toTxMethod = exports.defineMethod = exports.getRegistryBase = exports.createMetadata = exports.decode = void 0;\nconst construct_1 = require(\"./construct\");\nvar decode_1 = require(\"./decode\");\nObject.defineProperty(exports, \"decode\", { enumerable: true, get: function () { return decode_1.decode; } });\nvar metadata_1 = require(\"./metadata\");\nObject.defineProperty(exports, \"createMetadata\", { enumerable: true, get: function () { return metadata_1.createMetadata; } });\nObject.defineProperty(exports, \"getRegistryBase\", { enumerable: true, get: function () { return metadata_1.getRegistryBase; } });\nvar method_1 = require(\"./method\");\nObject.defineProperty(exports, \"defineMethod\", { enumerable: true, get: function () { return method_1.defineMethod; } });\nObject.defineProperty(exports, \"toTxMethod\", { enumerable: true, get: function () { return method_1.toTxMethod; } });\n__exportStar(require(\"./util\"), exports);\nvar types_known_1 = require(\"@polkadot/types-known\");\nObject.defineProperty(exports, \"getSpecTypes\", { enumerable: true, get: function () { return types_known_1.getSpecTypes; } });\nexports.construct = {\n    signedTx: construct_1.createSignedTx,\n    signingPayload: construct_1.createSigningPayload,\n    signingPayloadToU8a: construct_1.createSigningPayloadToU8a,\n    encodeUnsignedTransaction: construct_1.encodeUnsignedTransaction,\n    txHash: construct_1.getTxHash,\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDecoratedConstants = exports.createDecoratedTx = void 0;\nconst decorate_1 = require(\"@polkadot/types/metadata/decorate\");\nconst createMetadata_1 = require(\"./createMetadata\");\n/**\n * From a metadata hex string (for example returned by RPC), create decorated\n * modules with their calls (transactions).\n *\n * @ignore\n * @param registry - The registry of the metadata.\n * @param metadataRpc - The metadata as hex string.\n */\nfunction createDecoratedTx(registry, metadataRpc) {\n    const metadata = (0, createMetadata_1.createMetadata)(registry, metadataRpc);\n    return (0, decorate_1.decorateExtrinsics)(registry, metadata.asLatest, metadata.version);\n}\nexports.createDecoratedTx = createDecoratedTx;\n/**\n * From a metadata hex string (for example returned by RPC), create decorated\n * modules with their constants.\n *\n * @param registry - The registry of the metadata.\n * @param metadataRpc - The metadata as hex string.\n */\nfunction createDecoratedConstants(registry, metadataRpc) {\n    const metadata = (0, createMetadata_1.createMetadata)(registry, metadataRpc);\n    return (0, decorate_1.decorateConstants)(registry, metadata.asLatest, metadata.version);\n}\nexports.createDecoratedConstants = createDecoratedConstants;\n//# sourceMappingURL=createDecorated.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMetadata = exports.createMetadataUnmemoized = void 0;\nconst types_1 = require(\"@polkadot/types\");\nconst MetadataVersioned_1 = require(\"@polkadot/types/metadata/MetadataVersioned\");\nconst memoizee_1 = __importDefault(require(\"memoizee\"));\nconst util_1 = require(\"../util\");\nconst toSpecifiedCallsOnlyV14_1 = require(\"./toSpecifiedCallsOnlyV14\");\n/**\n * From a metadata hex string (for example returned by RPC), create a Metadata\n * class instance. Metadata decoding is expensive, so this function is\n * memoized.\n *\n * @ignore\n * @param registry - The registry of the metadata.\n * @param metadata - The metadata as hex string.\n * @param asCallsOnlyArg - Option to decreases the metadata to calls only\n */\nfunction createMetadataUnmemoized(registry, metadataRpc, asCallsOnlyArg = false, asSpecifiedCallsOnlyV14) {\n    const metadata = new types_1.Metadata(registry, metadataRpc);\n    if (asSpecifiedCallsOnlyV14 && asSpecifiedCallsOnlyV14.length > 0) {\n        return new MetadataVersioned_1.MetadataVersioned(registry, {\n            magicNumber: metadata.magicNumber,\n            metadata: registry.createTypeUnsafe('MetadataAll', [\n                (0, toSpecifiedCallsOnlyV14_1.toSpecifiedCallsOnlyV14)(registry, metadata.asV14, asSpecifiedCallsOnlyV14),\n                14,\n            ]),\n        });\n    }\n    return asCallsOnlyArg ? metadata.asCallsOnly : metadata;\n}\nexports.createMetadataUnmemoized = createMetadataUnmemoized;\n/**\n * From a metadata hex string (for example returned by RPC), create a Metadata\n * class instance. Metadata decoding is expensive, so this function is\n * memoized.\n *\n * @ignore\n * @param registry - The registry of the metadata.\n * @param metadata - The metadata as hex string.\n * @param asCallsOnlyArg - Option to decreases the metadata to calls only\n */\nexports.createMetadata = (0, memoizee_1.default)(createMetadataUnmemoized, {\n    length: 4,\n    max: !util_1.isBrowser &&\n        typeof ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.TXWRAPPER_METADATA_CACHE_MAX) !== 'undefined'\n        ? parseInt(process.env.TXWRAPPER_METADATA_CACHE_MAX)\n        : undefined,\n    maxAge: !util_1.isBrowser &&\n        typeof ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b.TXWRAPPER_METADATA_CACHE_MAX_AGE) !== 'undefined'\n        ? parseInt(process.env.TXWRAPPER_METADATA_CACHE_MAX_AGE)\n        : undefined,\n});\n//# sourceMappingURL=createMetadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRegistryBase = void 0;\nconst types_1 = require(\"@polkadot/types\");\nconst createMetadata_1 = require(\"./createMetadata\");\n/**\n * Create a type registry given chainProperties, specTypes, and metadataRpc.\n */\nfunction getRegistryBase({ chainProperties, specTypes, metadataRpc, asCallsOnlyArg, signedExtensions, userExtensions, typesBundle, additionalTypes, }) {\n    const registry = new types_1.TypeRegistry();\n    const generatedMetadata = (0, createMetadata_1.createMetadataUnmemoized)(registry, metadataRpc, asCallsOnlyArg);\n    registry.register(specTypes);\n    if (additionalTypes) {\n        registry.register(additionalTypes);\n    }\n    registry.setMetadata(generatedMetadata, signedExtensions, userExtensions);\n    registry.setKnownTypes({ typesBundle });\n    // Register the chain properties for this registry\n    registry.setChainProperties(registry.createType('ChainProperties', chainProperties));\n    return registry;\n}\nexports.getRegistryBase = getRegistryBase;\n//# sourceMappingURL=getRegistryBase.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./createDecorated\"), exports);\n__exportStar(require(\"./createMetadata\"), exports);\n__exportStar(require(\"./getRegistryBase\"), exports);\n__exportStar(require(\"./toSpecifiedCallsOnlyV14\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright 2022 via polkadot-js/api/packages/types/src/metadata/util/toCallsOnly.js\n//\n// The below functionality that has been converted from polkadot-js are:\n// ModuleMetadataTrimmed, as well as some of the logic concerning PortableType, and\n// Option<PalletCallMetadataLatest> generation.\n//\n// Source: https://github.com/polkadot-js/api/blob/9b794e963df5d3cb4aa3ff122a9a9eb94f51ab81/packages/types/src/metadata/util/toCallsOnly.ts\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSpecifiedCallsOnlyV14 = void 0;\nconst util_1 = require(\"@polkadot/util\");\n/**\n * Remove docs from variant, and composite types\n *\n * @param type Si1Type that will be stripped of its docs\n * @param registry Registry used to recreate Si Types\n */\nconst removeDocs = (type, registry) => {\n    // Remove docs from variants\n    if (type.def.isVariant) {\n        const mapVariant = type.def.asVariant.variants.map(({ name, fields, index }) => registry.createType('Si1Variant', {\n            name,\n            index,\n            fields: removeDocsFromFields(registry, fields),\n            docs: [],\n        }));\n        const typeDef = registry.createType('Si1TypeDef', {\n            Variant: {\n                variants: mapVariant,\n            },\n        });\n        return registry.createType('Si1Type', (0, util_1.objectSpread)({}, type, { def: typeDef, docs: [] }));\n    }\n    // Remove docs from composite\n    if (type.def.isComposite) {\n        const typeDef = registry.createType('Si1TypeDef', {\n            Composite: {\n                fields: removeDocsFromFields(registry, type.def.asComposite.fields),\n            },\n        });\n        return registry.createType('Si1Type', (0, util_1.objectSpread)({}, type, { def: typeDef, docs: [] }));\n    }\n    return type;\n};\n/**\n * Removes the docs from fields\n *\n * @param registry\n * @param fields\n */\nconst removeDocsFromFields = (registry, fields) => {\n    return fields.map(({ name, type, typeName }) => registry.createType('Si1Field', {\n        name,\n        type,\n        typeName,\n        docs: [],\n    }));\n};\n/**\n * Given a lookupId, see if it exists within the cache, and if it doesn't, add\n * it to both the cache and stack.\n *\n * @param lookupId\n * @param cache\n * @param stack\n */\nconst tryAddType = (lookupId, cache, stack) => {\n    const lookupStr = lookupId.toString();\n    if (!cache.has(lookupStr)) {\n        cache.add(lookupStr);\n        stack.push(lookupStr);\n    }\n};\n/**\n * Given a type definition, a type cache, and a stack, add type id's to each datastructure\n * as necessary.\n *\n * @param type\n * @param cache\n * @param stack\n */\nconst findLookupIdsInTypeDef = (type, cache, stack) => {\n    const { def } = type;\n    // Composite types\n    if (def.isComposite) {\n        def.asComposite.fields.forEach((f) => {\n            tryAddType(f.type, cache, stack);\n        });\n    }\n    // Variant types\n    if (def.isVariant) {\n        def.asVariant.variants.forEach((v) => {\n            v.fields.forEach((f) => {\n                tryAddType(f.type, cache, stack);\n            });\n        });\n    }\n    // Sequence types\n    if (def.isSequence) {\n        tryAddType(def.asSequence.type, cache, stack);\n    }\n    // Array types\n    if (def.isArray) {\n        tryAddType(def.asArray.type, cache, stack);\n    }\n    // Tuple types\n    if (def.isTuple) {\n        def.asTuple.forEach((id) => {\n            tryAddType(id, cache, stack);\n        });\n    }\n    // Compact types\n    if (def.isCompact) {\n        tryAddType(def.asCompact.type, cache, stack);\n    }\n    if (def.isBitSequence) {\n        tryAddType(def.asBitSequence.bitStoreType, cache, stack);\n        tryAddType(def.asBitSequence.bitOrderType, cache, stack);\n    }\n};\n/**\n * Given a pallet, store all its type id's in a cache\n * as necessary.\n *\n * @param pallet\n * @param cache\n */\nconst findLookupIdsInPallet = (pallet, cache) => {\n    // Storage types\n    if (pallet.storage.isSome) {\n        const storageVec = pallet.storage.unwrap().items;\n        storageVec.forEach((item) => {\n            if (item.type.isPlain) {\n                const lookupId = item.type.asPlain.toString();\n                cache.add(lookupId);\n            }\n            if (item.type.isMap) {\n                // Each key and value is represented as a lookupId\n                const { key, value } = item.type.asMap;\n                cache.add(key.toString());\n                cache.add(value.toString());\n            }\n        });\n    }\n    // Call type\n    if (pallet.calls.isSome) {\n        const lookupId = pallet.calls.unwrap().type.toString();\n        cache.add(lookupId);\n    }\n    // Event type\n    if (pallet.events.isSome) {\n        const lookupId = pallet.events.unwrap().type.toString();\n        cache.add(lookupId);\n    }\n    // Constant type\n    if (pallet.constants) {\n        pallet.constants.forEach((c) => {\n            const lookupId = c.type.toString();\n            cache.add(lookupId);\n        });\n    }\n    // Error type\n    if (pallet.errors.isSome) {\n        const lookupId = pallet.errors.unwrap().type.toString();\n        cache.add(lookupId);\n    }\n};\n/**\n * Given a type, find all sub typeIds within it's params.\n *\n * @param type\n * @param cache\n * @param stack\n */\nconst findLookupIdsInParams = (type, cache, stack) => {\n    const { params } = type;\n    // Check for params\n    if (params.length > 0) {\n        params.forEach((p) => {\n            if (p.type.isSome) {\n                tryAddType(p.type.unwrap(), cache, stack);\n            }\n        });\n    }\n};\n/**\n * Strip any given V14 metadata to only the calls inputted, its corresponding types,\n * any extrinsics and their corresponding types.\n *\n * @param registry\n * @param latestMetadata\n * @param includePallets\n */\nconst toSpecifiedCallsOnlyV14 = (registry, latestMetadata, includePallets = []) => {\n    // Stores typeId's as strings\n    const typeCache = new Set();\n    // Strip the calls to only the pallets we want to include, and the initial type index's we want\n    const pallets = latestMetadata.pallets\n        .filter((p) => includePallets.includes(p.name.toString().toLowerCase()))\n        .map((p) => {\n        const { calls, index, name } = p;\n        findLookupIdsInPallet(p, typeCache);\n        return {\n            calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [\n                calls.unwrapOr(null),\n            ]),\n            index,\n            name,\n        };\n    });\n    const extrinsicTypeId = latestMetadata.extrinsic.type.toString();\n    typeCache.add(extrinsicTypeId);\n    // Store extrinsic signed extension types\n    latestMetadata.extrinsic.signedExtensions.forEach((val) => {\n        const lookupId = val.type.toString();\n        typeCache.add(lookupId);\n    });\n    // Stack used to store lookup type ids to iterate over\n    const stack = [];\n    typeCache.forEach((str) => stack.push(str));\n    /**\n     * Continue to pop values from the stack and add type id's to the cache\n     * if they dont exist. It will continue to increase the stack if there are types\n     * yet to be found that are necessary.\n     */\n    while (stack.length > 0) {\n        const item = stack.pop();\n        const idx = parseFloat(item);\n        // A lookup types index in the lookup.types array is the same as their lookup index.\n        const { type } = latestMetadata.lookup.types[idx];\n        // Traverse the typedef for its required sub types\n        findLookupIdsInTypeDef(type, typeCache, stack);\n        // Traverse the params for its required sub types\n        findLookupIdsInParams(type, typeCache, stack);\n    }\n    // Filter out all necessary types, then return them as its correct PortableType\n    const lookupTypes = latestMetadata.lookup.types\n        .filter(({ id }) => typeCache.has(id.toString()))\n        .map(({ id, type }) => registry.createTypeUnsafe('PortableType', [\n        {\n            id,\n            type: (0, util_1.objectSpread)({}, removeDocs(type, registry), { docs: [] }),\n        },\n    ]));\n    return registry\n        .createTypeUnsafe('MetadataLatest', [\n        {\n            extrinsic: latestMetadata.extrinsic,\n            lookup: {\n                types: lookupTypes,\n            },\n            pallets,\n        },\n    ])\n        .toJSON();\n};\nexports.toSpecifiedCallsOnlyV14 = toSpecifiedCallsOnlyV14;\n//# sourceMappingURL=toSpecifiedCallsOnlyV14.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineMethod = exports.createEra = exports.MethodErrorMessages = void 0;\n/**\n * @ignore\n */ /** */\nconst Extrinsic_1 = require(\"@polkadot/types/extrinsic/v4/Extrinsic\");\nconst util_1 = require(\"@polkadot/util\");\nconst metadata_1 = require(\"../metadata\");\n/**\n * Default values for tx info, if the user doesn't specify any\n */\nconst DEFAULTS = {\n    /**\n     * Don't add any tip by default.\n     */\n    tip: 0,\n    /**\n     * Construct a mortal extrinsic of ~6m24s minutes.\n     */\n    eraPeriod: 64,\n};\n/**\n * Error messages for defineMethod\n */\nvar MethodErrorMessages;\n(function (MethodErrorMessages) {\n    // An era period cannot be less than 4\n    MethodErrorMessages[\"InvalidEraPeriodTooLow\"] = \"lowest possible era period for a mortal tx is 4\";\n    // An era period cannot be greater than 65536\n    MethodErrorMessages[\"InvalidEraPeriodTooHigh\"] = \"largest possible era period for a mortal tx is 65536\";\n    // Decorated tx doesn't have the inputted pallet or method\n    MethodErrorMessages[\"InvalidPalletOrMethod\"] = \"pallet or method not found in metadata\";\n})(MethodErrorMessages = exports.MethodErrorMessages || (exports.MethodErrorMessages = {}));\n/**\n * Check the information relevant to an era period, and return the correct\n * `ExtrinsicEra` as an Immortal or Mortal era.\n *\n * @param registry\n * @param options\n * @returns\n */\nfunction createEra(registry, options) {\n    const { InvalidEraPeriodTooLow, InvalidEraPeriodTooHigh } = MethodErrorMessages;\n    /**\n     * Immortal transactions will be represented by the default value '0x00' for\n     * an era.\n     */\n    if (options.kind === 'immortal') {\n        return registry.createType('ExtrinsicEra');\n    }\n    /**\n     * When the eraPeriod is not defined, set it to a default value of 64\n     */\n    const eraPeriod = options.period === undefined ? DEFAULTS.eraPeriod : options.period;\n    /**\n     * An era period cannot be less than 4 or greater than 65536.\n     * ie. (https://github.com/paritytech/substrate/pull/758)\n     *\n     * It is encouraged to send mortal transactions, but in the use case for an immortal transaction\n     * instead of passing in zero, you must use the `option`, `isImmortalEra`.\n     */\n    if (eraPeriod < 4) {\n        throw Error(InvalidEraPeriodTooLow);\n    }\n    else if (eraPeriod > 65536) {\n        throw Error(InvalidEraPeriodTooHigh);\n    }\n    return registry.createType('ExtrinsicEra', {\n        current: options.blockNumber,\n        period: eraPeriod,\n    });\n}\nexports.createEra = createEra;\n/**\n * Helper function to construct an offline method.\n *\n * @param info - All info necessary to construct a method. That includes base\n * tx info, as well as method name & arguments.\n */\nfunction defineMethod(info, options) {\n    const { metadataRpc, registry, asCallsOnlyArg, asSpecifiedCallsOnlyV14, signedExtensions, userExtensions, isImmortalEra, } = options;\n    const { InvalidPalletOrMethod } = MethodErrorMessages;\n    const generatedMetadata = (0, metadata_1.createMetadata)(registry, metadataRpc, asCallsOnlyArg, asSpecifiedCallsOnlyV14);\n    registry.setMetadata(generatedMetadata, signedExtensions, userExtensions);\n    const tx = (0, metadata_1.createDecoratedTx)(registry, metadataRpc);\n    const methodFunction = !!tx[info.method.pallet] &&\n        tx[info.method.pallet][info.method.name];\n    if (!methodFunction) {\n        throw new Error(InvalidPalletOrMethod);\n    }\n    const method = methodFunction(...methodFunction.meta.args.map((arg) => {\n        if (info.method.args[(0, util_1.stringCamelCase)(arg.name.toString())] === undefined) {\n            throw new Error(`Method ${info.method.pallet}::${info.method.name} expects argument ${arg.toString()}, but got undefined`);\n        }\n        return info.method.args[(0, util_1.stringCamelCase)(arg.name.toString())];\n    })).toHex();\n    const eraOptions = isImmortalEra\n        ? { kind: 'immortal' }\n        : {\n            kind: 'mortal',\n            blockNumber: info.blockNumber,\n            period: info.eraPeriod,\n        };\n    const extrinsicEra = createEra(registry, eraOptions);\n    const blockHash = info.blockHash;\n    const genesisHash = info.genesisHash;\n    const assetId = info.assetId;\n    const metadataHash = info.metadataHash;\n    return {\n        address: info.address,\n        assetId: typeof assetId === 'object'\n            ? registry.createType('MultiLocation', assetId)\n            : registry.createType('Compact<AssetId>', assetId).toNumber(),\n        blockHash,\n        blockNumber: registry.createType('BlockNumber', info.blockNumber).toHex(),\n        era: extrinsicEra.toHex(),\n        genesisHash,\n        metadataHash: metadataHash,\n        metadataRpc: generatedMetadata.toHex(),\n        method,\n        mode: info.mode,\n        nonce: registry.createType('Compact<Index>', info.nonce).toHex(),\n        signedExtensions: registry.signedExtensions,\n        specVersion: registry.createType('u32', info.specVersion).toHex(),\n        tip: registry\n            .createType('Compact<Balance>', info.tip || DEFAULTS.tip)\n            .toHex(),\n        transactionVersion: registry\n            .createType('u32', info.transactionVersion)\n            .toHex(),\n        version: Extrinsic_1.EXTRINSIC_VERSION,\n    };\n}\nexports.defineMethod = defineMethod;\n//# sourceMappingURL=defineMethod.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./defineMethod\"), exports);\n__exportStar(require(\"./toTxMethod\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toTxMethod = void 0;\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/**\n * @ignore\n */ /** */\nconst types_1 = require(\"@polkadot/types\");\nconst types_2 = require(\"@polkadot/types\");\nconst types_codec_1 = require(\"@polkadot/types-codec\");\nconst util_1 = require(\"@polkadot/util\");\n/**\n * From a PolkadotJs `Call` type, get a serializable object representing the\n * call. All integers are serialized to base 10 strings in order to be safe.\n *\n * @param registry - The type registry\n * @param method - The method to serialize\n */\nfunction toTxMethod(registry, method) {\n    // Used to ensure when using `toString` that the return value is in base10\n    const RADIX_PARAM = 10;\n    // Mapping of argName->argType\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const argsDef = JSON.parse(method.Type.args);\n    // Mapping of argName->argValue\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const args = Object.keys(argsDef).reduce((accumulator, key, index) => {\n        let codec = (0, types_1.createTypeUnsafe)(registry, argsDef[key], [\n            method.args[index],\n        ]);\n        if (codec instanceof types_2.Compact) {\n            // Unwrap the compact so we can check the interior type\n            codec = codec.unwrap();\n        }\n        /**\n         * Forcibly serialize the codec value to an integer. If it is not a number\n         * then it will return the codec type as its `toJSON` value.\n         */\n        let jsonArg;\n        if (codec instanceof types_codec_1.UInt || codec instanceof types_codec_1.AbstractInt) {\n            jsonArg = codec.toString(RADIX_PARAM);\n        }\n        else {\n            jsonArg = codec.toJSON();\n        }\n        accumulator[(0, util_1.stringCamelCase)(key)] = jsonArg;\n        return accumulator;\n    }, {});\n    return {\n        args,\n        name: method.method,\n        pallet: method.section,\n    };\n}\nexports.toTxMethod = toTxMethod;\n//# sourceMappingURL=toTxMethod.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveAddress = void 0;\nconst keyring_1 = require(\"@polkadot/keyring\");\nconst util_1 = require(\"@polkadot/util\");\nconst util_crypto_1 = require(\"@polkadot/util-crypto\");\n/**\n * Copyright 2023 via polkadot-js/common\n *\n * The slightly modified below logic is copyrighted from polkadot-js/common . The exact path to the code can be seen here:\n * https://github.com/polkadot-js/common/blob/e5cb0ba2b4a6b5817626cc964b4f66334f2410e4/packages/keyring/src/pair/index.ts#L44-L49\n */\nconst TYPE_ADDRESS = {\n    ecdsa: (p) => (p.length > 32 ? (0, util_crypto_1.blake2AsU8a)(p) : p),\n    ed25519: (p) => p,\n    sr25519: (p) => p,\n};\n/**\n * Derive an address from a cryptographic public key offline.\n *\n * @param publicKey - The public key to derive from.\n * @param ss58Format - The SS58 format to use.\n * @param scheme - The scheme in which you want to apply. It defaults to sr25519\n */\nfunction deriveAddress(publicKey, ss58Format, scheme = 'sr25519') {\n    const raw = (0, util_1.isHex)(publicKey)\n        ? (0, util_1.hexToU8a)(publicKey)\n        : publicKey;\n    const input = TYPE_ADDRESS[scheme](raw);\n    const keyring = new keyring_1.Keyring({ type: scheme, ss58Format: ss58Format });\n    const address = keyring.encodeAddress(input, ss58Format);\n    return address;\n}\nexports.deriveAddress = deriveAddress;\n//# sourceMappingURL=deriveAddress.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.importPrivateKey = void 0;\nconst keyring_1 = require(\"@polkadot/keyring\");\nconst util_1 = require(\"@polkadot/util\");\n// Using an interface above so that KeyringPair shows up in docs\n/**\n * Import a private key and create a KeyringPair.\n * @param privateKey - The private key of the key pair.\n * @param ss58Format - The SS58 encoding of the address.\n */\nfunction importPrivateKey(privateKey, ss58Format) {\n    const keyring = new keyring_1.Keyring({ type: 'ed25519' });\n    keyring.setSS58Format(ss58Format);\n    if (typeof privateKey === 'string') {\n        return keyring.addFromSeed((0, util_1.hexToU8a)(privateKey));\n    }\n    return keyring.addFromSeed(privateKey);\n}\nexports.importPrivateKey = importPrivateKey;\n//# sourceMappingURL=importPrivateKey.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./deriveAddress\"), exports);\n__exportStar(require(\"./importPrivateKey\"), exports);\n__exportStar(require(\"./isBrowser\"), exports);\n__exportStar(require(\"./polkadotss58Format\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isBrowser = void 0;\nexports.isBrowser = typeof window !== 'undefined';\n//# sourceMappingURL=isBrowser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolkadotSS58Format = void 0;\n/**\n * Prefix for ss58-encoded addresses on Polkadot, Kusama, and Westend. Note:\n * 42, the Westend prefix, is also the default for Substrate-based chains.\n */\nvar PolkadotSS58Format;\n(function (PolkadotSS58Format) {\n    PolkadotSS58Format[PolkadotSS58Format[\"polkadot\"] = 0] = \"polkadot\";\n    PolkadotSS58Format[PolkadotSS58Format[\"kusama\"] = 2] = \"kusama\";\n    PolkadotSS58Format[PolkadotSS58Format[\"substrate\"] = 42] = \"substrate\";\n    PolkadotSS58Format[PolkadotSS58Format[\"westend\"] = 42] = \"westend\";\n})(PolkadotSS58Format = exports.PolkadotSS58Format || (exports.PolkadotSS58Format = {}));\n//# sourceMappingURL=polkadotss58Format.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Core components for creating a txwrapper lib.\n *\n * @module txwrapper-core\n */\nrequire(\"@polkadot/api-augment\");\n__exportStar(require(\"./core\"), exports);\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=codec.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=decode.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./codec\"), exports);\n__exportStar(require(\"./decode\"), exports);\n__exportStar(require(\"./method\"), exports);\n__exportStar(require(\"./registry\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeRegistry = void 0;\nvar types_1 = require(\"@polkadot/types\");\nObject.defineProperty(exports, \"TypeRegistry\", { enumerable: true, get: function () { return types_1.TypeRegistry; } });\n//# sourceMappingURL=method.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=registry.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRegistry = exports.methods = void 0;\n/**\n * Helper functions for Polkadot, Kusama, Rococo and Westend offline transaction generation.\n *\n * @module txwrapper-polkadot\n */\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\nconst txwrapper_substrate_1 = require(\"@substrate/txwrapper-substrate\");\nconst polkadotMethods = __importStar(require(\"./methods\"));\n// Export methods of pallets included in the Polkadot, Kusama, Westend, Rococo,\n// Asset Hub Polkadot and Asset Hub Kusama runtimes.\n// Note: in the future this may also include methods defined within this package\n// that do not exist in Substrate.\nexports.methods = {\n    balances: txwrapper_substrate_1.methods.balances,\n    utility: txwrapper_substrate_1.methods.utility,\n    proxy: txwrapper_substrate_1.methods.proxy,\n    democracy: txwrapper_substrate_1.methods.democracy,\n    session: txwrapper_substrate_1.methods.session,\n    staking: txwrapper_substrate_1.methods.staking,\n    system: txwrapper_substrate_1.methods.system,\n    vesting: txwrapper_substrate_1.methods.vesting,\n    multisig: txwrapper_substrate_1.methods.multisig,\n    crowdloan: polkadotMethods.crowdloan,\n    // assets is only applicable to Asset Hub Polkadot and Asset Hub Kusama\n    assets: txwrapper_substrate_1.methods.assets,\n    xcmPallet: polkadotMethods.xcmPallet,\n};\n// Re-export all of txwrapper-core so users have access to utilities, construct functions,\n// decode function, and types.\n__exportStar(require(\"@substrate/txwrapper-core\"), exports);\n/**\n * `ChainProperties` for networks that txwrapper-polkadot supports. These are normally returned\n * by `system_properties` call, but since they don't change much, it's pretty safe to hardcode them.\n */\nconst KNOWN_CHAIN_PROPERTIES = {\n    kusama: {\n        ss58Format: txwrapper_core_1.PolkadotSS58Format.kusama,\n        tokenDecimals: 12,\n        tokenSymbol: 'KSM',\n    },\n    polkadot: {\n        ss58Format: txwrapper_core_1.PolkadotSS58Format.polkadot,\n        tokenDecimals: 10,\n        tokenSymbol: 'DOT',\n    },\n    westend: {\n        ss58Format: txwrapper_core_1.PolkadotSS58Format.westend,\n        tokenDecimals: 12,\n        tokenSymbol: 'WND',\n    },\n    // Even though we are transitioning to `asset-hub-*`, we will keep\n    // statemint, statemine, and westmint for a smooth transition.\n    statemint: {\n        ss58Format: txwrapper_core_1.PolkadotSS58Format.polkadot,\n        tokenDecimals: 10,\n        tokenSymbol: 'DOT',\n    },\n    statemine: {\n        ss58Format: txwrapper_core_1.PolkadotSS58Format.kusama,\n        tokenDecimals: 12,\n        tokenSymbol: 'KSM',\n    },\n    westmint: {\n        ss58Format: txwrapper_core_1.PolkadotSS58Format.westend,\n        tokenDecimals: 12,\n        tokenSymbol: 'WND',\n    },\n    'asset-hub-kusama': {\n        ss58Format: txwrapper_core_1.PolkadotSS58Format.kusama,\n        tokenDecimals: 12,\n        tokenSymbol: 'KSM',\n    },\n    'asset-hub-polkadot': {\n        ss58Format: txwrapper_core_1.PolkadotSS58Format.polkadot,\n        tokenDecimals: 10,\n        tokenSymbol: 'DOT',\n    },\n    'asset-hub-westend': {\n        ss58Format: txwrapper_core_1.PolkadotSS58Format.westend,\n        tokenDecimals: 12,\n        tokenSymbol: 'WND',\n    },\n};\n/**\n * Get a type registry for networks that txwrapper-polkadot supports.\n *\n * @param GetRegistryOptions specName, chainName, specVersion, and metadataRpc of the current runtime\n */\nfunction getRegistry({ specName, chainName, specVersion, metadataRpc, properties, asCallsOnlyArg, signedExtensions, userExtensions, typesBundle, additionalTypes, }) {\n    // The default type registry has polkadot types\n    const registry = new txwrapper_core_1.TypeRegistry();\n    return (0, txwrapper_core_1.getRegistryBase)({\n        chainProperties: properties || KNOWN_CHAIN_PROPERTIES[specName],\n        specTypes: (0, txwrapper_core_1.getSpecTypes)(registry, chainName, specName, specVersion),\n        metadataRpc,\n        asCallsOnlyArg,\n        signedExtensions,\n        userExtensions,\n        typesBundle,\n        additionalTypes,\n    });\n}\nexports.getRegistry = getRegistry;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addMemo = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\nfunction addMemo(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'addMemo',\n            pallet: 'crowdloan',\n        },\n        ...info,\n    }, options);\n}\nexports.addMemo = addMemo;\n//# sourceMappingURL=addMemo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contribute = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\nfunction contribute(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'contribute',\n            pallet: 'crowdloan',\n        },\n        ...info,\n    }, options);\n}\nexports.contribute = contribute;\n//# sourceMappingURL=contribute.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./addMemo\"), exports);\n__exportStar(require(\"./contribute\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./withdraw\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withdraw = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\nfunction withdraw(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'withdraw',\n            pallet: 'crowdloan',\n        },\n        ...info,\n    }, options);\n}\nexports.withdraw = withdraw;\n//# sourceMappingURL=withdraw.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.xcmPallet = exports.crowdloan = void 0;\n// Name exports to create namespaces that map to pallets\nexports.crowdloan = __importStar(require(\"./crowdloan\"));\nexports.xcmPallet = __importStar(require(\"./xcmPallet\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./limitedReserveTransferAssets\"), exports);\n__exportStar(require(\"./limitedTeleportAssets\"), exports);\n__exportStar(require(\"./reserveTransferAssets\"), exports);\n__exportStar(require(\"./teleportAssets\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.limitedReserveTransferAssets = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Transfer some assets from the local chain to the sovereign account of a destination\n * chain and forward a notification XCM.\n *\n * Fee payment on the destination side is made from the asset in the `assets` vector of\n * index `fee_asset_item`, up to enough to pay for `weight_limit` of weight. If more weight\n * is needed than `weight_limit`, then the operation will fail and the assets send may be\n * at risk.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction limitedReserveTransferAssets(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'limitedReserveTransferAssets',\n            pallet: 'xcmPallet',\n        },\n        ...info,\n    }, options);\n}\nexports.limitedReserveTransferAssets = limitedReserveTransferAssets;\n//# sourceMappingURL=limitedReserveTransferAssets.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.limitedTeleportAssets = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Teleport some assets from the local chain to some destination chain.\n *\n * Fee payment on the destination side is made from the asset in the `assets` vector of\n * index `fee_asset_item`, up to enough to pay for `weight_limit` of weight. If more weight\n * is needed than `weight_limit`, then the operation will fail and the assets send may be\n * at risk.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction limitedTeleportAssets(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'limitedTeleportAssets',\n            pallet: 'xcmPallet',\n        },\n        ...info,\n    }, options);\n}\nexports.limitedTeleportAssets = limitedTeleportAssets;\n//# sourceMappingURL=limitedTeleportAssets.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reserveTransferAssets = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Transfer some assets from the local chain to the sovereign account of a destination\n * chain and forward a notification XCM.\n *\n * Fee payment on the destination side is made from the asset in the `assets` vector of\n * index `fee_asset_item`. The weight limit for fees is not provided and thus is unlimited,\n * with all fees taken as needed from the asset.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction reserveTransferAssets(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'reserveTransferAssets',\n            pallet: 'xcmPallet',\n        },\n        ...info,\n    }, options);\n}\nexports.reserveTransferAssets = reserveTransferAssets;\n//# sourceMappingURL=reserveTransferAssets.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.teleportAssets = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Teleport some assets from the local chain to some destination chain.\n *\n * Fee payment on the destination side is made from the asset in the `assets` vector of\n * index `fee_asset_item`. The weight limit for fees is not provided and thus is unlimited,\n * with all fees taken as needed from the asset.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction teleportAssets(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'teleportAssets',\n            pallet: 'xcmPallet',\n        },\n        ...info,\n    }, options);\n}\nexports.teleportAssets = teleportAssets;\n//# sourceMappingURL=teleportAssets.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.methods = void 0;\n/**\n * Selected dispatchables of Substrate pallets, to be re-exported by chain specific txwrappers.\n *\n * @module txwrapper-substrate\n */\n// Note: In the future we may re-export txwrapper-core if this library makes\n// sense to expose as standalone to end users (and not just chain builders).\nexports.methods = __importStar(require(\"./methods\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.approveTransfer = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Approve an amount of asset for transfer by a delegated third-party account.\n *\n * NOTE: The signing account does not need to own `amount` of assets at the point of\n * making this call.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction approveTransfer(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'approveTransfer',\n            pallet: 'assets',\n        },\n        ...info,\n    }, options);\n}\nexports.approveTransfer = approveTransfer;\n//# sourceMappingURL=approveTransfer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cancelApproval = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Cancel all of some asset approved for delegated transfer by a third-party account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction cancelApproval(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'cancelApproval',\n            pallet: 'assets',\n        },\n        ...info,\n    }, options);\n}\nexports.cancelApproval = cancelApproval;\n//# sourceMappingURL=cancelApproval.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./approveTransfer\"), exports);\n__exportStar(require(\"./cancelApproval\"), exports);\n__exportStar(require(\"./transfer\"), exports);\n__exportStar(require(\"./transferApproved\"), exports);\n__exportStar(require(\"./transferKeepAlive\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transfer = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Move some assets from the sender account to another.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transfer(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transfer',\n            pallet: 'assets',\n        },\n        ...info,\n    }, options);\n}\nexports.transfer = transfer;\n//# sourceMappingURL=transfer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transferApproved = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Transfer some asset balance from a previously delegated account to some third-party\n * account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transferApproved(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transferApproved',\n            pallet: 'assets',\n        },\n        ...info,\n    }, options);\n}\nexports.transferApproved = transferApproved;\n//# sourceMappingURL=transferApproved.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transferKeepAlive = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Move some assets from the sender account to another, keeping the sender account alive.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transferKeepAlive(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transferKeepAlive',\n            pallet: 'assets',\n        },\n        ...info,\n    }, options);\n}\nexports.transferKeepAlive = transferKeepAlive;\n//# sourceMappingURL=transferKeepAlive.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./transfer\"), exports);\n__exportStar(require(\"./transferAll\"), exports);\n__exportStar(require(\"./transferAllowDeath\"), exports);\n__exportStar(require(\"./transferKeepAlive\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transfer = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Construct a balance transfer transaction offline.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transfer(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transfer',\n            pallet: 'balances',\n        },\n        ...info,\n    }, options);\n}\nexports.transfer = transfer;\n//# sourceMappingURL=transfer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transferAll = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Transfer the entire transferable balance from the caller account.\n *\n * NOTE: This function only attempts to transfer _transferable_ balances. This means that\n * any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be\n * transferred by this function. To ensure that this function results in a killed account,\n * you might need to prepare the account by removing any reference counters, storage\n * deposits, etc...\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transferAll(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transferAll',\n            pallet: 'balances',\n        },\n        ...info,\n    }, options);\n}\nexports.transferAll = transferAll;\n//# sourceMappingURL=transferAll.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transferAllowDeath = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Construct a balance transfer transaction offline.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transferAllowDeath(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transferAllowDeath',\n            pallet: 'balances',\n        },\n        ...info,\n    }, options);\n}\nexports.transferAllowDeath = transferAllowDeath;\n//# sourceMappingURL=transferAllowDeath.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transferKeepAlive = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Construct a balance transfer transaction offline.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transferKeepAlive(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transferKeepAlive',\n            pallet: 'balances',\n        },\n        ...info,\n    }, options);\n}\nexports.transferKeepAlive = transferKeepAlive;\n//# sourceMappingURL=transferKeepAlive.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./vote\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.vote = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Vote in a referendum.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction vote(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'vote',\n            pallet: 'democracy',\n        },\n        ...info,\n    }, options);\n}\nexports.vote = vote;\n//# sourceMappingURL=vote.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.approveTransfer = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Approve an amount of foreignAssets for transfer by a delegated third-party account.\n *\n * NOTE: The signing account does not need to own `amount` of foreignAssets at the point of\n * making this call.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction approveTransfer(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'approveTransfer',\n            pallet: 'foreignAssets',\n        },\n        ...info,\n    }, options);\n}\nexports.approveTransfer = approveTransfer;\n//# sourceMappingURL=approveTransfer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cancelApproval = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Cancel all of some foreignAsset approved for delegated transfer by a third-party account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction cancelApproval(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'cancelApproval',\n            pallet: 'foreignAssets',\n        },\n        ...info,\n    }, options);\n}\nexports.cancelApproval = cancelApproval;\n//# sourceMappingURL=cancelApproval.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./approveTransfer\"), exports);\n__exportStar(require(\"./cancelApproval\"), exports);\n__exportStar(require(\"./transfer\"), exports);\n__exportStar(require(\"./transferApproved\"), exports);\n__exportStar(require(\"./transferKeepAlive\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transfer = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Move some foreignAsset from the sender account to another.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transfer(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transfer',\n            pallet: 'foreignAssets',\n        },\n        ...info,\n    }, options);\n}\nexports.transfer = transfer;\n//# sourceMappingURL=transfer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transferApproved = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Transfer some foreignAsset balance from a previously delegated account to some third-party\n * account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transferApproved(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transferApproved',\n            pallet: 'foreignAssets',\n        },\n        ...info,\n    }, options);\n}\nexports.transferApproved = transferApproved;\n//# sourceMappingURL=transferApproved.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transferKeepAlive = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Move some foreignAssets from the sender account to another, keeping the sender account alive.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction transferKeepAlive(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'transferKeepAlive',\n            pallet: 'foreignAssets',\n        },\n        ...info,\n    }, options);\n}\nexports.transferKeepAlive = transferKeepAlive;\n//# sourceMappingURL=transferKeepAlive.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.vesting = exports.utility = exports.system = exports.staking = exports.session = exports.proxy = exports.nominationPools = exports.multisig = exports.foreignAssets = exports.democracy = exports.balances = exports.assets = void 0;\n// Name exports to create namespaces that map to pallets\nexports.assets = __importStar(require(\"./assets\"));\nexports.balances = __importStar(require(\"./balances\"));\nexports.democracy = __importStar(require(\"./democracy\"));\nexports.foreignAssets = __importStar(require(\"./foreignAssets\"));\nexports.multisig = __importStar(require(\"./multisig\"));\nexports.nominationPools = __importStar(require(\"./nominationPools\"));\nexports.proxy = __importStar(require(\"./proxy\"));\nexports.session = __importStar(require(\"./session\"));\nexports.staking = __importStar(require(\"./staking\"));\nexports.system = __importStar(require(\"./system\"));\nexports.utility = __importStar(require(\"./utility\"));\nexports.vesting = __importStar(require(\"./vesting\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.approveAsMulti = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Register approval for a dispatch to be made from a deterministic composite account (i.e. multisig\n * account) if approved by a total of `threshold - 1` of `other_signatories`.\n *\n * Payment: `DepositBase` will be reserved if this is the first approval, plus\n * `threshold` times `DepositFactor`. It is returned once this dispatch happens or\n * is cancelled.\n *\n * NOTE: If this is the final approval, you must use `as_multi` instead.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction approveAsMulti(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'approveAsMulti',\n            pallet: 'multisig',\n        },\n        ...info,\n    }, options);\n}\nexports.approveAsMulti = approveAsMulti;\n//# sourceMappingURL=approveAsMulti.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asMulti = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Register approval for a dispatch to be made from a deterministic composite account if\n * approved by a total of `threshold - 1` of `other_signatories`.\n *\n * If there are enough, then dispatch the call.\n *\n * Payment: `DepositBase` will be reserved if this is the first approval, plus\n * `threshold` times `DepositFactor`. It is returned once this dispatch happens or\n * is cancelled.\n *\n * NOTE: Unless this is the final approval, you will generally want to use\n * `approve_as_multi` instead, since it only requires a hash of the call.\n *\n * Result is equivalent to the dispatched result if `threshold` is exactly `1`. Otherwise\n * on success, result is `Ok` and the result from the interior call, if it was executed,\n * may be found in the deposited `MultisigExecuted` event.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction asMulti(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'asMulti',\n            pallet: 'multisig',\n        },\n        ...info,\n    }, options);\n}\nexports.asMulti = asMulti;\n//# sourceMappingURL=asMulti.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cancelAsMulti = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Cancel a pre-existing, on-going multisig transaction. Any deposit reserved previously\n * for this operation will be unreserved on success.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction cancelAsMulti(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'cancelAsMulti',\n            pallet: 'multisig',\n        },\n        ...info,\n    }, options);\n}\nexports.cancelAsMulti = cancelAsMulti;\n//# sourceMappingURL=cancelAsMulti.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./approveAsMulti\"), exports);\n__exportStar(require(\"./asMulti\"), exports);\n__exportStar(require(\"./cancelAsMulti\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bondExtra = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Bond `extra` more funds from `origin` into the pool to which they already belong.\n *\n * Additional funds can come from either the free balance of the account, or from the\n * accumulated rewards, see [`BondExtra`].\n *\n * Bonding extra funds implies an automatic payout of all pending rewards as well.\n * See `bond_extra_other` to bond pending rewards of `other` members.\n *\n * NOTE: this transaction is implemented with the sole purpose of readability and\n * correctness, not optimization. We read/write several storage items multiple times instead\n * of just once, in the spirit of reusing code.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction bondExtra(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'bondExtra',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.bondExtra = bondExtra;\n//# sourceMappingURL=bondExtra.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bondExtraOther = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * `origin` bonds funds from `extra` for some pool member `member` into their respective\n * pools.\n *\n * `origin` can bond extra funds from free balance or pending rewards when `origin ==\n * other`.\n *\n * In the case of `origin != other`, `origin` can only bond extra pending rewards of\n * `other` members assuming set_claim_permission for the given member is\n * `PermissionlessAll` or `PermissionlessCompound`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction bondExtraOther(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'bondExtraOther',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.bondExtraOther = bondExtraOther;\n//# sourceMappingURL=bondExtraOther.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chill = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Chill on behalf of the pool.\n *\n * The dispatch origin of this call must be signed by the pool nominator or the pool\n * root role, same as [`Pallet::nominate`].\n *\n * This directly forwards the call to the staking pallet, on behalf of the pool bonded\n * account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction chill(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'chill',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.chill = chill;\n//# sourceMappingURL=chill.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.claimCommission = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Claim pending commission.\n *\n * The dispatch origin of this call must be signed by the `root` role of the pool. Pending\n * commission is paid out and added to total claimed commission`. Total pending commission\n * is reset to zero. the current.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction claimCommission(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'claimCommission',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.claimCommission = claimCommission;\n//# sourceMappingURL=claimCommission.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.claimPayout = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * \tA bonded member can use this to claim their payout based on the rewards that the pool\n *\thas accumulated since their last claimed payout (OR since joining if this is their first\n *\ttime claiming rewards). The payout will be transferred to the member's account.\n *\n *\tThe member will earn rewards pro rata based on the members stake vs the sum of the\n *\tmembers in the pools stake. Rewards do not \"expire\".\n *\n *\tSee `claim_payout_other` to caim rewards on bahalf of some `other` pool member.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction claimPayout(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'claimPayout',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.claimPayout = claimPayout;\n//# sourceMappingURL=claimPayout.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.claimPayoutOther = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * `origin` can claim payouts on some pool member `other`'s behalf.\n *\n * Pool member `other` must have a `PermissionlessAll` or `PermissionlessWithdraw` in order\n * for this call to be successful.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction claimPayoutOther(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'claimPayoutOther',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.claimPayoutOther = claimPayoutOther;\n//# sourceMappingURL=claimPayoutOther.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.create = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Create a new delegation pool.\n *\n * # Note\n *\n * In addition to `amount`, the caller will transfer the existential deposit; so the caller\n * needs at have at least `amount + existential_deposit` transferrable.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction create(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'create',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.create = create;\n//# sourceMappingURL=create.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWithPoolId = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Create a new delegation pool with a previously used pool id\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction createWithPoolId(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'createWithPoolId',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.createWithPoolId = createWithPoolId;\n//# sourceMappingURL=createWithPoolId.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bondExtra\"), exports);\n__exportStar(require(\"./bondExtraOther\"), exports);\n__exportStar(require(\"./chill\"), exports);\n__exportStar(require(\"./claimCommission\"), exports);\n__exportStar(require(\"./claimPayout\"), exports);\n__exportStar(require(\"./claimPayoutOther\"), exports);\n__exportStar(require(\"./create\"), exports);\n__exportStar(require(\"./createWithPoolId\"), exports);\n__exportStar(require(\"./join\"), exports);\n__exportStar(require(\"./nominate\"), exports);\n__exportStar(require(\"./poolWithdrawUnbonded\"), exports);\n__exportStar(require(\"./setClaimPermission\"), exports);\n__exportStar(require(\"./setCommission\"), exports);\n__exportStar(require(\"./setCommissionChangeRate\"), exports);\n__exportStar(require(\"./setCommissionMax\"), exports);\n__exportStar(require(\"./setConfigs\"), exports);\n__exportStar(require(\"./setMetadata\"), exports);\n__exportStar(require(\"./setState\"), exports);\n__exportStar(require(\"./unbond\"), exports);\n__exportStar(require(\"./updateRoles\"), exports);\n__exportStar(require(\"./withdrawUnbonded\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.join = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Stake funds with a pool. The amount to bond is transferred from the member to the\n * pools account and immediately increases the pools bond.\n *\n * Note:\n *\n * - An account can only be a member of a single pool.\n * - An account cannot join the same pool multiple times.\n * - This call will *not* dust the member account, so the member must have at least\n *   `existential deposit + amount` in their account.\n * - Only a pool with [`PoolState::Open`] can be joined\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction join(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'join',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.join = join;\n//# sourceMappingURL=join.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nominate = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Nominate on behalf of the pool.\n *\n * The dispatch origin of this call must be signed by the pool nominator or the pool\n * root role.\n *\n * This directly forwards the call to the staking pallet, on behalf of the pool bonded\n * account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction nominate(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'nominate',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.nominate = nominate;\n//# sourceMappingURL=nominate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.poolWithdrawUnbonded = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Call `withdraw_unbonded` for the pools account. This call can be made by any account.\n *\n * This is useful if their are too many unlocking chunks to call `unbond`, and some\n * can be cleared by withdrawing. In the case there are too many unlocking chunks, the user\n * would probably see an error like `NoMoreChunks` emitted from the staking system when\n * they attempt to unbond.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction poolWithdrawUnbonded(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'poolWithdrawUnbonded',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.poolWithdrawUnbonded = poolWithdrawUnbonded;\n//# sourceMappingURL=poolWithdrawUnbonded.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setClaimPermission = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Allows a pool member to set a claim permission to allow or disallow permissionless\n * bonding and withdrawing.\n *\n * By default, this is `Permissioned`, which implies only the pool member themselves can\n * claim their pending rewards. If a pool member wishes so, they can set this to\n * `PermissionlessAll` to allow any account to claim their rewards and bond extra to the\n * pool.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setClaimPermission(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'setClaimPermission',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.setClaimPermission = setClaimPermission;\n//# sourceMappingURL=setClaimPermission.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setCommission = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Set the commission of a pool.\n *\n * Both a commission percentage and a commission payee must be provided in the `current`\n * tuple. Where a `current` of `None` is provided, any current commission will be removed.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setCommission(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'setCommission',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.setCommission = setCommission;\n//# sourceMappingURL=setCommission.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setCommissionChangeRate = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Set the commission of a pool.\n *\n * Both a commission percentage and a commission payee must be provided in the `current`\n * tuple. Where a `current` of `None` is provided, any current commission will be removed.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setCommissionChangeRate(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'setCommissionChangeRate',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.setCommissionChangeRate = setCommissionChangeRate;\n//# sourceMappingURL=setCommissionChangeRate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setCommissionMax = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Set the maximum commission of a pool.\n *\n * - Initial max can be set to any `Perbill`, and only smaller values thereafter.\n * - Current commission will be lowered in the event it is higher than a new max\n *   commission.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setCommissionMax(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'setCommissionMax',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.setCommissionMax = setCommissionMax;\n//# sourceMappingURL=setCommissionMax.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setConfigs = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Update configurations for the nomination pools. The origin for this call must be\n * Root.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setConfigs(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'setConfigs',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.setConfigs = setConfigs;\n//# sourceMappingURL=setConfigs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setMetadata = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Set a new metadata for the pool.\n *\n * The dispatch origin of this call must be signed by the bouncer, or the root role of the\n * pool.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setMetadata(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'setMetadata',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.setMetadata = setMetadata;\n//# sourceMappingURL=setMetadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setState = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n *  Set a new state for the pool.\n *\n *  If a pool is already in the `Destroying` state, then under no condition can its state\n *  change again.\n *\n *  The dispatch origin of this call must be either:\n *\n *  1. signed by the bouncer, or the root role of the pool,\n *  2. if the pool conditions to be open are NOT met (as described by `ok_to_be_open`), and\n *     then the state of the pool can be permissionlessly changed to `Destroying`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setState(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'setState',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.setState = setState;\n//# sourceMappingURL=setState.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unbond = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Unbond up to `unbonding_points` of the `member_account`'s funds from the pool. It\n * implicitly collects the rewards one last time, since not doing so would mean some\n * rewards would be forfeited.\n *\n * Under certain conditions, this call can be dispatched permissionlessly (i.e. by any\n * account).\n *\n * # Conditions for a permissionless dispatch.\n *\n * The pool is blocked and the caller is either the root or bouncer. This is refereed to\n * as a kick.\n * The pool is destroying and the member is not the depositor.\n * The pool is destroying, the member is the depositor and no other members are in the\n * pool.\n *\n * ## Conditions for permissioned dispatch (i.e. the caller is also the\n * `member_account`):\n *\n * The caller is not the depositor.\n * The caller is the depositor, the pool is destroying and no other members are in the\n * pool.\n *\n * # Note\n *\n * If there are too many unlocking chunks to unbond with the pool account,\n * [`Call::pool_withdraw_unbonded`] can be called to try and minimize unlocking chunks.\n * The [`StakingInterface::unbond`] will implicitly call [`Call::pool_withdraw_unbonded`]\n * to try to free chunks if necessary (ie. if unbound was called and no unlocking chunks\n * are available). However, it may not be possible to release the current unlocking chunks,\n * in which case, the result of this call will likely be the `NoMoreChunks` error from the\n * staking system.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction unbond(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'unbond',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.unbond = unbond;\n//# sourceMappingURL=unbond.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateRoles = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Update the roles of the pool.\n *\n * The root is the only entity that can change any of the roles, including itself,\n * excluding the depositor, who can never change.\n *\n * It emits an event, notifying UIs of the role change. This event is quite relevant to\n * most pool members and they should be informed of changes to pool roles.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction updateRoles(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'updateRoles',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.updateRoles = updateRoles;\n//# sourceMappingURL=updateRoles.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withdrawUnbonded = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Withdraw unbonded funds from `member_account`. If no bonded funds can be unbonded, an\n * error is returned.\n *\n * Under certain conditions, this call can be dispatched permissionlessly (i.e. by any\n * account).\n *\n * # Conditions for a permissionless dispatch\n *\n * The pool is in destroy mode and the target is not the depositor.\n * The target is the depositor and they are the only member in the sub pools.\n * The pool is blocked and the caller is either the root or bouncer.\n *\n * # Conditions for permissioned dispatch\n *\n * The caller is the target and they are not the depositor.\n *\n * # Note\n *\n * If the target is the depositor, the pool will be destroyed.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction withdrawUnbonded(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'withdrawUnbonded',\n            pallet: 'nominationPools',\n        },\n        ...info,\n    }, options);\n}\nexports.withdrawUnbonded = withdrawUnbonded;\n//# sourceMappingURL=withdrawUnbonded.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addProxy = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Register a proxy account for the sender that is able to make calls on its behalf.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction addProxy(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'addProxy',\n            pallet: 'proxy',\n        },\n        ...info,\n    }, options);\n}\nexports.addProxy = addProxy;\n//# sourceMappingURL=addProxy.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.announce = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Publish the hash of a proxy-call that will be made in the future.\n *\n * This must be called `ProxyDefinition.delay` blocks before the corresponding\n * `proxy` is attempted if the delay associated with the proxy relationship is\n * greater than zero. When a `ProxyDefinition.delay` is 0 `announce` is not neccesary\n * and `proxy` can be called at any time.\n *\n * No more than `MaxPending` announcements may be made at any one time. On Kusama and Polkadot\n * `MaxPending` is set to 32.\n *\n * This will take a deposit of `AnnouncementDepositFactor` as well as\n * `AnnouncementDepositBase` if there are no other pending announcements.\n *\n * The dispatch origin for this call must be _Signed_ and a proxy of `real`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction announce(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'announce',\n            pallet: 'proxy',\n        },\n        ...info,\n    }, options);\n}\nexports.announce = announce;\n//# sourceMappingURL=announce.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPure = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Spawn a fresh new account that is guaranteed to be otherwise inaccessible, and\n * initialize it with a proxy of `proxy_type` for `origin` sender.\n *\n * NOTE: Was named anonymous before v9300\n *\n * Requires a `Signed` origin\n *\n * Fails with `Duplicate` if this has already been called in this transaction, from the\n * same sender, with the same parameters.\n *\n * Fails if there are insufficient funds to pay for deposit.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction createPure(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'createPure',\n            pallet: 'proxy',\n        },\n        ...info,\n    }, options);\n}\nexports.createPure = createPure;\n//# sourceMappingURL=createPure.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./addProxy\"), exports);\n__exportStar(require(\"./announce\"), exports);\n__exportStar(require(\"./createPure\"), exports);\n__exportStar(require(\"./killPure\"), exports);\n__exportStar(require(\"./proxy\"), exports);\n__exportStar(require(\"./proxyAnnounced\"), exports);\n__exportStar(require(\"./rejectAnnouncement\"), exports);\n__exportStar(require(\"./removeProxies\"), exports);\n__exportStar(require(\"./removeProxy\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.killPure = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Removes a previously spawned pure proxy.\n *\n * NOTE: Was named killAnonymous before v9300\n *\n * WARNING: **All access to this account will be lost.** Any funds held in it will be\n * inaccessible.\n *\n * Requires a `Signed` origin, and the sender account must have been created by a call to\n * `anonymous` with corresponding parameters.\n *\n * Fails with `NoPermission` in case the caller is not a previously created anonymous\n * account whose `anonymous` call has corresponding parameters.\n *\n * @param args Arguments specific to this method.\n * @param info Information required to construct the transaction.\n * @param options Registry and metadata used for constructing the method.\n * @returns\n */\nfunction killPure(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'killPure',\n            pallet: 'proxy',\n        },\n        ...info,\n    }, options);\n}\nexports.killPure = killPure;\n//# sourceMappingURL=killPure.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.proxy = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Dispatch the given `call` from an account for which the sender is authorized.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction proxy(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'proxy',\n            pallet: 'proxy',\n        },\n        ...info,\n    }, options);\n}\nexports.proxy = proxy;\n//# sourceMappingURL=proxy.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.proxyAnnounced = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Dispatch the given `call` from an account that the sender is authorised for through\n * `add_proxy`.\n *\n * Removes any corresponding announcement(s).\n *\n * The dispatch origin for this call must be _Signed_.\n *\n * @param args\n * @param info\n * @param options\n */\nfunction proxyAnnounced(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'proxyAnnounced',\n            pallet: 'proxy',\n        },\n        ...info,\n    }, options);\n}\nexports.proxyAnnounced = proxyAnnounced;\n//# sourceMappingURL=proxyAnnounced.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rejectAnnouncement = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Remove the given announcement of a delegate and return the deposit. Made by the proxied account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction rejectAnnouncement(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'rejectAnnouncement',\n            pallet: 'proxy',\n        },\n        ...info,\n    }, options);\n}\nexports.rejectAnnouncement = rejectAnnouncement;\n//# sourceMappingURL=rejectAnnouncement.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeProxies = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Unregister all proxy accounts for the sender.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction removeProxies(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'removeProxies',\n            pallet: 'proxy',\n        },\n        ...info,\n    }, options);\n}\nexports.removeProxies = removeProxies;\n//# sourceMappingURL=removeProxies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeProxy = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Unregister a proxy account for the sender.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction removeProxy(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'removeProxy',\n            pallet: 'proxy',\n        },\n        ...info,\n    }, options);\n}\nexports.removeProxy = removeProxy;\n//# sourceMappingURL=removeProxy.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./setKeys\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setKeys = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Sets the session key(s) of the function caller to `key`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setKeys(args, info, options) {\n    const { keys, proof = '0x' } = args;\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args: {\n                keys,\n                proof,\n            },\n            name: 'setKeys',\n            pallet: 'session',\n        },\n        ...info,\n    }, options);\n}\nexports.setKeys = setKeys;\n//# sourceMappingURL=setKeys.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bond = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Construct a transaction to bond funds and create a Stash account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction bond(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'bond',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.bond = bond;\n//# sourceMappingURL=bond.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bondExtra = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Add some extra amount from the stash's `free_balance` into\n * the balance up for staking.\n *\n * Can only be called when `EraElectionStatus` is `Closed`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction bondExtra(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'bondExtra',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.bondExtra = bondExtra;\n//# sourceMappingURL=bondExtra.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chill = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Declare the desire to cease validating or nominating. Does not unbond funds.\n *\n * Can only be called when `EraElectionStatus` is `Closed`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction chill(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'chill',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.chill = chill;\n//# sourceMappingURL=chill.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bond\"), exports);\n__exportStar(require(\"./bondExtra\"), exports);\n__exportStar(require(\"./chill\"), exports);\n__exportStar(require(\"./nominate\"), exports);\n__exportStar(require(\"./payoutStakers\"), exports);\n__exportStar(require(\"./rebond\"), exports);\n__exportStar(require(\"./setController\"), exports);\n__exportStar(require(\"./setPayee\"), exports);\n__exportStar(require(\"./unbond\"), exports);\n__exportStar(require(\"./validate\"), exports);\n__exportStar(require(\"./withdrawUnbonded\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nominate = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Construct a transaction to nominate. This must be called by the _Controller_ account.\n *\n * Can only be called when `EraElectionStatus` is `Closed`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction nominate(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'nominate',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.nominate = nominate;\n//# sourceMappingURL=nominate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.payoutStakers = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n *\n * Pay out all the stakers behind a single validator for a single era.\n *\n * Any account can call this function, even if it is not one of the stakers.\n *\n * Can only be called when `EraElectionStatus` is `Closed`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction payoutStakers(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'payoutStakers',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.payoutStakers = payoutStakers;\n//# sourceMappingURL=payoutStakers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rebond = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Rebond a portion of the stash scheduled to be unlocked.\n *\n * The dispatch origin must be signed by the controller, and it can be only called when\n * `EraElectionStatus` is `Closed`.\n *\n **/\nfunction rebond(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'rebond',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.rebond = rebond;\n//# sourceMappingURL=rebond.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setController = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * (Re-)sets the controller of a stash to the stash itself. Comes into effect at the beginning of the next era.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setController(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'setController',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.setController = setController;\n//# sourceMappingURL=setController.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setPayee = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * (Re-)set the payment target for staking rewards.\n *\n * Comes into effect at the beginning of the next era.\n *\n *  The dispatch origin for this call must be _Signed_ by the controller, not the stash.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction setPayee(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'setPayee',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.setPayee = setPayee;\n//# sourceMappingURL=setPayee.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unbond = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Construct a transaction to unbond funds from a Stash account. This must be\n * called by the _Controller_ account.\n *\n * Can only be called when `EraElectionStatus` is `Closed`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction unbond(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'unbond',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.unbond = unbond;\n//# sourceMappingURL=unbond.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Declare the desire to validate for the origin controller.\n *\n * Can only be called when `EraElectionStatus` is `Closed`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction validate(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'validate',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.validate = validate;\n//# sourceMappingURL=validate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withdrawUnbonded = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * If 100% of staked funds are withdrawn, cleans up staking-related\n * storage for the account and decrements the ref_count. Note that accounts\n * that set session keys must remove them before calling this, else they will\n * lose their Controller status and be unable to remove them\n * without bonding some funds again.\n *\n * Can only be called when `EraElectionStatus` is `Closed`.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction withdrawUnbonded(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'withdrawUnbonded',\n            pallet: 'staking',\n        },\n        ...info,\n    }, options);\n}\nexports.withdrawUnbonded = withdrawUnbonded;\n//# sourceMappingURL=withdrawUnbonded.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./remark\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remark = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Make some on-chain remark.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction remark(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'remark',\n            pallet: 'system',\n        },\n        ...info,\n    }, options);\n}\nexports.remark = remark;\n//# sourceMappingURL=remark.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asDerivative = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Send a call through an indexed pseudonym of the sender. In other words, send a call through a\n * derivative account of the signer. The signer will need to have an already existing index derived\n * account in order to succesfully execute this call.\n *\n * Each account has 2**16 possible \"pseudonyms\" (alternative account IDs) and these can be\n * stacked. This can be useful as a key management tool, where you need multiple distinct accounts\n * (e.g. as controllers for many staking accounts), but where it's perfectly fine to have each of\n * them controlled by the same underlying keypair.\n *\n * Derivative accounts are, for the purposes of proxy filtering considered exactly\n * the same as the oigin and are thus hampered with the origin's filters.\n *\n * NOTE: If you need to ensure that any account-based filtering is ignored (i.e.\n * because you expect `proxy` to have been used prior in the call stack and you do not want\n * the call restrictions to apply to any sub-accounts), then use `as_multi_threshold_1`\n * in the Multisig pallet instead.\n *\n * NOTE: Prior to version *12, this was called `as_limited_sub`.\n *\n * The dispatch origin for this call must be _Signed_.\n *\n * @param args\n * @param info\n * @param options\n */\nfunction asDerivative(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'asDerivative',\n            pallet: 'utility',\n        },\n        ...info,\n    }, options);\n}\nexports.asDerivative = asDerivative;\n//# sourceMappingURL=asDerivative.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.batch = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\nfunction batch(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'batch',\n            pallet: 'utility',\n        },\n        ...info,\n    }, options);\n}\nexports.batch = batch;\n//# sourceMappingURL=batch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.batchAll = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Send a batch of dispatch calls and atomically execute them.\n * The whole transaction will rollback and fail if any of the calls fail.\n *\n * May be called from any origin.\n *\n * If origin is root then calls are dispatch without checking origin filter.\n * (This includes bypassing `frame_system::Config::BaseCallFilter`).\n *\n * @param args\n * @param info\n * @param options\n */\nfunction batchAll(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'batchAll',\n            pallet: 'utility',\n        },\n        ...info,\n    }, options);\n}\nexports.batchAll = batchAll;\n//# sourceMappingURL=batchAll.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./asDerivative\"), exports);\n__exportStar(require(\"./batch\"), exports);\n__exportStar(require(\"./batchAll\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./vest\"), exports);\n__exportStar(require(\"./vestOther\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.vest = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Unlock any vested funds of the sender account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction vest(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'vest',\n            pallet: 'vesting',\n        },\n        ...info,\n    }, options);\n}\nexports.vest = vest;\n//# sourceMappingURL=vest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.vestOther = void 0;\nconst txwrapper_core_1 = require(\"@substrate/txwrapper-core\");\n/**\n * Unlock any vested funds of a `target` account.\n *\n * @param args - Arguments specific to this method.\n * @param info - Information required to construct the transaction.\n * @param options - Registry and metadata used for constructing the method.\n */\nfunction vestOther(args, info, options) {\n    return (0, txwrapper_core_1.defineMethod)({\n        method: {\n            args,\n            name: 'vestOther',\n            pallet: 'vesting',\n        },\n        ...info,\n    }, options);\n}\nexports.vestOther = vestOther;\n//# sourceMappingURL=vestOther.js.map","// baseline estimates, used to improve performance\nvar TX_EMPTY_SIZE = 4 + 1 + 1 + 4\nvar TX_INPUT_BASE = 32 + 4 + 1 + 4\nvar TX_INPUT_PUBKEYHASH = 107\nvar TX_OUTPUT_BASE = 8 + 1\nvar TX_OUTPUT_PUBKEYHASH = 25\nvar OP_RETURN_OVERHEAD = 1 + 8 + 1\n\nfunction inputBytes (input) {\n  return TX_INPUT_BASE + (input.script ? input.script.length : TX_INPUT_PUBKEYHASH)\n}\n\nfunction outputBytes (output) {\n  if (output.script) {\n    return OP_RETURN_OVERHEAD + output.script.length + (output.script.length >= 74 ? 2 : 1);\n  }\n  return TX_OUTPUT_BASE + (output.script ? output.script.length : TX_OUTPUT_PUBKEYHASH)\n}\n\nfunction dustThreshold (output, feeRate) {\n  /* ... classify the output for input estimate  */\n  return inputBytes({}) * 3\n}\n\nfunction transactionBytes (inputs, outputs) {\n  return TX_EMPTY_SIZE +\n    inputs.reduce(function (a, x) { return a + inputBytes(x) }, 0) +\n    outputs.reduce(function (a, x) { return a + outputBytes(x) }, 0)\n}\n\nfunction uintOrNaN (v) {\n  if (typeof v !== 'number') return NaN\n  if (!isFinite(v)) return NaN\n  if (Math.floor(v) !== v) return NaN\n  if (v < 0) return NaN\n  return v\n}\n\nfunction sumForgiving (range) {\n  return range.reduce(function (a, x) { return a + (isFinite(x.value) ? x.value : 0) }, 0)\n}\n\nfunction sumOrNaN (range) {\n  return range.reduce(function (a, x) { return a + uintOrNaN(x.value) }, 0)\n}\n\nvar BLANK_OUTPUT = outputBytes({})\n\nfunction finalize (inputs, outputs, feeRate) {\n  var bytesAccum = transactionBytes(inputs, outputs)\n  var feeAfterExtraOutput = feeRate * (bytesAccum + BLANK_OUTPUT)\n  var remainderAfterExtraOutput = sumOrNaN(inputs) - (sumOrNaN(outputs) + feeAfterExtraOutput)\n\n  // is it worth a change output?\n  if (remainderAfterExtraOutput > dustThreshold({}, feeRate)) {\n    outputs = outputs.concat({ value: remainderAfterExtraOutput })\n  }\n\n  var fee = sumOrNaN(inputs) - sumOrNaN(outputs)\n  if (!isFinite(fee)) return { fee: feeRate * bytesAccum }\n\n  return {\n    inputs: inputs,\n    outputs: outputs,\n    fee: fee\n  }\n}\n\nmodule.exports = {\n  dustThreshold: dustThreshold,\n  finalize: finalize,\n  inputBytes: inputBytes,\n  outputBytes: outputBytes,\n  sumOrNaN: sumOrNaN,\n  sumForgiving: sumForgiving,\n  transactionBytes: transactionBytes,\n  uintOrNaN: uintOrNaN\n}\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/api-base', path: (({ url: getAbsoluteUrl('ules/@polkadot/api-base/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/api-base/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/api-base/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/api-base/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '11.3.1' };\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/api-augment', path: (({ url: getAbsoluteUrl('ules/@polkadot/api-augment/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/api-augment/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/api-augment/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/api-augment/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '11.3.1' };\n","import { packageInfo as baseInfo } from '@polkadot/api-base/packageInfo';\nimport { packageInfo as typesInfo } from '@polkadot/types/packageInfo';\nimport { packageInfo as codecInfo } from '@polkadot/types-codec/packageInfo';\nimport { detectPackage } from '@polkadot/util';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, [baseInfo, codecInfo, typesInfo]);\n","import { packageInfo as utilInfo } from '@polkadot/util/packageInfo';\nimport { packageInfo as cryptoInfo } from '@polkadot/util-crypto/packageInfo';\nexport default [utilInfo, cryptoInfo];\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/keyring', path: (({ url: getAbsoluteUrl('ules/@polkadot/keyring/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/keyring/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/keyring/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/keyring/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.6.2' };\n","import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n","export const PKCS8_DIVIDER = new Uint8Array([161, 35, 3, 33, 0]);\nexport const PKCS8_HEADER = new Uint8Array([48, 83, 2, 1, 1, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32]);\nexport const PUB_LENGTH = 32;\nexport const SALT_LENGTH = 32;\nexport const SEC_LENGTH = 64;\nexport const SEED_LENGTH = 32;\n","import { u8aEq } from '@polkadot/util';\nimport { jsonDecryptData } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER, PUB_LENGTH, SEC_LENGTH, SEED_LENGTH } from './defaults.js';\nconst SEED_OFFSET = PKCS8_HEADER.length;\nexport function decodePair(passphrase, encrypted, _encType) {\n    const encType = Array.isArray(_encType) || _encType === undefined\n        ? _encType\n        : [_encType];\n    const decrypted = jsonDecryptData(encrypted, passphrase, encType);\n    const header = decrypted.subarray(0, PKCS8_HEADER.length);\n    if (!u8aEq(header, PKCS8_HEADER)) {\n        throw new Error('Invalid Pkcs8 header found in body');\n    }\n    let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + SEC_LENGTH);\n    let divOffset = SEED_OFFSET + SEC_LENGTH;\n    let divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n    // old-style, we have the seed here\n    if (!u8aEq(divider, PKCS8_DIVIDER)) {\n        divOffset = SEED_OFFSET + SEED_LENGTH;\n        secretKey = decrypted.subarray(SEED_OFFSET, divOffset);\n        divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n        if (!u8aEq(divider, PKCS8_DIVIDER)) {\n            throw new Error('Invalid Pkcs8 divider found in body');\n        }\n    }\n    const pubOffset = divOffset + PKCS8_DIVIDER.length;\n    const publicKey = decrypted.subarray(pubOffset, pubOffset + PUB_LENGTH);\n    return {\n        publicKey,\n        secretKey\n    };\n}\n","import { objectSpread, u8aConcat, u8aEmpty, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { blake2AsU8a, ed25519PairFromSeed as ed25519FromSeed, ed25519Sign, ethereumEncode, keccakAsU8a, keyExtractPath, keyFromPath, secp256k1Compress, secp256k1Expand, secp256k1PairFromSeed as secp256k1FromSeed, secp256k1Sign, signatureVerify, sr25519PairFromSeed as sr25519FromSeed, sr25519Sign, sr25519VrfSign, sr25519VrfVerify } from '@polkadot/util-crypto';\nimport { decodePair } from './decode.js';\nimport { encodePair } from './encode.js';\nimport { pairToJson } from './toJson.js';\nconst SIG_TYPE_NONE = new Uint8Array();\nconst TYPE_FROM_SEED = {\n    ecdsa: secp256k1FromSeed,\n    ed25519: ed25519FromSeed,\n    ethereum: secp256k1FromSeed,\n    sr25519: sr25519FromSeed\n};\nconst TYPE_PREFIX = {\n    ecdsa: new Uint8Array([2]),\n    ed25519: new Uint8Array([0]),\n    ethereum: new Uint8Array([2]),\n    sr25519: new Uint8Array([1])\n};\nconst TYPE_SIGNATURE = {\n    ecdsa: (m, p) => secp256k1Sign(m, p, 'blake2'),\n    ed25519: ed25519Sign,\n    ethereum: (m, p) => secp256k1Sign(m, p, 'keccak'),\n    sr25519: sr25519Sign\n};\nconst TYPE_ADDRESS = {\n    ecdsa: (p) => p.length > 32 ? blake2AsU8a(p) : p,\n    ed25519: (p) => p,\n    ethereum: (p) => p.length === 20 ? p : keccakAsU8a(secp256k1Expand(p)),\n    sr25519: (p) => p\n};\nfunction isLocked(secretKey) {\n    return !secretKey || u8aEmpty(secretKey);\n}\nfunction vrfHash(proof, context, extra) {\n    return blake2AsU8a(u8aConcat(context || '', extra || '', proof));\n}\n/**\n * @name createPair\n * @summary Creates a keyring pair object\n * @description Creates a keyring pair object with provided account public key, metadata, and encoded arguments.\n * The keyring pair stores the account state including the encoded address and associated metadata.\n *\n * It has properties whose values are functions that may be called to perform account actions:\n *\n * - `address` function retrieves the address associated with the account.\n * - `decodedPkcs8` function is called with the account passphrase and account encoded public key.\n * It decodes the encoded public key using the passphrase provided to obtain the decoded account public key\n * and associated secret key that are then available in memory, and changes the account address stored in the\n * state of the pair to correspond to the address of the decoded public key.\n * - `encodePkcs8` function when provided with the correct passphrase associated with the account pair\n * and when the secret key is in memory (when the account pair is not locked) it returns an encoded\n * public key of the account.\n * - `meta` is the metadata that is stored in the state of the pair, either when it was originally\n * created or set via `setMeta`.\n * - `publicKey` returns the public key stored in memory for the pair.\n * - `sign` may be used to return a signature by signing a provided message with the secret\n * key (if it is in memory) using Nacl.\n * - `toJson` calls another `toJson` function and provides the state of the pair,\n * it generates arguments to be passed to the other `toJson` function including an encoded public key of the account\n * that it generates using the secret key from memory (if it has been made available in memory)\n * and the optionally provided passphrase argument. It passes a third boolean argument to `toJson`\n * indicating whether the public key has been encoded or not (if a passphrase argument was provided then it is encoded).\n * The `toJson` function that it calls returns a JSON object with properties including the `address`\n * and `meta` that are assigned with the values stored in the corresponding state variables of the account pair,\n * an `encoded` property that is assigned with the encoded public key in hex format, and an `encoding`\n * property that indicates whether the public key value of the `encoded` property is encoded or not.\n */\nexport function createPair({ toSS58, type }, { publicKey, secretKey }, meta = {}, encoded = null, encTypes) {\n    const decodePkcs8 = (passphrase, userEncoded) => {\n        const decoded = decodePair(passphrase, userEncoded || encoded, encTypes);\n        if (decoded.secretKey.length === 64) {\n            publicKey = decoded.publicKey;\n            secretKey = decoded.secretKey;\n        }\n        else {\n            const pair = TYPE_FROM_SEED[type](decoded.secretKey);\n            publicKey = pair.publicKey;\n            secretKey = pair.secretKey;\n        }\n    };\n    const recode = (passphrase) => {\n        isLocked(secretKey) && encoded && decodePkcs8(passphrase, encoded);\n        encoded = encodePair({ publicKey, secretKey }, passphrase); // re-encode, latest version\n        encTypes = undefined; // swap to defaults, latest version follows\n        return encoded;\n    };\n    const encodeAddress = () => {\n        const raw = TYPE_ADDRESS[type](publicKey);\n        return type === 'ethereum'\n            ? ethereumEncode(raw)\n            : toSS58(raw);\n    };\n    return {\n        get address() {\n            return encodeAddress();\n        },\n        get addressRaw() {\n            const raw = TYPE_ADDRESS[type](publicKey);\n            return type === 'ethereum'\n                ? raw.slice(-20)\n                : raw;\n        },\n        get isLocked() {\n            return isLocked(secretKey);\n        },\n        get meta() {\n            return meta;\n        },\n        get publicKey() {\n            return publicKey;\n        },\n        get type() {\n            return type;\n        },\n        // eslint-disable-next-line sort-keys\n        decodePkcs8,\n        derive: (suri, meta) => {\n            if (type === 'ethereum') {\n                throw new Error('Unable to derive on this keypair');\n            }\n            else if (isLocked(secretKey)) {\n                throw new Error('Cannot derive on a locked keypair');\n            }\n            const { path } = keyExtractPath(suri);\n            const derived = keyFromPath({ publicKey, secretKey }, path, type);\n            return createPair({ toSS58, type }, derived, meta, null);\n        },\n        encodePkcs8: (passphrase) => {\n            return recode(passphrase);\n        },\n        lock: () => {\n            secretKey = new Uint8Array();\n        },\n        setMeta: (additional) => {\n            meta = objectSpread({}, meta, additional);\n        },\n        sign: (message, options = {}) => {\n            if (isLocked(secretKey)) {\n                throw new Error('Cannot sign with a locked key pair');\n            }\n            return u8aConcat(options.withType\n                ? TYPE_PREFIX[type]\n                : SIG_TYPE_NONE, TYPE_SIGNATURE[type](u8aToU8a(message), { publicKey, secretKey }));\n        },\n        toJson: (passphrase) => {\n            // NOTE: For ecdsa and ethereum, the publicKey cannot be extracted from the address. For these\n            // pass the hex-encoded publicKey through to the address portion of the JSON (before decoding)\n            // unless the publicKey is already an address\n            const address = ['ecdsa', 'ethereum'].includes(type)\n                ? publicKey.length === 20\n                    ? u8aToHex(publicKey)\n                    : u8aToHex(secp256k1Compress(publicKey))\n                : encodeAddress();\n            return pairToJson(type, { address, meta }, recode(passphrase), !!passphrase);\n        },\n        unlock: (passphrase) => {\n            return decodePkcs8(passphrase);\n        },\n        verify: (message, signature, signerPublic) => {\n            return signatureVerify(message, signature, TYPE_ADDRESS[type](u8aToU8a(signerPublic))).isValid;\n        },\n        vrfSign: (message, context, extra) => {\n            if (isLocked(secretKey)) {\n                throw new Error('Cannot sign with a locked key pair');\n            }\n            if (type === 'sr25519') {\n                return sr25519VrfSign(message, { secretKey }, context, extra);\n            }\n            const proof = TYPE_SIGNATURE[type](u8aToU8a(message), { publicKey, secretKey });\n            return u8aConcat(vrfHash(proof, context, extra), proof);\n        },\n        vrfVerify: (message, vrfResult, signerPublic, context, extra) => {\n            if (type === 'sr25519') {\n                return sr25519VrfVerify(message, vrfResult, publicKey, context, extra);\n            }\n            const result = signatureVerify(message, u8aConcat(TYPE_PREFIX[type], vrfResult.subarray(32)), TYPE_ADDRESS[type](u8aToU8a(signerPublic)));\n            return result.isValid && u8aEq(vrfResult.subarray(0, 32), vrfHash(vrfResult.subarray(32), context, extra));\n        }\n    };\n}\n","import { u8aConcat } from '@polkadot/util';\nimport { naclEncrypt, scryptEncode, scryptToU8a } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER } from './defaults.js';\nexport function encodePair({ publicKey, secretKey }, passphrase) {\n    if (!secretKey) {\n        throw new Error('Expected a valid secretKey to be passed to encode');\n    }\n    const encoded = u8aConcat(PKCS8_HEADER, secretKey, PKCS8_DIVIDER, publicKey);\n    if (!passphrase) {\n        return encoded;\n    }\n    const { params, password, salt } = scryptEncode(passphrase);\n    const { encrypted, nonce } = naclEncrypt(encoded, password.subarray(0, 32));\n    return u8aConcat(scryptToU8a(salt, params), nonce, encrypted);\n}\n","import { objectSpread } from '@polkadot/util';\nimport { jsonEncryptFormat } from '@polkadot/util-crypto';\nexport function pairToJson(type, { address, meta }, encoded, isEncrypted) {\n    return objectSpread(jsonEncryptFormat(encoded, ['pkcs8', type], isEncrypted), {\n        address,\n        meta\n    });\n}\n","export const DEV_PHRASE = 'bottom drive obey lake curtain smoke basket hold race lonely fit walk';\nexport const DEV_SEED = '0xfac7959dbfe72f052e5a0c3c8d6530f202b02fd8f9f5ca3580ec8deb7797479e';\n","import { isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nexport class Pairs {\n    __internal__map = {};\n    add(pair) {\n        this.__internal__map[decodeAddress(pair.address).toString()] = pair;\n        return pair;\n    }\n    all() {\n        return Object.values(this.__internal__map);\n    }\n    get(address) {\n        const pair = this.__internal__map[decodeAddress(address).toString()];\n        if (!pair) {\n            throw new Error(`Unable to retrieve keypair '${isU8a(address) || isHex(address)\n                ? u8aToHex(u8aToU8a(address))\n                : address}'`);\n        }\n        return pair;\n    }\n    remove(address) {\n        delete this.__internal__map[decodeAddress(address).toString()];\n    }\n}\n","import { hexToU8a, isHex, stringToU8a } from '@polkadot/util';\nimport { base64Decode, decodeAddress, ed25519PairFromSeed as ed25519FromSeed, encodeAddress, ethereumEncode, hdEthereum, keyExtractSuri, keyFromPath, mnemonicToLegacySeed, mnemonicToMiniSecret, secp256k1PairFromSeed as secp256k1FromSeed, sr25519PairFromSeed as sr25519FromSeed } from '@polkadot/util-crypto';\nimport { createPair } from './pair/index.js';\nimport { DEV_PHRASE } from './defaults.js';\nimport { Pairs } from './pairs.js';\nconst PairFromSeed = {\n    ecdsa: (seed) => secp256k1FromSeed(seed),\n    ed25519: (seed) => ed25519FromSeed(seed),\n    ethereum: (seed) => secp256k1FromSeed(seed),\n    sr25519: (seed) => sr25519FromSeed(seed)\n};\nfunction pairToPublic({ publicKey }) {\n    return publicKey;\n}\n/**\n * # @polkadot/keyring\n *\n * ## Overview\n *\n * @name Keyring\n * @summary Keyring management of user accounts\n * @description Allows generation of keyring pairs from a variety of input combinations, such as\n * json object containing account address or public key, account metadata, and account encoded using\n * `addFromJson`, or by providing those values as arguments separately to `addFromAddress`,\n * or by providing the mnemonic (seed phrase) and account metadata as arguments to `addFromMnemonic`.\n * Stores the keyring pairs in a keyring pair dictionary. Removal of the keyring pairs from the keyring pair\n * dictionary is achieved using `removePair`. Retrieval of all the stored pairs via `getPairs` or perform\n * lookup of a pair for a given account address or public key using `getPair`. JSON metadata associated with\n * an account may be obtained using `toJson` accompanied by the account passphrase.\n */\nexport class Keyring {\n    __internal__pairs;\n    __internal__type;\n    __internal__ss58;\n    decodeAddress = decodeAddress;\n    constructor(options = {}) {\n        options.type = options.type || 'ed25519';\n        if (!['ecdsa', 'ethereum', 'ed25519', 'sr25519'].includes(options.type || 'undefined')) {\n            throw new Error(`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${options.type || 'unknown'}`);\n        }\n        this.__internal__pairs = new Pairs();\n        this.__internal__ss58 = options.ss58Format;\n        this.__internal__type = options.type;\n    }\n    /**\n     * @description retrieve the pairs (alias for getPairs)\n     */\n    get pairs() {\n        return this.getPairs();\n    }\n    /**\n     * @description retrieve the publicKeys (alias for getPublicKeys)\n     */\n    get publicKeys() {\n        return this.getPublicKeys();\n    }\n    /**\n     * @description Returns the type of the keyring, ed25519, sr25519 or ecdsa\n     */\n    get type() {\n        return this.__internal__type;\n    }\n    /**\n     * @name addPair\n     * @summary Stores an account, given a keyring pair, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     */\n    addPair(pair) {\n        return this.__internal__pairs.add(pair);\n    }\n    /**\n     * @name addFromAddress\n     * @summary Stores an account, given an account address, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     * @description Allows user to explicitly provide separate inputs including account address or public key, and optionally\n     * the associated account metadata, and the default encoded value as arguments (that may be obtained from the json file\n     * of an account backup), and then generates a keyring pair from them that it passes to\n     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n     */\n    addFromAddress(address, meta = {}, encoded = null, type = this.type, ignoreChecksum, encType) {\n        const publicKey = this.decodeAddress(address, ignoreChecksum);\n        return this.addPair(createPair({ toSS58: this.encodeAddress, type }, { publicKey, secretKey: new Uint8Array() }, meta, encoded, encType));\n    }\n    /**\n     * @name addFromJson\n     * @summary Stores an account, given JSON data, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     * @description Allows user to provide a json object argument that contains account information (that may be obtained from the json file\n     * of an account backup), and then generates a keyring pair from it that it passes to\n     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n     */\n    addFromJson(json, ignoreChecksum) {\n        return this.addPair(this.createFromJson(json, ignoreChecksum));\n    }\n    /**\n     * @name addFromMnemonic\n     * @summary Stores an account, given a mnemonic, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     * @description Allows user to provide a mnemonic (seed phrase that is provided when account is originally created)\n     * argument and a metadata argument that contains account information (that may be obtained from the json file\n     * of an account backup), and then generates a keyring pair from it that it passes to\n     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n     */\n    addFromMnemonic(mnemonic, meta = {}, type = this.type) {\n        return this.addFromUri(mnemonic, meta, type);\n    }\n    /**\n     * @name addFromPair\n     * @summary Stores an account created from an explicit publicKey/secreteKey combination\n     */\n    addFromPair(pair, meta = {}, type = this.type) {\n        return this.addPair(this.createFromPair(pair, meta, type));\n    }\n    /**\n     * @name addFromSeed\n     * @summary Stores an account, given seed data, as a Key/Value (public key, pair) in Keyring Pair Dictionary\n     * @description Stores in a keyring pair dictionary the public key of the pair as a key and the pair as the associated value.\n     * Allows user to provide the account seed as an argument, and then generates a keyring pair from it that it passes to\n     * `addPair` to store in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.\n     */\n    addFromSeed(seed, meta = {}, type = this.type) {\n        return this.addPair(createPair({ toSS58: this.encodeAddress, type }, PairFromSeed[type](seed), meta, null));\n    }\n    /**\n     * @name addFromUri\n     * @summary Creates an account via an suri\n     * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed). The secret can be a hex string, mnemonic phrase or a string (to be padded)\n     */\n    addFromUri(suri, meta = {}, type = this.type) {\n        return this.addPair(this.createFromUri(suri, meta, type));\n    }\n    /**\n     * @name createFromJson\n     * @description Creates a pair from a JSON keyfile\n     */\n    createFromJson({ address, encoded, encoding: { content, type, version }, meta }, ignoreChecksum) {\n        if (version === '3' && content[0] !== 'pkcs8') {\n            throw new Error(`Unable to decode non-pkcs8 type, [${content.join(',')}] found}`);\n        }\n        const cryptoType = version === '0' || !Array.isArray(content)\n            ? this.type\n            : content[1];\n        const encType = !Array.isArray(type)\n            ? [type]\n            : type;\n        if (!['ed25519', 'sr25519', 'ecdsa', 'ethereum'].includes(cryptoType)) {\n            throw new Error(`Unknown crypto type ${cryptoType}`);\n        }\n        // Here the address and publicKey are 32 bytes and isomorphic. This is why the address field needs to be the public key for ethereum type pairs\n        const publicKey = isHex(address)\n            ? hexToU8a(address)\n            : this.decodeAddress(address, ignoreChecksum);\n        const decoded = isHex(encoded)\n            ? hexToU8a(encoded)\n            : base64Decode(encoded);\n        return createPair({ toSS58: this.encodeAddress, type: cryptoType }, { publicKey, secretKey: new Uint8Array() }, meta, decoded, encType);\n    }\n    /**\n     * @name createFromPair\n     * @summary Creates a pair from an explicit publicKey/secreteKey combination\n     */\n    createFromPair(pair, meta = {}, type = this.type) {\n        return createPair({ toSS58: this.encodeAddress, type }, pair, meta, null);\n    }\n    /**\n     * @name createFromUri\n     * @summary Creates a Keypair from an suri\n     * @description This creates a pair from the suri, but does not add it to the keyring\n     */\n    createFromUri(_suri, meta = {}, type = this.type) {\n        // here we only aut-add the dev phrase if we have a hard-derived path\n        const suri = _suri.startsWith('//')\n            ? `${DEV_PHRASE}${_suri}`\n            : _suri;\n        const { derivePath, password, path, phrase } = keyExtractSuri(suri);\n        let seed;\n        const isPhraseHex = isHex(phrase, 256);\n        if (isPhraseHex) {\n            seed = hexToU8a(phrase);\n        }\n        else {\n            const parts = phrase.split(' ');\n            if ([12, 15, 18, 21, 24].includes(parts.length)) {\n                seed = type === 'ethereum'\n                    ? mnemonicToLegacySeed(phrase, '', false, 64)\n                    : mnemonicToMiniSecret(phrase, password);\n            }\n            else {\n                if (phrase.length > 32) {\n                    throw new Error('specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes');\n                }\n                seed = stringToU8a(phrase.padEnd(32));\n            }\n        }\n        const derived = type === 'ethereum'\n            ? isPhraseHex\n                ? PairFromSeed[type](seed) // for eth, if the private key is provided as suri, it must be derived only once\n                : hdEthereum(seed, derivePath.substring(1))\n            : keyFromPath(PairFromSeed[type](seed), path, type);\n        return createPair({ toSS58: this.encodeAddress, type }, derived, meta, null);\n    }\n    /**\n     * @name encodeAddress\n     * @description Encodes the input into an ss58 representation\n     */\n    encodeAddress = (address, ss58Format) => {\n        return this.type === 'ethereum'\n            ? ethereumEncode(address)\n            : encodeAddress(address, ss58Format ?? this.__internal__ss58);\n    };\n    /**\n     * @name getPair\n     * @summary Retrieves an account keyring pair from the Keyring Pair Dictionary, given an account address\n     * @description Returns a keyring pair value from the keyring pair dictionary by performing\n     * a key lookup using the provided account address or public key (after decoding it).\n     */\n    getPair(address) {\n        return this.__internal__pairs.get(address);\n    }\n    /**\n     * @name getPairs\n     * @summary Retrieves all account keyring pairs from the Keyring Pair Dictionary\n     * @description Returns an array list of all the keyring pair values that are stored in the keyring pair dictionary.\n     */\n    getPairs() {\n        return this.__internal__pairs.all();\n    }\n    /**\n     * @name getPublicKeys\n     * @summary Retrieves Public Keys of all Keyring Pairs stored in the Keyring Pair Dictionary\n     * @description Returns an array list of all the public keys associated with each of the keyring pair values that are stored in the keyring pair dictionary.\n     */\n    getPublicKeys() {\n        return this.__internal__pairs.all().map(pairToPublic);\n    }\n    /**\n     * @name removePair\n     * @description Deletes the provided input address or public key from the stored Keyring Pair Dictionary.\n     */\n    removePair(address) {\n        this.__internal__pairs.remove(address);\n    }\n    /**\n     * @name setSS58Format;\n     * @description Sets the ss58 format for the keyring\n     */\n    setSS58Format(ss58) {\n        this.__internal__ss58 = ss58;\n    }\n    /**\n     * @name toJson\n     * @summary Returns a JSON object associated with the input argument that contains metadata assocated with an account\n     * @description Returns a JSON object containing the metadata associated with an account\n     * when valid address or public key and when the account passphrase is provided if the account secret\n     * is not already unlocked and available in memory. Note that in [Polkadot-JS Apps](https://github.com/polkadot-js/apps) the user\n     * may backup their account to a JSON file that contains this information.\n     */\n    toJson(address, passphrase) {\n        return this.__internal__pairs.get(address).toJson(passphrase);\n    }\n}\n","import { hexToU8a } from '@polkadot/util';\nimport { createPair } from './pair/index.js';\nimport { Keyring } from './keyring.js';\nexport const PAIRSSR25519 = [\n    {\n        p: '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n        s: '0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011', // nosemgrep\n        seed: 'Alice',\n        type: 'sr25519'\n    },\n    {\n        p: '0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f',\n        s: '0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd', // nosemgrep\n        seed: 'Alice//stash',\n        type: 'sr25519'\n    },\n    {\n        p: '0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48',\n        s: '0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325', // nosemgrep\n        seed: 'Bob',\n        type: 'sr25519'\n    },\n    {\n        p: '0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e',\n        s: '0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde', // nosemgrep\n        seed: 'Bob//stash',\n        type: 'sr25519'\n    },\n    {\n        p: '0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22',\n        s: '0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c', // nosemgrep\n        seed: 'Charlie',\n        type: 'sr25519'\n    },\n    {\n        p: '0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20',\n        s: '0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568', // nosemgrep\n        seed: 'Dave',\n        type: 'sr25519'\n    },\n    {\n        p: '0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e',\n        s: '0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587', // nosemgrep\n        seed: 'Eve',\n        type: 'sr25519'\n    },\n    {\n        p: '0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c',\n        s: '0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426', // nosemgrep\n        seed: 'Ferdie',\n        type: 'sr25519'\n    }\n];\nexport const PAIRSETHEREUM = [\n    {\n        name: 'Alith',\n        p: '0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f',\n        s: '0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Baltathar',\n        p: '0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518',\n        s: '0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Charleth',\n        p: '0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e',\n        s: '0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Dorothy',\n        p: '0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c',\n        s: '0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Ethan',\n        p: '0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa',\n        s: '0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Faith',\n        p: '0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74',\n        s: '0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df', // nosemgrep\n        type: 'ethereum'\n    }\n];\nfunction createMeta(name, seed) {\n    if (!name && !seed) {\n        throw new Error('Testing pair should have either a name or a seed');\n    }\n    return {\n        isTesting: true,\n        name: name || seed?.replace('//', '_').toLowerCase()\n    };\n}\n/**\n * @name testKeyring\n * @summary Create an instance of Keyring pre-populated with locked test accounts\n * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)\n * are available on the dev chain and each test account is initialized with DOT funds.\n */\nexport function createTestKeyring(options = {}, isDerived = true) {\n    const keyring = new Keyring(options);\n    const pairs = options.type === 'ethereum'\n        ? PAIRSETHEREUM\n        : PAIRSSR25519;\n    for (const { name, p, s, seed, type } of pairs) {\n        const meta = createMeta(name, seed);\n        const pair = !isDerived && !name && seed\n            ? keyring.addFromUri(seed, meta, options.type)\n            : keyring.addPair(createPair({ toSS58: keyring.encodeAddress, type }, { publicKey: hexToU8a(p), secretKey: hexToU8a(s) }, meta));\n        pair.lock = () => {\n            // we don't have lock/unlock functionality here\n        };\n    }\n    return keyring;\n}\n","const publicKey = new Uint8Array(32);\nconst address = '5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM';\nconst meta = {\n    isTesting: true,\n    name: 'nobody'\n};\nconst json = {\n    address,\n    encoded: '',\n    encoding: {\n        content: ['pkcs8', 'ed25519'],\n        type: 'none',\n        version: '0'\n    },\n    meta\n};\nconst pair = {\n    address,\n    addressRaw: publicKey,\n    decodePkcs8: (_passphrase, _encoded) => undefined,\n    derive: (_suri, _meta) => pair,\n    encodePkcs8: (_passphrase) => new Uint8Array(0),\n    isLocked: true,\n    lock: () => {\n        // no locking, it is always locked\n    },\n    meta,\n    publicKey,\n    setMeta: (_meta) => undefined,\n    sign: (_message) => new Uint8Array(64),\n    toJson: (_passphrase) => json,\n    type: 'ed25519',\n    unlock: (_passphrase) => undefined,\n    verify: (_message, _signature) => false,\n    vrfSign: (_message, _context, _extra) => new Uint8Array(96),\n    vrfVerify: (_message, _vrfResult, _context, _extra) => false\n};\nexport function nobody() {\n    return pair;\n}\n","import { nobody } from './pair/nobody.js';\nimport { createTestKeyring } from './testing.js';\nexport function createTestPairs(options, isDerived = true) {\n    const keyring = createTestKeyring(options, isDerived);\n    const pairs = keyring.getPairs();\n    const map = { nobody: nobody() };\n    for (const p of pairs) {\n        if (p.meta.name) {\n            map[p.meta.name] = p;\n        }\n    }\n    return map;\n}\n","import './detectPackage.js';\nimport { Keyring } from './bundle.js';\nexport * from './bundle.js';\nexport default Keyring;\n","import { compactToU8a, u8aConcatStrict, u8aToHex } from '@polkadot/util';\nimport { compareArray } from '../utils/compareArray.js';\n/**\n * @name AbstractArray\n * @description\n * This manages codec arrays. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n * @noInheritDoc\n */\nexport class AbstractArray extends Array {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    /**\n     * @description This ensures that operators such as clice, filter, map, etc. return\n     * new Array instances (without this we need to apply overrides)\n     */\n    static get [Symbol.species]() {\n        return Array;\n    }\n    constructor(registry, length) {\n        super(length);\n        this.registry = registry;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        // We need to loop through all entries since they may have a variable length themselves,\n        // e.g. when a Vec or Compact is contained withing, it has a variable length based on data\n        const count = this.length;\n        let total = compactToU8a(count).length;\n        for (let i = 0; i < count; i++) {\n            total += this[i].encodedLength;\n        }\n        return total;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.length === 0;\n    }\n    /**\n     * @description The length of the value\n     */\n    get length() {\n        // only included here since we ignore inherited docs\n        return super.length;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareArray(this, other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            inner: this.inspectInner(),\n            outer: [compactToU8a(this.length)]\n        };\n    }\n    /**\n     * @internal\n     * @description Internal per-item inspection of internal values\n     */\n    inspectInner() {\n        const count = this.length;\n        const inner = new Array(count);\n        for (let i = 0; i < count; i++) {\n            inner[i] = this[i].inspect();\n        }\n        return inner;\n    }\n    /**\n     * @description Converts the Object to an standard JavaScript Array\n     */\n    toArray() {\n        return Array.from(this);\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        const count = this.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            result[i] = this[i] && this[i].toHuman(isExtended, disableAscii);\n        }\n        return result;\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        const count = this.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            // We actually log inside the U8a decoding and use JSON.stringify(...), which\n            // means that the Vec may be partially populated (same applies to toHuman, same check)\n            result[i] = this[i] && this[i].toJSON();\n        }\n        return result;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        const count = this.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            result[i] = this[i] && this[i].toPrimitive(disableAscii);\n        }\n        return result;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        const count = this.length;\n        const result = new Array(count);\n        for (let i = 0; i < count; i++) {\n            result[i] = this[i].toString();\n        }\n        return `[${result.join(', ')}]`;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = this.toU8aInner();\n        return isBare\n            ? u8aConcatStrict(encoded)\n            : u8aConcatStrict([compactToU8a(this.length), ...encoded]);\n    }\n    /**\n     * @internal\n     * @description Internal per-item SCALE encoding of contained values\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8aInner(isBare) {\n        const count = this.length;\n        const encoded = new Array(count);\n        for (let i = 0; i < count; i++) {\n            encoded[i] = this[i].toU8a(isBare);\n        }\n        return encoded;\n    }\n}\n","/**\n * @name Base\n * @description A type extends the Base class, when it holds a value\n */\nexport class AbstractBase {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__raw;\n    constructor(registry, value, initialU8aLength) {\n        this.initialU8aLength = initialU8aLength;\n        this.__internal__raw = value;\n        this.registry = registry;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description returns the inner (wrapped value)\n     */\n    get inner() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.__internal__raw.isEmpty;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.__internal__raw.eq(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return this.__internal__raw.inspect();\n    }\n    /**\n     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n     */\n    toHex(isLe) {\n        return this.__internal__raw.toHex(isLe);\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        return this.__internal__raw.toHuman(isExtended, disableAscii);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.__internal__raw.toJSON();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        return this.__internal__raw.toPrimitive(disableAscii);\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.__internal__raw.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return this.__internal__raw.toU8a(isBare);\n    }\n    /**\n     * @description Returns the inner wrapped value (equivalent to valueOf)\n     */\n    unwrap() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description Returns the inner wrapped value\n     */\n    valueOf() {\n        return this.__internal__raw;\n    }\n}\n","import { BN, BN_BILLION, BN_HUNDRED, BN_MILLION, BN_QUINTILL, bnToBn, bnToHex, bnToU8a, formatBalance, formatNumber, hexToBn, isBigInt, isBn, isFunction, isHex, isNumber, isObject, isString, isU8a, u8aToBn, u8aToNumber } from '@polkadot/util';\nexport const DEFAULT_UINT_BITS = 64;\nconst MAX_NUMBER_BITS = 52;\nconst MUL_P = new BN(10000);\nconst FORMATTERS = [\n    ['Perquintill', BN_QUINTILL],\n    ['Perbill', BN_BILLION],\n    ['Permill', BN_MILLION],\n    ['Percent', BN_HUNDRED]\n];\nfunction isToBn(value) {\n    return isFunction(value.toBn);\n}\nfunction toPercentage(value, divisor) {\n    return `${(value.mul(MUL_P).div(divisor).toNumber() / 100).toFixed(2)}%`;\n}\n/** @internal */\nfunction decodeAbstractInt(value, isNegative) {\n    if (isNumber(value)) {\n        if (!Number.isInteger(value) || value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER) {\n            throw new Error('Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1');\n        }\n        return value;\n    }\n    else if (isString(value)) {\n        if (isHex(value, -1, true)) {\n            return hexToBn(value, { isLe: false, isNegative }).toString();\n        }\n        if (value.includes('.') || value.includes(',') || value.includes('e')) {\n            throw new Error('String should not contain decimal points or scientific notation');\n        }\n        return value;\n    }\n    else if (isBn(value) || isBigInt(value)) {\n        return value.toString();\n    }\n    else if (isObject(value)) {\n        if (isToBn(value)) {\n            return value.toBn().toString();\n        }\n        // Allow the construction from an object with a single top-level key. This means that\n        // single key objects can be treated equivalently to numbers, assuming they meet the\n        // specific requirements. (This is useful in Weights 1.5 where Objects are compact)\n        const keys = Object.keys(value);\n        if (keys.length !== 1) {\n            throw new Error('Unable to construct number from multi-key object');\n        }\n        return decodeAbstractInt(value[keys[0]], isNegative);\n    }\n    else if (!value) {\n        return 0;\n    }\n    throw new Error(`Unable to create BN from unknown type ${typeof value}`);\n}\n/**\n * @name AbstractInt\n * @ignore\n * @noInheritDoc\n */\nexport class AbstractInt extends BN {\n    registry;\n    encodedLength;\n    isUnsigned;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__bitLength;\n    constructor(registry, value = 0, bitLength = DEFAULT_UINT_BITS, isSigned = false) {\n        // Construct via a string/number, which will be passed in the BN constructor.\n        // It would be ideal to actually return a BN, but there is an issue:\n        // https://github.com/indutny/bn.js/issues/206\n        super(\n        // shortcut isU8a as used in SCALE decoding\n        isU8a(value)\n            ? bitLength <= 48\n                ? u8aToNumber(value.subarray(0, bitLength / 8), { isNegative: isSigned })\n                : u8aToBn(value.subarray(0, bitLength / 8), { isLe: true, isNegative: isSigned }).toString()\n            : decodeAbstractInt(value, isSigned));\n        this.registry = registry;\n        this.__internal__bitLength = bitLength;\n        this.encodedLength = this.__internal__bitLength / 8;\n        this.initialU8aLength = this.__internal__bitLength / 8;\n        this.isUnsigned = !isSigned;\n        const isNegative = this.isNeg();\n        const maxBits = bitLength - (isSigned && !isNegative ? 1 : 0);\n        if (isNegative && !isSigned) {\n            throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);\n        }\n        else if (super.bitLength() > maxBits) {\n            throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${maxBits}`);\n        }\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is a zero value (align elsewhere)\n     */\n    get isEmpty() {\n        return this.isZero();\n    }\n    /**\n     * @description Returns the number of bits in the value\n     */\n    bitLength() {\n        return this.__internal__bitLength;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    eq(other) {\n        // Here we are actually overriding the built-in .eq to take care of both\n        // number and BN inputs (no `.eqn` needed) - numbers will be converted\n        return super.eq(isHex(other)\n            ? hexToBn(other.toString(), { isLe: false, isNegative: !this.isUnsigned })\n            : bnToBn(other));\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description True if this value is the max of the type\n     */\n    isMax() {\n        const u8a = this.toU8a().filter((b) => b === 0xff);\n        return u8a.length === (this.__internal__bitLength / 8);\n    }\n    /**\n     * @description Returns a BigInt representation of the number\n     */\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    /**\n     * @description Returns the BN representation of the number. (Compatibility)\n     */\n    toBn() {\n        return this;\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex(isLe = false) {\n        // For display/JSON, this is BE, for compare, use isLe\n        return bnToHex(this, {\n            bitLength: this.bitLength(),\n            isLe,\n            isNegative: !this.isUnsigned\n        });\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(_isExpanded) {\n        const rawType = this.toRawType();\n        if (rawType === 'Balance') {\n            return this.isMax()\n                ? 'everything'\n                // FIXME In the case of multiples we need some way of detecting which instance this belongs\n                // to. as it stands we will always format (incorrectly) against the first token defined\n                : formatBalance(this, { decimals: this.registry.chainDecimals[0], withSi: true, withUnit: this.registry.chainTokens[0] });\n        }\n        const [, divisor] = FORMATTERS.find(([type]) => type === rawType) || [];\n        return divisor\n            ? toPercentage(this, divisor)\n            : formatNumber(this);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON(onlyHex = false) {\n        // FIXME this return type should by string | number, however BN returns string\n        // Options here are\n        //   - super.bitLength() - the actual used bits, use hex when close to MAX_SAFE_INTEGER\n        //   - this.__internal__bitLength - the max used bits, use hex when larger than native Rust type\n        return onlyHex || (this.__internal__bitLength > 128) || (super.bitLength() > MAX_NUMBER_BITS)\n            ? this.toHex()\n            : this.toNumber();\n    }\n    /**\n     * @description Returns the value in a primitive form, either number when <= 52 bits, or string otherwise\n     */\n    toPrimitive() {\n        return super.bitLength() > MAX_NUMBER_BITS\n            ? this.toString()\n            : this.toNumber();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        // NOTE In the case of balances, which have a special meaning on the UI\n        // and can be interpreted differently, return a specific value for it so\n        // underlying it always matches (no matter which length it actually is)\n        return this instanceof this.registry.createClassUnsafe('Balance')\n            ? 'Balance'\n            : `${this.isUnsigned ? 'u' : 'i'}${this.bitLength()}`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     * @param base The base to use for the conversion\n     */\n    toString(base) {\n        // only included here since we do not inherit docs\n        return super.toString(base);\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return bnToU8a(this, {\n            bitLength: this.bitLength(),\n            isLe: true,\n            isNegative: !this.isUnsigned\n        });\n    }\n}\n","import { compactFromU8a, compactFromU8aLim, compactToU8a, identity, isU8a } from '@polkadot/util';\nimport { typeToConstructor } from '../utils/index.js';\nfunction decodeCompact(registry, Type, value) {\n    if (isU8a(value)) {\n        const [decodedLength, bn] = (value[0] & 0b11) < 0b11\n            ? compactFromU8aLim(value)\n            : compactFromU8a(value);\n        return [new Type(registry, bn), decodedLength];\n    }\n    else if (value instanceof Compact) {\n        const raw = value.unwrap();\n        return raw instanceof Type\n            ? [raw, 0]\n            : [new Type(registry, raw), 0];\n    }\n    else if (value instanceof Type) {\n        return [value, 0];\n    }\n    return [new Type(registry, value), 0];\n}\n/**\n * @name Compact\n * @description\n * A compact length-encoding codec wrapper. It performs the same function as Length, however\n * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly\n * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking\n * a number and making the compact representation thereof\n */\nexport class Compact {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__Type;\n    __internal__raw;\n    constructor(registry, Type, value = 0, { definition, setDefinition = identity } = {}) {\n        this.registry = registry;\n        this.__internal__Type = definition || setDefinition(typeToConstructor(registry, Type));\n        const [raw, decodedLength] = decodeCompact(registry, this.__internal__Type, value);\n        this.initialU8aLength = decodedLength;\n        this.__internal__raw = raw;\n    }\n    static with(Type) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => (definition = d);\n        return class extends Compact {\n            constructor(registry, value) {\n                super(registry, Type, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.__internal__raw.isEmpty;\n    }\n    /**\n     * @description Returns the number of bits in the value\n     */\n    bitLength() {\n        return this.__internal__raw.bitLength();\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.__internal__raw.eq(other instanceof Compact\n            ? other.__internal__raw\n            : other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a BigInt representation of the number\n     */\n    toBigInt() {\n        return this.__internal__raw.toBigInt();\n    }\n    /**\n     * @description Returns the BN representation of the number\n     */\n    toBn() {\n        return this.__internal__raw.toBn();\n    }\n    /**\n     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n     */\n    toHex(isLe) {\n        return this.__internal__raw.toHex(isLe);\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        return this.__internal__raw.toHuman(isExtended, disableAscii);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.__internal__raw.toJSON();\n    }\n    /**\n     * @description Returns the number representation for the value\n     */\n    toNumber() {\n        return this.__internal__raw.toNumber();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        return this.__internal__raw.toPrimitive(disableAscii);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `Compact<${this.registry.getClassName(this.__internal__Type) || this.__internal__raw.toRawType()}>`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.__internal__raw.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return compactToU8a(this.__internal__raw.toBn());\n    }\n    /**\n     * @description Returns the embedded [[UInt]] or [[Moment]] value\n     */\n    unwrap() {\n        return this.__internal__raw;\n    }\n}\n","/**\n * @name DoNotConstruct\n * @description\n * An unknown type that fails on construction with the type info\n */\nexport class DoNotConstruct {\n    registry;\n    createdAtHash;\n    isStorageFallback;\n    __internal__neverError;\n    constructor(registry, typeName = 'DoNotConstruct') {\n        this.registry = registry;\n        this.__internal__neverError = new Error(`DoNotConstruct: Cannot construct unknown type ${typeName}`);\n        throw this.__internal__neverError;\n    }\n    static with(typeName) {\n        return class extends DoNotConstruct {\n            constructor(registry) {\n                super(registry, typeName);\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Checks if the value is an empty value (always true)\n     */\n    get isEmpty() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    eq() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    inspect() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toHex() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toHuman() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toJSON() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toPrimitive() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toRawType() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toString() {\n        throw this.__internal__neverError;\n    }\n    /**\n     * @description Unimplemented\n     */\n    toU8a() {\n        throw this.__internal__neverError;\n    }\n}\n","import { identity, isHex, isNumber, isObject, isString, isU8a, objectProperties, stringCamelCase, stringify, stringPascalCase, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { mapToTypeMap, typesToMap } from '../utils/index.js';\nimport { Null } from './Null.js';\nfunction isRustEnum(def) {\n    const defValues = Object.values(def);\n    if (defValues.some((v) => isNumber(v))) {\n        if (!defValues.every((v) => isNumber(v) && v >= 0 && v <= 255)) {\n            throw new Error('Invalid number-indexed enum definition');\n        }\n        return false;\n    }\n    return true;\n}\nfunction extractDef(registry, _def) {\n    const def = {};\n    let isBasic;\n    let isIndexed;\n    if (Array.isArray(_def)) {\n        for (let i = 0, count = _def.length; i < count; i++) {\n            def[_def[i]] = { Type: Null, index: i };\n        }\n        isBasic = true;\n        isIndexed = false;\n    }\n    else if (isRustEnum(_def)) {\n        const [Types, keys] = mapToTypeMap(registry, _def);\n        for (let i = 0, count = keys.length; i < count; i++) {\n            def[keys[i]] = { Type: Types[i], index: i };\n        }\n        isBasic = !Object.values(def).some(({ Type }) => Type !== Null);\n        isIndexed = false;\n    }\n    else {\n        const entries = Object.entries(_def);\n        for (let i = 0, count = entries.length; i < count; i++) {\n            const [key, index] = entries[i];\n            def[key] = { Type: Null, index };\n        }\n        isBasic = true;\n        isIndexed = true;\n    }\n    return {\n        def,\n        isBasic,\n        isIndexed\n    };\n}\nfunction getEntryType(def, checkIdx) {\n    const values = Object.values(def);\n    for (let i = 0, count = values.length; i < count; i++) {\n        const { Type, index } = values[i];\n        if (index === checkIdx) {\n            return Type;\n        }\n    }\n    throw new Error(`Unable to create Enum via index ${checkIdx}, in ${Object.keys(def).join(', ')}`);\n}\nfunction createFromU8a(registry, def, index, value) {\n    const Type = getEntryType(def, index);\n    return {\n        index,\n        value: new Type(registry, value)\n    };\n}\nfunction createFromValue(registry, def, index = 0, value) {\n    const Type = getEntryType(def, index);\n    return {\n        index,\n        value: value instanceof Type\n            ? value\n            : new Type(registry, value)\n    };\n}\nfunction decodeFromJSON(registry, def, key, value) {\n    // JSON comes in the form of { \"<type (camelCase)>\": \"<value for type>\" }, here we\n    // additionally force to lower to ensure forward compat\n    const keys = Object.keys(def).map((k) => k.toLowerCase());\n    const keyLower = key.toLowerCase();\n    const index = keys.indexOf(keyLower);\n    if (index === -1) {\n        throw new Error(`Cannot map Enum JSON, unable to find '${key}' in ${keys.join(', ')}`);\n    }\n    try {\n        return createFromValue(registry, def, Object.values(def)[index].index, value);\n    }\n    catch (error) {\n        throw new Error(`Enum(${key}):: ${error.message}`);\n    }\n}\nfunction decodeEnum(registry, def, value, index) {\n    // NOTE We check the index path first, before looking at values - this allows treating\n    // the optional indexes before anything else, more-specific > less-specific\n    if (isNumber(index)) {\n        return createFromValue(registry, def, index, value);\n    }\n    else if (isU8a(value) || isHex(value)) {\n        const u8a = u8aToU8a(value);\n        // nested, we don't want to match isObject below\n        if (u8a.length) {\n            return createFromU8a(registry, def, u8a[0], u8a.subarray(1));\n        }\n    }\n    else if (value instanceof Enum) {\n        return createFromValue(registry, def, value.index, value.value);\n    }\n    else if (isNumber(value)) {\n        return createFromValue(registry, def, value);\n    }\n    else if (isString(value)) {\n        return decodeFromJSON(registry, def, value.toString());\n    }\n    else if (isObject(value)) {\n        const key = Object.keys(value)[0];\n        return decodeFromJSON(registry, def, key, value[key]);\n    }\n    // Worst-case scenario, return the first with default\n    return createFromValue(registry, def, Object.values(def)[0].index);\n}\n/**\n * @name Enum\n * @description\n * This implements an enum, that based on the value wraps a different type. It is effectively\n * an extension to enum where the value type is determined by the actual index.\n */\nexport class Enum {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__def;\n    __internal__entryIndex;\n    __internal__indexes;\n    __internal__isBasic;\n    __internal__isIndexed;\n    __internal__raw;\n    constructor(registry, Types, value, index, { definition, setDefinition = identity } = {}) {\n        const { def, isBasic, isIndexed } = definition || setDefinition(extractDef(registry, Types));\n        // shortcut isU8a as used in SCALE decoding\n        const decoded = isU8a(value) && value.length && !isNumber(index)\n            ? createFromU8a(registry, def, value[0], value.subarray(1))\n            : decodeEnum(registry, def, value, index);\n        this.registry = registry;\n        this.__internal__def = def;\n        this.__internal__isBasic = isBasic;\n        this.__internal__isIndexed = isIndexed;\n        this.__internal__indexes = Object.values(def).map(({ index }) => index);\n        this.__internal__entryIndex = this.__internal__indexes.indexOf(decoded.index);\n        this.__internal__raw = decoded.value;\n        if (this.__internal__raw.initialU8aLength) {\n            this.initialU8aLength = 1 + this.__internal__raw.initialU8aLength;\n        }\n    }\n    static with(Types) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => definition = d;\n        return class extends Enum {\n            static {\n                const keys = Array.isArray(Types)\n                    ? Types\n                    : Object.keys(Types);\n                const count = keys.length;\n                const asKeys = new Array(count);\n                const isKeys = new Array(count);\n                for (let i = 0; i < count; i++) {\n                    const name = stringPascalCase(keys[i]);\n                    asKeys[i] = `as${name}`;\n                    isKeys[i] = `is${name}`;\n                }\n                objectProperties(this.prototype, isKeys, (_, i, self) => self.type === keys[i]);\n                objectProperties(this.prototype, asKeys, (k, i, self) => {\n                    if (self.type !== keys[i]) {\n                        throw new Error(`Cannot convert '${self.type}' via ${k}`);\n                    }\n                    return self.value;\n                });\n            }\n            constructor(registry, value, index) {\n                super(registry, Types, value, index, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return 1 + this.__internal__raw.encodedLength;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description The index of the enum value\n     */\n    get index() {\n        return this.__internal__indexes[this.__internal__entryIndex];\n    }\n    /**\n     * @description The value of the enum\n     */\n    get inner() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description true if this is a basic enum (no values)\n     */\n    get isBasic() {\n        return this.__internal__isBasic;\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.__internal__raw.isEmpty;\n    }\n    /**\n     * @description Checks if the Enum points to a [[Null]] type\n     */\n    get isNone() {\n        return this.__internal__raw instanceof Null;\n    }\n    /**\n     * @description The available keys for this enum\n     */\n    get defIndexes() {\n        return this.__internal__indexes;\n    }\n    /**\n     * @description The available keys for this enum\n     */\n    get defKeys() {\n        return Object.keys(this.__internal__def);\n    }\n    /**\n     * @description The name of the type this enum value represents\n     */\n    get type() {\n        return this.defKeys[this.__internal__entryIndex];\n    }\n    /**\n     * @description The value of the enum\n     */\n    get value() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        // cater for the case where we only pass the enum index\n        if (isU8a(other)) {\n            return !this.toU8a().some((entry, index) => entry !== other[index]);\n        }\n        else if (isNumber(other)) {\n            return this.toNumber() === other;\n        }\n        else if (this.__internal__isBasic && isString(other)) {\n            return this.type === other;\n        }\n        else if (isHex(other)) {\n            return this.toHex() === other;\n        }\n        else if (other instanceof Enum) {\n            return this.index === other.index && this.value.eq(other.value);\n        }\n        else if (isObject(other)) {\n            return this.value.eq(other[this.type]);\n        }\n        // compare the actual wrapper value\n        return this.value.eq(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        if (this.__internal__isBasic) {\n            return { outer: [new Uint8Array([this.index])] };\n        }\n        const { inner, outer = [] } = this.__internal__raw.inspect();\n        return {\n            inner,\n            outer: [new Uint8Array([this.index]), ...outer]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        return this.__internal__isBasic || this.isNone\n            ? this.type\n            : { [this.type]: this.__internal__raw.toHuman(isExtended, disableAscii) };\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.__internal__isBasic\n            ? this.type\n            : { [stringCamelCase(this.type)]: this.__internal__raw.toJSON() };\n    }\n    /**\n     * @description Returns the number representation for the value\n     */\n    toNumber() {\n        return this.index;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        return this.__internal__isBasic\n            ? this.type\n            : { [stringCamelCase(this.type)]: this.__internal__raw.toPrimitive(disableAscii) };\n    }\n    /**\n     * @description Returns a raw struct representation of the enum types\n     */\n    _toRawStruct() {\n        if (this.__internal__isBasic) {\n            return this.__internal__isIndexed\n                ? this.defKeys.reduce((out, key, index) => {\n                    out[key] = this.__internal__indexes[index];\n                    return out;\n                }, {})\n                : this.defKeys;\n        }\n        const entries = Object.entries(this.__internal__def);\n        return typesToMap(this.registry, entries.reduce((out, [key, { Type }], i) => {\n            out[0][i] = Type;\n            out[1][i] = key;\n            return out;\n        }, [new Array(entries.length), new Array(entries.length)]));\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return stringify({ _enum: this._toRawStruct() });\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.isNone\n            ? this.type\n            : stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return isBare\n            ? this.__internal__raw.toU8a(isBare)\n            : u8aConcatStrict([\n                new Uint8Array([this.index]),\n                this.__internal__raw.toU8a(isBare)\n            ]);\n    }\n}\n","import { AbstractInt } from '../abstract/Int.js';\n/**\n * @name Int\n * @description\n * A generic signed integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\nexport class Int extends AbstractInt {\n    constructor(registry, value = 0, bitLength) {\n        super(registry, value, bitLength, true);\n    }\n    static with(bitLength, typeName) {\n        return class extends Int {\n            constructor(registry, value) {\n                super(registry, value, bitLength);\n            }\n            toRawType() {\n                return typeName || super.toRawType();\n            }\n        };\n    }\n}\n","import { isNull } from '@polkadot/util';\n/**\n * @name Null\n * @description\n * Implements a type that does not contain anything (apart from `null`)\n */\nexport class Null {\n    encodedLength = 0;\n    isEmpty = true;\n    registry;\n    createdAtHash;\n    initialU8aLength = 0;\n    isStorageFallback;\n    constructor(registry) {\n        this.registry = registry;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        throw new Error('.hash is not implemented on Null');\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return other instanceof Null || isNull(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {};\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return '0x';\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return null;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return null;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Null';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return '';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return new Uint8Array();\n    }\n}\n","import { identity, isCodec, isNull, isU8a, isUndefined, u8aToHex } from '@polkadot/util';\nimport { typeToConstructor } from '../utils/index.js';\nimport { Null } from './Null.js';\nclass None extends Null {\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'None';\n    }\n}\n/** @internal */\nfunction decodeOption(registry, Type, value) {\n    if (value instanceof Type) {\n        // don't re-create, use as it (which also caters for derived types)\n        return value;\n    }\n    else if (value instanceof Option) {\n        if (value.value instanceof Type) {\n            // same instance, return it\n            return value.value;\n        }\n        else if (value.isNone) {\n            // internal is None, we are also none\n            return new None(registry);\n        }\n        // convert the actual value into known\n        return new Type(registry, value.value);\n    }\n    else if (isNull(value) || isUndefined(value) || value === '0x' || value instanceof None) {\n        // anything empty we pass as-is\n        return new None(registry);\n    }\n    else if (isU8a(value)) {\n        // the isU8a check happens last in the if-tree - since the wrapped value\n        // may be an instance of it, so Type and Option checks go in first\n        return !value.length || value[0] === 0\n            ? new None(registry)\n            : new Type(registry, value.subarray(1));\n    }\n    return new Type(registry, value);\n}\n/**\n * @name Option\n * @description\n * An Option is an optional field. Basically the first byte indicates that there is\n * is value to follow. If the byte is `1` there is an actual value. So the Option\n * implements that - decodes, checks for optionality and wraps the required structure\n * with a value if/as required/found.\n */\nexport class Option {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__Type;\n    __internal__raw;\n    constructor(registry, typeName, value, { definition, setDefinition = identity } = {}) {\n        const Type = definition || setDefinition(typeToConstructor(registry, typeName));\n        const decoded = isU8a(value) && value.length && !isCodec(value)\n            ? value[0] === 0\n                ? new None(registry)\n                : new Type(registry, value.subarray(1))\n            : decodeOption(registry, Type, value);\n        this.registry = registry;\n        this.__internal__Type = Type;\n        this.__internal__raw = decoded;\n        if (decoded?.initialU8aLength) {\n            this.initialU8aLength = 1 + decoded.initialU8aLength;\n        }\n    }\n    static with(Type) {\n        let definition;\n        const setDefinition = (d) => {\n            definition = d;\n            return d;\n        };\n        return class extends Option {\n            constructor(registry, value) {\n                super(registry, Type, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        // boolean byte (has value, doesn't have) along with wrapped length\n        return 1 + this.__internal__raw.encodedLength;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the Option has no value\n     */\n    get isEmpty() {\n        return this.isNone;\n    }\n    /**\n     * @description Checks if the Option has no value\n     */\n    get isNone() {\n        return this.__internal__raw instanceof None;\n    }\n    /**\n     * @description Checks if the Option has a value\n     */\n    get isSome() {\n        return !this.isNone;\n    }\n    /**\n     * @description The actual value for the Option\n     */\n    get value() {\n        return this.__internal__raw;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        if (other instanceof Option) {\n            return (this.isSome === other.isSome) && this.value.eq(other.value);\n        }\n        return this.value.eq(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        if (this.isNone) {\n            return { outer: [new Uint8Array([0])] };\n        }\n        const { inner, outer = [] } = this.__internal__raw.inspect();\n        return {\n            inner,\n            outer: [new Uint8Array([1]), ...outer]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        // This attempts to align with the JSON encoding - actually in this case\n        // the isSome value is correct, however the `isNone` may be problematic\n        return this.isNone\n            ? '0x'\n            : u8aToHex(this.toU8a().subarray(1));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        return this.__internal__raw.toHuman(isExtended, disableAscii);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.isNone\n            ? null\n            : this.__internal__raw.toJSON();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        return this.isNone\n            ? null\n            : this.__internal__raw.toPrimitive(disableAscii);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType(isBare) {\n        const wrapped = this.registry.getClassName(this.__internal__Type) || new this.__internal__Type(this.registry).toRawType();\n        return isBare\n            ? wrapped\n            : `Option<${wrapped}>`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.__internal__raw.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        if (isBare) {\n            return this.__internal__raw.toU8a(true);\n        }\n        const u8a = new Uint8Array(this.encodedLength);\n        if (this.isSome) {\n            u8a.set([1]);\n            u8a.set(this.__internal__raw.toU8a(), 1);\n        }\n        return u8a;\n    }\n    /**\n     * @description Returns the value that the Option represents (if available), throws if null\n     */\n    unwrap() {\n        if (this.isNone) {\n            throw new Error('Option: unwrapping a None value');\n        }\n        return this.__internal__raw;\n    }\n    /**\n     * @description Returns the value that the Option represents (if available) or defaultValue if none\n     * @param defaultValue The value to return if the option isNone\n     */\n    unwrapOr(defaultValue) {\n        return this.isSome\n            ? this.unwrap()\n            : defaultValue;\n    }\n    /**\n     * @description Returns the value that the Option represents (if available) or defaultValue if none\n     * @param defaultValue The value to return if the option isNone\n     */\n    unwrapOrDefault() {\n        return this.isSome\n            ? this.unwrap()\n            : new this.__internal__Type(this.registry);\n    }\n}\n","import { Enum } from './Enum.js';\n/**\n * @name Result\n * @description\n * A Result maps to the Rust Result type, that can either wrap a success or error value\n */\nexport class Result extends Enum {\n    constructor(registry, Ok, Err, value) {\n        // NOTE This is order-dependent, Ok (with index 0) needs to be first\n        // eslint-disable-next-line sort-keys\n        super(registry, { Ok, Err }, value);\n    }\n    static with(Types) {\n        return class extends Result {\n            constructor(registry, value) {\n                super(registry, Types.Ok, Types.Err, value);\n            }\n        };\n    }\n    /**\n     * @description Returns the wrapper Err value (if isErr)\n     */\n    get asErr() {\n        if (!this.isErr) {\n            throw new Error('Cannot extract Err value from Ok result, check isErr first');\n        }\n        return this.value;\n    }\n    /**\n     * @description Returns the wrapper Ok value (if isOk)\n     */\n    get asOk() {\n        if (!this.isOk) {\n            throw new Error('Cannot extract Ok value from Err result, check isOk first');\n        }\n        return this.value;\n    }\n    /**\n     * @description Checks if the Result has no value\n     */\n    get isEmpty() {\n        return this.isOk && this.value.isEmpty;\n    }\n    /**\n     * @description Checks if the Result wraps an Err value\n     */\n    get isErr() {\n        return !this.isOk;\n    }\n    /**\n     * @description Checks if the Result wraps an Ok value\n     */\n    get isOk() {\n        return this.index === 0;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        const Types = this._toRawStruct();\n        return `Result<${Types.Ok},${Types.Err}>`;\n    }\n}\n","import { identity, isFunction, isHex, isString, isU8a, stringify, u8aConcatStrict, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from '../abstract/Array.js';\nimport { decodeU8a, mapToTypeMap, typesToConstructors, typeToConstructor } from '../utils/index.js';\n/** @internal */\nfunction decodeTuple(registry, result, value, Classes) {\n    if (Array.isArray(value)) {\n        const Types = Classes[0];\n        for (let i = 0, count = Types.length; i < count; i++) {\n            try {\n                const entry = value?.[i];\n                result[i] = entry instanceof Types[i]\n                    ? entry\n                    : new Types[i](registry, entry);\n            }\n            catch (error) {\n                throw new Error(`Tuple: failed on ${i}:: ${error.message}`);\n            }\n        }\n        return [result, 0];\n    }\n    else if (isHex(value)) {\n        return decodeU8a(registry, result, u8aToU8a(value), Classes);\n    }\n    else if (!value || !result.length) {\n        const Types = Classes[0];\n        for (let i = 0, count = Types.length; i < count; i++) {\n            result[i] = new Types[i](registry);\n        }\n        return [result, 0];\n    }\n    throw new Error(`Expected array input to Tuple decoding, found ${typeof value}: ${stringify(value)}`);\n}\n/**\n * @name Tuple\n * @description\n * A Tuple defines an anonymous fixed-length array, where each element has its\n * own type. It extends the base JS `Array` object.\n */\nexport class Tuple extends AbstractArray {\n    __internal__Types;\n    constructor(registry, Types, value, { definition, setDefinition = identity } = {}) {\n        const Classes = definition || setDefinition(Array.isArray(Types)\n            ? [typesToConstructors(registry, Types), []]\n            : isFunction(Types) || isString(Types)\n                ? [[typeToConstructor(registry, Types)], []]\n                : mapToTypeMap(registry, Types));\n        super(registry, Classes[0].length);\n        this.initialU8aLength = (isU8a(value)\n            ? decodeU8a(registry, this, value, Classes)\n            : decodeTuple(registry, this, value, Classes))[1];\n        this.__internal__Types = Classes;\n    }\n    static with(Types) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => definition = d;\n        return class extends Tuple {\n            constructor(registry, value) {\n                super(registry, Types, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let total = 0;\n        for (let i = 0, count = this.length; i < count; i++) {\n            total += this[i].encodedLength;\n        }\n        return total;\n    }\n    /**\n     * @description The types definition of the tuple\n     */\n    get Types() {\n        return this.__internal__Types[1].length\n            ? this.__internal__Types[1]\n            : this.__internal__Types[0].map((T) => new T(this.registry).toRawType());\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            inner: this.inspectInner()\n        };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        const types = this.__internal__Types[0].map((T) => this.registry.getClassName(T) || new T(this.registry).toRawType());\n        return `(${types.join(',')})`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        // Overwrite the default toString representation of Array.\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return u8aConcatStrict(this.toU8aInner(isBare));\n    }\n}\n","import { AbstractInt } from '../abstract/Int.js';\n/**\n * @name UInt\n * @description\n * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\nexport class UInt extends AbstractInt {\n    static with(bitLength, typeName) {\n        return class extends UInt {\n            constructor(registry, value) {\n                super(registry, value, bitLength);\n            }\n            toRawType() {\n                return typeName || super.toRawType();\n            }\n        };\n    }\n}\n","import { compactFromU8aLim, identity, isHex, isU8a, logger, stringify, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from '../abstract/Array.js';\nimport { decodeU8aVec, typeToConstructor } from '../utils/index.js';\nconst MAX_LENGTH = 64 * 1024;\nconst l = logger('Vec');\nfunction decodeVecLength(value) {\n    if (Array.isArray(value)) {\n        return [value, value.length, 0];\n    }\n    else if (isU8a(value) || isHex(value)) {\n        const u8a = u8aToU8a(value);\n        const [startAt, length] = compactFromU8aLim(u8a);\n        if (length > MAX_LENGTH) {\n            throw new Error(`Vec length ${length.toString()} exceeds ${MAX_LENGTH}`);\n        }\n        return [u8a, length, startAt];\n    }\n    else if (!value) {\n        return [null, 0, 0];\n    }\n    throw new Error(`Expected array/hex input to Vec<*> decoding, found ${typeof value}: ${stringify(value)}`);\n}\nexport function decodeVec(registry, result, value, startAt, Type) {\n    if (Array.isArray(value)) {\n        const count = result.length;\n        for (let i = 0; i < count; i++) {\n            // 26/08/2022 this is actually a false positive - after recent eslint upgdates\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const entry = value[i];\n            try {\n                result[i] = entry instanceof Type\n                    ? entry\n                    : new Type(registry, entry);\n            }\n            catch (error) {\n                l.error(`Unable to decode on index ${i}`, error.message);\n                throw error;\n            }\n        }\n        return [0, 0];\n    }\n    else if (!value) {\n        return [0, 0];\n    }\n    // we don't need more checks, we already limited it via the length decoding\n    return decodeU8aVec(registry, result, u8aToU8a(value), startAt, Type);\n}\n/**\n * @name Vec\n * @description\n * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows\n * construction with the passed `Type` in the constructor. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n */\nexport class Vec extends AbstractArray {\n    __internal__Type;\n    constructor(registry, Type, value = [], { definition, setDefinition = identity } = {}) {\n        const [decodeFrom, length, startAt] = decodeVecLength(value);\n        super(registry, length);\n        this.__internal__Type = definition || setDefinition(typeToConstructor(registry, Type));\n        this.initialU8aLength = (isU8a(decodeFrom)\n            ? decodeU8aVec(registry, this, decodeFrom, startAt, this.__internal__Type)\n            : decodeVec(registry, this, decodeFrom, startAt, this.__internal__Type))[0];\n    }\n    static with(Type) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => (definition = d);\n        return class extends Vec {\n            constructor(registry, value) {\n                super(registry, Type, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The type for the items\n     */\n    get Type() {\n        return this.__internal__Type.name;\n    }\n    /**\n     * @description Finds the index of the value in the array\n     */\n    indexOf(other) {\n        // convert type first, this removes overhead from the eq\n        const check = other instanceof this.__internal__Type\n            ? other\n            : new this.__internal__Type(this.registry, other);\n        for (let i = 0, count = this.length; i < count; i++) {\n            if (check.eq(this[i])) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `Vec<${this.registry.getClassName(this.__internal__Type) || new this.__internal__Type(this.registry).toRawType()}>`;\n    }\n}\n","import { identity, isU8a, u8aConcatStrict } from '@polkadot/util';\nimport { AbstractArray } from '../abstract/Array.js';\nimport { decodeU8aVec, typeToConstructor } from '../utils/index.js';\nimport { decodeVec } from './Vec.js';\n/**\n * @name VecFixed\n * @description\n * This manages codec arrays of a fixed length\n */\nexport class VecFixed extends AbstractArray {\n    __internal__Type;\n    constructor(registry, Type, length, value = [], { definition, setDefinition = identity } = {}) {\n        super(registry, length);\n        this.__internal__Type = definition || setDefinition(typeToConstructor(registry, Type));\n        this.initialU8aLength = (isU8a(value)\n            ? decodeU8aVec(registry, this, value, 0, this.__internal__Type)\n            : decodeVec(registry, this, value, 0, this.__internal__Type))[1];\n    }\n    static with(Type, length) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => (definition = d);\n        return class extends VecFixed {\n            constructor(registry, value) {\n                super(registry, Type, length, value, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The type for the items\n     */\n    get Type() {\n        return new this.__internal__Type(this.registry).toRawType();\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let total = 0;\n        for (let i = 0, count = this.length; i < count; i++) {\n            total += this[i].encodedLength;\n        }\n        return total;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            inner: this.inspectInner()\n        };\n    }\n    toU8a() {\n        // we override, we don't add the length prefix for ourselves, and at the same time we\n        // ignore isBare on entries, since they should be properly encoded at all times\n        const encoded = this.toU8aInner();\n        return encoded.length\n            ? u8aConcatStrict(encoded)\n            : new Uint8Array([]);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `[${this.Type};${this.length}]`;\n    }\n}\n","import { CodecMap } from './Map.js';\nexport class BTreeMap extends CodecMap {\n    static with(keyType, valType) {\n        return class extends BTreeMap {\n            constructor(registry, value) {\n                super(registry, keyType, valType, value, 'BTreeMap');\n            }\n        };\n    }\n}\n","import { compactFromU8aLim, compactToU8a, isHex, isU8a, logger, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareSet, decodeU8aVec, sortSet, typeToConstructor } from '../utils/index.js';\nconst l = logger('BTreeSet');\n/** @internal */\nfunction decodeSetFromU8a(registry, ValClass, u8a) {\n    const output = new Set();\n    const [offset, count] = compactFromU8aLim(u8a);\n    const result = new Array(count);\n    const [decodedLength] = decodeU8aVec(registry, result, u8a, offset, ValClass);\n    for (let i = 0; i < count; i++) {\n        output.add(result[i]);\n    }\n    return [ValClass, output, decodedLength];\n}\n/** @internal */\nfunction decodeSetFromSet(registry, ValClass, value) {\n    const output = new Set();\n    value.forEach((val) => {\n        try {\n            output.add((val instanceof ValClass) ? val : new ValClass(registry, val));\n        }\n        catch (error) {\n            l.error('Failed to decode key or value:', error.message);\n            throw error;\n        }\n    });\n    return [ValClass, output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Set<any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonSet\n * @internal\n */\nfunction decodeSet(registry, valType, value) {\n    const ValClass = typeToConstructor(registry, valType);\n    if (!value) {\n        return [ValClass, new Set(), 0];\n    }\n    else if (isU8a(value) || isHex(value)) {\n        return decodeSetFromU8a(registry, ValClass, u8aToU8a(value));\n    }\n    else if (Array.isArray(value) || value instanceof Set) {\n        return decodeSetFromSet(registry, ValClass, value);\n    }\n    throw new Error('BTreeSet: cannot decode type');\n}\nexport class BTreeSet extends Set {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__ValClass;\n    constructor(registry, valType, rawValue) {\n        const [ValClass, values, decodedLength] = decodeSet(registry, valType, rawValue);\n        super(sortSet(values));\n        this.registry = registry;\n        this.initialU8aLength = decodedLength;\n        this.__internal__ValClass = ValClass;\n    }\n    static with(valType) {\n        return class extends BTreeSet {\n            constructor(registry, value) {\n                super(registry, valType, value);\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let len = compactToU8a(this.size).length;\n        for (const v of this.values()) {\n            len += v.encodedLength;\n        }\n        return len;\n    }\n    /**\n     * @description Returns a hash of the value\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.size === 0;\n    }\n    /**\n     * @description The actual set values as a string[]\n     */\n    get strings() {\n        return [...super.values()].map((v) => v.toString());\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareSet(this, other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const inner = [];\n        for (const v of this.values()) {\n            inner.push(v.inspect());\n        }\n        return {\n            inner,\n            outer: [compactToU8a(this.size)]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        const json = [];\n        for (const v of this.values()) {\n            json.push(v.toHuman(isExtended, disableAscii));\n        }\n        return json;\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        const json = [];\n        for (const v of this.values()) {\n            json.push(v.toJSON());\n        }\n        return json;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `BTreeSet<${this.registry.getClassName(this.__internal__ValClass) || new this.__internal__ValClass(this.registry).toRawType()}>`;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        const json = [];\n        for (const v of this.values()) {\n            json.push(v.toPrimitive(disableAscii));\n        }\n        return json;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = [];\n        if (!isBare) {\n            encoded.push(compactToU8a(this.size));\n        }\n        for (const v of this.values()) {\n            encoded.push(v.toU8a(isBare));\n        }\n        return u8aConcatStrict(encoded);\n    }\n}\n","import { compactFromU8aLim, compactToU8a, isString, u8aConcatStrict, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\n/** @internal */\nfunction decodeBitVecU8a(value) {\n    if (!value?.length) {\n        return [0, new Uint8Array()];\n    }\n    // handle all other Uint8Array inputs, these do have a length prefix which is the number of bits encoded\n    const [offset, length] = compactFromU8aLim(value);\n    const total = offset + Math.ceil(length / 8);\n    if (total > value.length) {\n        throw new Error(`BitVec: required length less than remainder, expected at least ${total}, found ${value.length}`);\n    }\n    return [length, value.subarray(offset, total)];\n}\n/** @internal */\nfunction decodeBitVec(value) {\n    if (Array.isArray(value) || isString(value)) {\n        const u8a = u8aToU8a(value);\n        return [u8a.length / 8, u8a];\n    }\n    return decodeBitVecU8a(value);\n}\n/**\n * @name BitVec\n * @description\n * A BitVec that represents an array of bits. The bits are however stored encoded. The difference between this\n * and a normal Bytes would be that the length prefix indicates the number of bits encoded, not the bytes\n */\nexport class BitVec extends Raw {\n    __internal__decodedLength;\n    __internal__isMsb;\n    // In lieu of having the Msb/Lsb identifiers passed through, we default to assuming\n    // we are dealing with Lsb, which is the default (as of writing) BitVec format used\n    // in the Polkadot code (this only affects the toHuman displays)\n    constructor(registry, value, isMsb = false) {\n        const [decodedLength, u8a] = decodeBitVec(value);\n        super(registry, u8a);\n        this.__internal__decodedLength = decodedLength;\n        this.__internal__isMsb = isMsb;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.length + compactToU8a(this.__internal__decodedLength).length;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [compactToU8a(this.__internal__decodedLength), super.toU8a()]\n        };\n    }\n    /**\n     * @description Creates a boolean array of the bit values\n     */\n    toBoolArray() {\n        const map = [...this.toU8a(true)].map((v) => [\n            !!(v & 128),\n            !!(v & 64),\n            !!(v & 32),\n            !!(v & 16),\n            !!(v & 8),\n            !!(v & 4),\n            !!(v & 2),\n            !!(v & 1)\n        ]);\n        const count = map.length;\n        const result = new Array(8 * count);\n        for (let i = 0; i < count; i++) {\n            const off = i * 8;\n            const v = map[i];\n            for (let j = 0; j < 8; j++) {\n                result[off + j] = this.__internal__isMsb\n                    ? v[j]\n                    : v[7 - j];\n            }\n        }\n        return result;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return `0b${[...this.toU8a(true)]\n            .map((d) => `00000000${d.toString(2)}`.slice(-8))\n            .map((s) => this.__internal__isMsb ? s : s.split('').reverse().join(''))\n            .join('_')}`;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'BitVec';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const bitVec = super.toU8a(isBare);\n        return isBare\n            ? bitVec\n            : u8aConcatStrict([compactToU8a(this.__internal__decodedLength), bitVec]);\n    }\n}\n","import { compactAddLength, compactFromU8aLim, compactToU8a, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\nconst MAX_LENGTH = 10 * 1024 * 1024;\n/** @internal */\nfunction decodeBytesU8a(value) {\n    if (!value.length) {\n        return [new Uint8Array(), 0];\n    }\n    // handle all other Uint8Array inputs, these do have a length prefix\n    const [offset, length] = compactFromU8aLim(value);\n    const total = offset + length;\n    if (length > MAX_LENGTH) {\n        throw new Error(`Bytes length ${length.toString()} exceeds ${MAX_LENGTH}`);\n    }\n    else if (total > value.length) {\n        throw new Error(`Bytes: required length less than remainder, expected at least ${total}, found ${value.length}`);\n    }\n    return [value.subarray(offset, total), total];\n}\n/**\n * @name Bytes\n * @description\n * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array\n * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same\n * as what is found in [[Text]] and [[Vec]])\n */\nexport class Bytes extends Raw {\n    constructor(registry, value) {\n        const [u8a, decodedLength] = isU8a(value) && !(value instanceof Raw)\n            ? decodeBytesU8a(value)\n            : Array.isArray(value) || isString(value)\n                ? [u8aToU8a(value), 0]\n                : [value, 0];\n        super(registry, u8a, decodedLength);\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.length + compactToU8a(this.length).length;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect(isBare) {\n        const clength = compactToU8a(this.length);\n        return {\n            outer: isBare\n                ? [super.toU8a()]\n                : this.length\n                    ? [clength, super.toU8a()]\n                    : [clength]\n        };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Bytes';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return isBare\n            ? super.toU8a(isBare)\n            : compactAddLength(this);\n    }\n}\n","import { CodecMap } from './Map.js';\nexport class HashMap extends CodecMap {\n    static with(keyType, valType) {\n        return class extends HashMap {\n            constructor(registry, value) {\n                super(registry, keyType, valType, value);\n            }\n        };\n    }\n}\n","import { Option } from '../base/Option.js';\nimport { Tuple } from '../base/Tuple.js';\nimport { Vec } from '../base/Vec.js';\nimport { Struct } from '../native/Struct.js';\nconst EMPTY = new Uint8Array();\n/**\n * @name Linkage\n * @description The wrapper for the result from a LinkedMap\n */\nexport class Linkage extends Struct {\n    constructor(registry, Type, value) {\n        super(registry, {\n            previous: Option.with(Type),\n            // eslint-disable-next-line sort-keys\n            next: Option.with(Type)\n        }, value);\n    }\n    static withKey(Type) {\n        return class extends Linkage {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n    /**\n     * @description Returns the next item the Linkage is pointing to\n     */\n    get previous() {\n        return this.get('previous');\n    }\n    /**\n     * @description Returns the previous item the Linkage is pointing to\n     */\n    get next() {\n        return this.get('next');\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `Linkage<${this.next.toRawType(true)}>`;\n    }\n    /**\n     * @description Custom toU8a which with bare mode does not return the linkage if empty\n     */\n    toU8a(isBare) {\n        // As part of a storage query (where these appear), in the case of empty, the values\n        // are NOT populated by the node - follow the same logic, leaving it empty\n        return this.isEmpty\n            ? EMPTY\n            : super.toU8a(isBare);\n    }\n}\n/**\n * @name LinkageResult\n * @description A Linkage keys/Values tuple\n */\nexport class LinkageResult extends Tuple {\n    constructor(registry, [TypeKey, keys], [TypeValue, values]) {\n        super(registry, {\n            Keys: Vec.with(TypeKey),\n            Values: Vec.with(TypeValue)\n        }, [keys, values]);\n    }\n}\n","import { compactFromU8aLim, compactToU8a, isHex, isObject, isU8a, logger, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { AbstractArray } from '../abstract/Array.js';\nimport { Enum } from '../base/Enum.js';\nimport { Raw } from '../native/Raw.js';\nimport { Struct } from '../native/Struct.js';\nimport { compareMap, decodeU8a, sortMap, typeToConstructor } from '../utils/index.js';\nconst l = logger('Map');\n/** @internal */\nfunction decodeMapFromU8a(registry, KeyClass, ValClass, u8a) {\n    const output = new Map();\n    const [offset, count] = compactFromU8aLim(u8a);\n    const types = [];\n    for (let i = 0; i < count; i++) {\n        types.push(KeyClass, ValClass);\n    }\n    const [values, decodedLength] = decodeU8a(registry, new Array(types.length), u8a.subarray(offset), [types, []]);\n    for (let i = 0, count = values.length; i < count; i += 2) {\n        output.set(values[i], values[i + 1]);\n    }\n    return [KeyClass, ValClass, output, offset + decodedLength];\n}\n/** @internal */\nfunction decodeMapFromMap(registry, KeyClass, ValClass, value) {\n    const output = new Map();\n    for (const [key, val] of value.entries()) {\n        const isComplex = KeyClass.prototype instanceof AbstractArray ||\n            KeyClass.prototype instanceof Struct ||\n            KeyClass.prototype instanceof Enum;\n        try {\n            output.set(key instanceof KeyClass\n                ? key\n                : new KeyClass(registry, isComplex && typeof key === 'string' ? JSON.parse(key) : key), val instanceof ValClass\n                ? val\n                : new ValClass(registry, val));\n        }\n        catch (error) {\n            l.error('Failed to decode key or value:', error.message);\n            throw error;\n        }\n    }\n    return [KeyClass, ValClass, output, 0];\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param KeyClass - Type of the map key\n * @param ValClass - Type of the map value\n * @param value - Value to decode, one of:\n * - null\n * - undefined\n * - hex\n * - Uint8Array\n * - Map<any, any>, where both key and value types are either\n *   constructors or decodeable values for their types.\n * @param jsonMap\n * @internal\n */\nfunction decodeMap(registry, keyType, valType, value) {\n    const KeyClass = typeToConstructor(registry, keyType);\n    const ValClass = typeToConstructor(registry, valType);\n    if (!value) {\n        return [KeyClass, ValClass, new Map(), 0];\n    }\n    else if (isU8a(value) || isHex(value)) {\n        return decodeMapFromU8a(registry, KeyClass, ValClass, u8aToU8a(value));\n    }\n    else if (value instanceof Map) {\n        return decodeMapFromMap(registry, KeyClass, ValClass, value);\n    }\n    else if (isObject(value)) {\n        return decodeMapFromMap(registry, KeyClass, ValClass, new Map(Object.entries(value)));\n    }\n    throw new Error('Map: cannot decode type');\n}\nexport class CodecMap extends Map {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__KeyClass;\n    __internal__ValClass;\n    __internal__type;\n    constructor(registry, keyType, valType, rawValue, type = 'HashMap') {\n        const [KeyClass, ValClass, decoded, decodedLength] = decodeMap(registry, keyType, valType, rawValue);\n        super(type === 'BTreeMap' ? sortMap(decoded) : decoded);\n        this.registry = registry;\n        this.initialU8aLength = decodedLength;\n        this.__internal__KeyClass = KeyClass;\n        this.__internal__ValClass = ValClass;\n        this.__internal__type = type;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let len = compactToU8a(this.size).length;\n        for (const [k, v] of this.entries()) {\n            len += k.encodedLength + v.encodedLength;\n        }\n        return len;\n    }\n    /**\n     * @description Returns a hash of the value\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.size === 0;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareMap(this, other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const inner = [];\n        for (const [k, v] of this.entries()) {\n            inner.push(k.inspect());\n            inner.push(v.inspect());\n        }\n        return {\n            inner,\n            outer: [compactToU8a(this.size)]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k instanceof Raw && !disableAscii && k.isAscii\n                ? k.toUtf8()\n                : k.toString()] = v.toHuman(isExtended, disableAscii);\n        }\n        return json;\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k.toString()] = v.toJSON();\n        }\n        return json;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k instanceof Raw && !disableAscii && k.isAscii\n                ? k.toUtf8()\n                : k.toString()] = v.toPrimitive(disableAscii);\n        }\n        return json;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `${this.__internal__type}<${this.registry.getClassName(this.__internal__KeyClass) || new this.__internal__KeyClass(this.registry).toRawType()},${this.registry.getClassName(this.__internal__ValClass) || new this.__internal__ValClass(this.registry).toRawType()}>`;\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = [];\n        if (!isBare) {\n            encoded.push(compactToU8a(this.size));\n        }\n        for (const [k, v] of this.entries()) {\n            encoded.push(k.toU8a(isBare), v.toU8a(isBare));\n        }\n        return u8aConcatStrict(encoded);\n    }\n}\n","import { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Option } from '../base/Option.js';\nimport { bool as Bool } from '../native/Bool.js';\nfunction decodeU8a(registry, value) {\n    // Encoded as -\n    //  - 0 = None\n    //  - 1 = True\n    //  - 2 = False\n    return value[0] === 0\n        ? null\n        : new Bool(registry, value[0] === 1);\n}\n/**\n * @name OptionBool\n * @description A specific implementation of Option<bool> than allows for single-byte encoding\n */\nexport class OptionBool extends Option {\n    constructor(registry, value) {\n        super(registry, Bool, isU8a(value) || isHex(value)\n            ? decodeU8a(registry, u8aToU8a(value))\n            : value);\n        this.initialU8aLength = 1;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return 1 | 0;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isFalse() {\n        return this.isSome\n            ? !this.value.valueOf()\n            : false;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isTrue() {\n        return this.isSome\n            ? this.value.valueOf()\n            : false;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return { outer: [this.toU8a()] };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType(isBare) {\n        return isBare\n            ? 'bool'\n            : 'Option<bool>';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        if (isBare) {\n            return super.toU8a(true);\n        }\n        return this.isSome\n            ? new Uint8Array([this.isTrue ? 1 : 2])\n            : new Uint8Array([0]);\n    }\n}\n","import { Tuple } from '../base/Tuple.js';\n/**\n * @name Range\n * @description\n * Rust `Range<T>` representation\n */\nexport class Range extends Tuple {\n    __internal__rangeName;\n    constructor(registry, Type, value, { rangeName = 'Range' } = {}) {\n        super(registry, [Type, Type], value);\n        this.__internal__rangeName = rangeName;\n    }\n    static with(Type) {\n        return class extends Range {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n    /**\n     * @description Returns the starting range value\n     */\n    get start() {\n        return this[0];\n    }\n    /**\n     * @description Returns the ending range value\n     */\n    get end() {\n        return this[1];\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `${this.__internal__rangeName}<${this.start.toRawType()}>`;\n    }\n}\n","import { Range } from './Range.js';\nexport class RangeInclusive extends Range {\n    constructor(registry, Type, value) {\n        super(registry, Type, value, { rangeName: 'RangeInclusive' });\n    }\n    static with(Type) {\n        return class extends RangeInclusive {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n}\n","import { Text } from '../native/Text.js';\nimport { sanitize } from '../utils/index.js';\n/**\n * @name Type\n * @description\n * This is a extended version of Text, specifically to handle types. Here we rely fully\n * on what Text provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\nexport class Type extends Text {\n    constructor(registry, value = '') {\n        super(registry, value);\n        this.setOverride(sanitize(this.toString()));\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Type';\n    }\n}\n","import { isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\n/** @internal */\nfunction decodeU8aFixed(value, bitLength) {\n    const u8a = u8aToU8a(value);\n    const byteLength = bitLength / 8;\n    if (!u8a.length) {\n        return [new Uint8Array(byteLength), 0];\n    }\n    if (isU8a(value) ? u8a.length < byteLength : u8a.length !== byteLength) {\n        throw new Error(`Expected input with ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);\n    }\n    return [u8a.subarray(0, byteLength), byteLength];\n}\n/**\n * @name U8aFixed\n * @description\n * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant\n * to be used directly, rather is should be subclassed with the specific lengths.\n */\nexport class U8aFixed extends Raw {\n    constructor(registry, value = new Uint8Array(), bitLength = 256) {\n        const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);\n        super(registry, u8a, decodedLength);\n    }\n    static with(bitLength, typeName) {\n        return class extends U8aFixed {\n            constructor(registry, value) {\n                super(registry, value, bitLength);\n            }\n            toRawType() {\n                return typeName || super.toRawType();\n            }\n        };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `[u8;${this.length}]`;\n    }\n}\n","import { compactAddLength, compactStripLength, compactToU8a, isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\nimport { typeToConstructor } from '../utils/index.js';\nimport { Bytes } from './Bytes.js';\nfunction decodeRaw(registry, typeName, value) {\n    const Type = typeToConstructor(registry, typeName);\n    if (isU8a(value) || isHex(value)) {\n        try {\n            const [, u8a] = isHex(value)\n                ? [0, u8aToU8a(value)]\n                : (value instanceof Raw)\n                    ? [0, value.subarray()]\n                    : compactStripLength(value);\n            return [Type, new Type(registry, u8a), value];\n        }\n        catch {\n            return [Type, null, value];\n        }\n    }\n    const instance = new Type(registry, value);\n    return [Type, instance, compactAddLength(instance.toU8a())];\n}\nexport class WrapperKeepOpaque extends Bytes {\n    __internal__Type;\n    __internal__decoded;\n    __internal__opaqueName;\n    constructor(registry, typeName, value, { opaqueName = 'WrapperKeepOpaque' } = {}) {\n        const [Type, decoded, u8a] = decodeRaw(registry, typeName, value);\n        super(registry, u8a);\n        this.__internal__Type = Type;\n        this.__internal__decoded = decoded;\n        this.__internal__opaqueName = opaqueName;\n    }\n    static with(Type) {\n        return class extends WrapperKeepOpaque {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n    /**\n     * @description Checks if the wrapper is decodable\n     */\n    get isDecoded() {\n        return !!this.__internal__decoded;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return this.__internal__decoded\n            ? {\n                inner: [this.__internal__decoded.inspect()],\n                outer: [compactToU8a(this.length)]\n            }\n            : {\n                outer: [compactToU8a(this.length), this.toU8a(true)]\n            };\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        return this.__internal__decoded\n            ? this.__internal__decoded.toHuman(isExtended, disableAscii)\n            : super.toHuman(isExtended, disableAscii);\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        return this.__internal__decoded\n            ? this.__internal__decoded.toPrimitive(disableAscii)\n            : super.toPrimitive(disableAscii);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `${this.__internal__opaqueName}<${this.registry.getClassName(this.__internal__Type) || (this.__internal__decoded ? this.__internal__decoded.toRawType() : new this.__internal__Type(this.registry).toRawType())}>`;\n    }\n    /**\n     * @description Converts the Object to to a string (either decoded or bytes)\n     */\n    toString() {\n        return this.__internal__decoded\n            ? this.__internal__decoded.toString()\n            : super.toString();\n    }\n    /**\n     * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable\n     */\n    unwrap() {\n        if (!this.__internal__decoded) {\n            throw new Error(`${this.__internal__opaqueName}: unwrapping an undecodable value`);\n        }\n        return this.__internal__decoded;\n    }\n}\n","import { WrapperKeepOpaque } from './WrapperKeepOpaque.js';\nexport class WrapperOpaque extends WrapperKeepOpaque {\n    constructor(registry, typeName, value) {\n        super(registry, typeName, value, { opaqueName: 'WrapperOpaque' });\n    }\n    static with(Type) {\n        return class extends WrapperOpaque {\n            constructor(registry, value) {\n                super(registry, Type, value);\n            }\n        };\n    }\n    /**\n     * @description The inner value for this wrapper, in all cases it _should_ be decodable (unlike KeepOpaque)\n     */\n    get inner() {\n        return this.unwrap();\n    }\n}\n","import { detectPackage } from '@polkadot/util';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, []);\n","import { AbstractArray } from '../abstract/Array.js';\n/**\n * @name VecAny\n * @description\n * This manages codec arrays, assuming that the inputs are already of type Codec. Unlike\n * a vector, this can be used to manage array-like structures with variable arguments of\n * any types\n */\nexport class VecAny extends AbstractArray {\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        // FIXME This is basically an any type, cannot instantiate via createType\n        return 'Vec<Codec>';\n    }\n}\n","import { BN, bnToBn, bnToHex, bnToU8a, isString, isU8a, u8aToBn } from '@polkadot/util';\nconst BITLENGTH = 64;\nconst U8A_OPTS = { bitLength: BITLENGTH, isLe: true };\nfunction decodeDate(value) {\n    if (isU8a(value)) {\n        value = u8aToBn(value.subarray(0, BITLENGTH / 8));\n    }\n    else if (value instanceof Date) {\n        return value;\n    }\n    else if (isString(value)) {\n        value = new BN(value.toString(), 10, 'le');\n    }\n    return new Date(bnToBn(value).toNumber() * 1000);\n}\n/**\n * @name Date\n * @description\n * A wrapper around seconds/timestamps. Internally the representation only has\n * second precicion (aligning with Rust), so any numbers passed an/out are always\n * per-second. For any encoding/decoding the 1000 multiplier would be applied to\n * get it in line with JavaScript formats. It extends the base JS `Date` object\n * and has all the methods available that are applicable to any `Date`\n * @noInheritDoc\n */\nexport class CodecDate extends Date {\n    registry;\n    createdAtHash;\n    initialU8aLength = BITLENGTH / 8;\n    isStorageFallback;\n    constructor(registry, value = 0) {\n        super(decodeDate(value));\n        this.registry = registry;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return BITLENGTH / 8;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.getTime() === 0;\n    }\n    /**\n     * @description Returns the number of bits in the value\n     */\n    bitLength() {\n        return BITLENGTH;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return decodeDate(other).getTime() === this.getTime();\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a BigInt representation of the number\n     */\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    /**\n     * @description Returns the BN representation of the timestamp\n     */\n    toBn() {\n        return new BN(this.toNumber());\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex(isLe = false) {\n        return bnToHex(this.toBn(), {\n            bitLength: BITLENGTH,\n            isLe,\n            isNegative: false\n        });\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toISOString();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        // FIXME Return type should be number, but conflicts with Date.toJSON()\n        // which returns string\n        return this.toNumber();\n    }\n    /**\n     * @description Returns the number representation for the timestamp\n     */\n    toNumber() {\n        return Math.ceil(this.getTime() / 1000);\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toNumber();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Moment';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        // only included here since we do not inherit docs\n        return super.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return bnToU8a(this.toNumber(), U8A_OPTS);\n    }\n}\n","import { isU8a, u8aToHex } from '@polkadot/util';\n/**\n * @name bool\n * @description\n * Representation for a boolean value in the system. It extends the base JS `Boolean` class\n * @noInheritDoc\n */\nexport class bool extends Boolean {\n    registry;\n    createdAtHash;\n    initialU8aLength = 1;\n    isStorageFallback;\n    constructor(registry, value = false) {\n        super(isU8a(value)\n            ? value[0] === 1\n            : value instanceof Boolean\n                ? value.valueOf()\n                : !!value);\n        this.registry = registry;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return 1 | 0;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value (true when it wraps false/default)\n     */\n    get isEmpty() {\n        return this.isFalse;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isFalse() {\n        return !this.isTrue;\n    }\n    /**\n     * @description Checks if the value is an empty value (always false)\n     */\n    get isTrue() {\n        return this.valueOf();\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.valueOf() === (other instanceof Boolean\n            ? other.valueOf()\n            : other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.valueOf();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'bool';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.toJSON().toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return new Uint8Array([this.valueOf() ? 1 : 0]);\n    }\n}\n","import { floatToU8a, isHex, isU8a, u8aToFloat, u8aToHex, u8aToU8a } from '@polkadot/util';\n/**\n * @name Float\n * @description\n * A Codec wrapper for F32 & F64 values. You generally don't want to be using\n * f32/f64 in your runtime, operations on fixed points numbers are preferable. This class\n * was explicitly added since scale-codec has a flag that enables this and it is available\n * in some eth_* RPCs\n */\nexport class Float extends Number {\n    encodedLength;\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__bitLength;\n    constructor(registry, value, { bitLength = 32 } = {}) {\n        super(isU8a(value) || isHex(value)\n            ? value.length === 0\n                ? 0\n                : u8aToFloat(u8aToU8a(value), { bitLength })\n            : (value || 0));\n        this.__internal__bitLength = bitLength;\n        this.encodedLength = bitLength / 8;\n        this.initialU8aLength = this.encodedLength;\n        this.registry = registry;\n    }\n    static with(bitLength) {\n        return class extends Float {\n            constructor(registry, value) {\n                super(registry, value, { bitLength });\n            }\n        };\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Returns true if the type wraps an empty/default all-0 value\n     */\n    get isEmpty() {\n        return this.valueOf() === 0;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.valueOf() === Number(other);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        // Not sure if this is actually a hex or a string value\n        // (would need to check against RPCs to see the result here)\n        return this.toHex();\n    }\n    /**\n     * @description Returns the number representation (Same as valueOf)\n     */\n    toNumber() {\n        return this.valueOf();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toNumber();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `f${this.__internal__bitLength}`;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return floatToU8a(this, {\n            bitLength: this.__internal__bitLength\n        });\n    }\n}\n","import { isFunction, objectProperties, stringify } from '@polkadot/util';\nimport { compareMap } from '../utils/index.js';\n/** @internal */\nfunction decodeJson(value) {\n    return Object.entries(value || {});\n}\n/**\n * @name Json\n * @description\n * Wraps the a JSON structure retrieve via RPC. It extends the standard JS Map with. While it\n * implements a Codec, it is limited in that it can only be used with input objects via RPC,\n * i.e. no hex decoding. Unlike a struct, this waps a JSON object with unknown keys\n * @noInheritDoc\n */\nexport class Json extends Map {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    constructor(registry, value) {\n        const decoded = decodeJson(value);\n        super(decoded);\n        this.registry = registry;\n        objectProperties(this, decoded.map(([k]) => k), (k) => this.get(k));\n    }\n    /**\n     * @description Always 0, never encodes as a Uint8Array\n     */\n    get encodedLength() {\n        return 0 | 0;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return [...this.keys()].length === 0;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareMap(this, other);\n    }\n    /**\n     * @description Returns a typed value from the internal map\n     */\n    getT(key) {\n        return this.get(key);\n    }\n    /**\n     * @description Unimplemented, will throw\n     */\n    inspect() {\n        throw new Error('Unimplemented');\n    }\n    /**\n     * @description Unimplemented, will throw\n     */\n    toHex() {\n        throw new Error('Unimplemented');\n    }\n    /**\n     * @description Converts the Object to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return [...this.entries()].reduce((json, [key, value]) => {\n            json[key] = isFunction(value?.toHuman)\n                ? value.toHuman()\n                : value;\n            return json;\n        }, {});\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return [...this.entries()].reduce((json, [key, value]) => {\n            json[key] = value;\n            return json;\n        }, {});\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        return [...this.entries()].reduce((json, [key, value]) => {\n            json[key] = isFunction(value.toPrimitive)\n                ? value.toPrimitive(disableAscii)\n                : value;\n            return json;\n        }, {});\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Json';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Unimplemented, will throw\n     */\n    toU8a(_isBare) {\n        throw new Error('Unimplemented');\n    }\n}\n","import { isAscii, isUndefined, isUtf8, u8aToHex, u8aToString, u8aToU8a } from '@polkadot/util';\n/**\n * @name Raw\n * @description\n * A basic wrapper around Uint8Array, with no frills and no fuss. It does differ\n * from other implementations where it will consume the full Uint8Array as passed to it.\n * As such it is meant to be subclassed where the wrapper takes care of the\n * actual lengths instead of used directly.\n * @noInheritDoc\n */\nexport class Raw extends Uint8Array {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    /**\n     * @description This ensures that operators such as clice, filter, map, etc. return\n     * new Array instances (without this we need to apply overrides)\n     */\n    static get [Symbol.species]() {\n        return Uint8Array;\n    }\n    constructor(registry, value, initialU8aLength) {\n        super(u8aToU8a(value));\n        this.registry = registry;\n        this.initialU8aLength = initialU8aLength;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.length;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Returns true if the wrapped value contains only ASCII printable characters\n     */\n    get isAscii() {\n        return isAscii(this);\n    }\n    /**\n     * @description Returns true if the type wraps an empty/default all-0 value\n     */\n    get isEmpty() {\n        return !this.length || isUndefined(this.find((b) => !!b));\n    }\n    /**\n     * @description Returns true if the wrapped value contains only utf8 characters\n     */\n    get isUtf8() {\n        return isUtf8(this);\n    }\n    /**\n     * @description Returns the number of bits in the value\n     */\n    bitLength() {\n        return this.length * 8;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        if (other instanceof Uint8Array) {\n            return (this.length === other.length) &&\n                !this.some((b, index) => b !== other[index]);\n        }\n        return this.eq(u8aToU8a(other));\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this);\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(_isExtended, disableAscii) {\n        return this.toPrimitive(disableAscii);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toHex();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        if (!disableAscii && this.isAscii) {\n            const text = this.toUtf8();\n            // ensure we didn't end up with multibyte codepoints\n            if (isAscii(text)) {\n                return text;\n            }\n        }\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Raw';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.toHex();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return Uint8Array.from(this);\n    }\n    /**\n     * @description Returns the wrapped data as a UTF-8 string\n     */\n    toUtf8() {\n        if (!this.isUtf8) {\n            throw new Error('The character sequence is not a valid Utf8 string');\n        }\n        return u8aToString(this);\n    }\n}\n","import { BN, bnToBn, bnToU8a, isBn, isNumber, isString, isU8a, isUndefined, objectProperties, stringify, stringPascalCase, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareArray } from '../utils/index.js';\nfunction encodeSet(setValues, values) {\n    const encoded = new BN(0);\n    for (let i = 0, count = values.length; i < count; i++) {\n        encoded.ior(bnToBn(setValues[values[i]] || 0));\n    }\n    return encoded;\n}\n/** @internal */\nfunction decodeSetArray(setValues, values) {\n    const count = values.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const key = values[i];\n        if (isUndefined(setValues[key])) {\n            throw new Error(`Set: Invalid key '${key}' passed to Set, allowed ${Object.keys(setValues).join(', ')}`);\n        }\n        result[i] = key;\n    }\n    return result;\n}\n/** @internal */\nfunction decodeSetNumber(setValues, _value) {\n    const bn = bnToBn(_value);\n    const keys = Object.keys(setValues);\n    const result = [];\n    for (let i = 0, count = keys.length; i < count; i++) {\n        const key = keys[i];\n        if (bn.and(bnToBn(setValues[key])).eq(bnToBn(setValues[key]))) {\n            result.push(key);\n        }\n    }\n    const computed = encodeSet(setValues, result);\n    if (!bn.eq(computed)) {\n        throw new Error(`Set: Mismatch decoding '${bn.toString()}', computed as '${computed.toString()}' with ${result.join(', ')}`);\n    }\n    return result;\n}\n/** @internal */\nfunction decodeSet(setValues, value = 0, bitLength) {\n    if (bitLength % 8 !== 0) {\n        throw new Error(`Expected valid bitLength, power of 8, found ${bitLength}`);\n    }\n    const byteLength = bitLength / 8;\n    if (isU8a(value)) {\n        return value.length === 0\n            ? []\n            : decodeSetNumber(setValues, u8aToBn(value.subarray(0, byteLength), { isLe: true }));\n    }\n    else if (isString(value)) {\n        return decodeSet(setValues, u8aToU8a(value), byteLength);\n    }\n    else if (value instanceof Set || Array.isArray(value)) {\n        const input = Array.isArray(value)\n            ? value\n            : [...value.values()];\n        return decodeSetArray(setValues, input);\n    }\n    return decodeSetNumber(setValues, value);\n}\n/**\n * @name Set\n * @description\n * An Set is an array of string values, represented an an encoded type by\n * a bitwise representation of the values.\n */\nexport class CodecSet extends Set {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__allowed;\n    __internal__byteLength;\n    constructor(registry, setValues, value, bitLength = 8) {\n        super(decodeSet(setValues, value, bitLength));\n        this.registry = registry;\n        this.__internal__allowed = setValues;\n        this.__internal__byteLength = bitLength / 8;\n    }\n    static with(values, bitLength) {\n        return class extends CodecSet {\n            static {\n                const keys = Object.keys(values);\n                const count = keys.length;\n                const isKeys = new Array(count);\n                for (let i = 0; i < count; i++) {\n                    isKeys[i] = `is${stringPascalCase(keys[i])}`;\n                }\n                objectProperties(this.prototype, isKeys, (_, i, self) => self.strings.includes(keys[i]));\n            }\n            constructor(registry, value) {\n                super(registry, values, value, bitLength);\n            }\n        };\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.__internal__byteLength;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description true is the Set contains no values\n     */\n    get isEmpty() {\n        return this.size === 0;\n    }\n    /**\n     * @description The actual set values as a string[]\n     */\n    get strings() {\n        return [...super.values()];\n    }\n    /**\n     * @description The encoded value for the set members\n     */\n    get valueEncoded() {\n        return encodeSet(this.__internal__allowed, this.strings);\n    }\n    /**\n     * @description adds a value to the Set (extended to allow for validity checking)\n     */\n    add = (key) => {\n        // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates \"some\" chaos\n        // we have the isUndefined(this._setValues) in here as well, add is used internally\n        // in the Set constructor (so it is undefined at this point, and should allow)\n        if (this.__internal__allowed && isUndefined(this.__internal__allowed[key])) {\n            throw new Error(`Set: Invalid key '${key}' on add`);\n        }\n        super.add(key);\n        return this;\n    };\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        if (Array.isArray(other)) {\n            // we don't actually care about the order, sort the values\n            return compareArray(this.strings.sort(), other.sort());\n        }\n        else if (other instanceof Set) {\n            return this.eq([...other.values()]);\n        }\n        else if (isNumber(other) || isBn(other)) {\n            return this.valueEncoded.eq(bnToBn(other));\n        }\n        return false;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return {\n            outer: [this.toU8a()]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.strings;\n    }\n    /**\n     * @description The encoded value for the set members\n     */\n    toNumber() {\n        return this.valueEncoded.toNumber();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return stringify({ _set: this.__internal__allowed });\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return `[${this.strings.join(', ')}]`;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a(_isBare) {\n        return bnToU8a(this.valueEncoded, {\n            bitLength: this.__internal__byteLength * 8,\n            isLe: true\n        });\n    }\n}\n","import { isBoolean, isHex, isObject, isU8a, isUndefined, objectProperties, stringCamelCase, stringify, u8aConcatStrict, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { compareMap, decodeU8aStruct, mapToTypeMap, typesToMap } from '../utils/index.js';\nfunction noopSetDefinition(d) {\n    return d;\n}\n/** @internal */\nfunction decodeStructFromObject(registry, [Types, keys], value, jsonMap) {\n    let jsonObj;\n    const typeofArray = Array.isArray(value);\n    const typeofMap = value instanceof Map;\n    const count = keys.length;\n    if (!typeofArray && !typeofMap && !isObject(value)) {\n        throw new Error(`Struct: Cannot decode value ${stringify(value)} (typeof ${typeof value}), expected an input object, map or array`);\n    }\n    else if (typeofArray && value.length !== count) {\n        throw new Error(`Struct: Unable to map ${stringify(value)} array to object with known keys ${keys.join(', ')}`);\n    }\n    const raw = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const key = keys[i];\n        const jsonKey = jsonMap.get(key) || key;\n        const Type = Types[i];\n        let assign;\n        try {\n            if (typeofArray) {\n                assign = value[i];\n            }\n            else if (typeofMap) {\n                assign = jsonKey && value.get(jsonKey);\n            }\n            else {\n                assign = jsonKey && value[jsonKey];\n                if (isUndefined(assign)) {\n                    if (isUndefined(jsonObj)) {\n                        const entries = Object.entries(value);\n                        jsonObj = {};\n                        for (let e = 0, ecount = entries.length; e < ecount; e++) {\n                            jsonObj[stringCamelCase(entries[e][0])] = entries[e][1];\n                        }\n                    }\n                    assign = jsonKey && jsonObj[jsonKey];\n                }\n            }\n            raw[i] = [\n                key,\n                assign instanceof Type\n                    ? assign\n                    : new Type(registry, assign)\n            ];\n        }\n        catch (error) {\n            let type = Type.name;\n            try {\n                type = new Type(registry).toRawType();\n            }\n            catch {\n                // ignore\n            }\n            throw new Error(`Struct: failed on ${jsonKey}: ${type}:: ${error.message}`);\n        }\n    }\n    return [raw, 0];\n}\n/**\n * @name Struct\n * @description\n * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes\n * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec\n * values in the constructor and it manages the decoding. It is important that the constructor\n * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,\n * it needs to decoded in the specific defined order.\n * @noInheritDoc\n */\nexport class Struct extends Map {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__jsonMap;\n    __internal__Types;\n    constructor(registry, Types, value, jsonMap = new Map(), { definition, setDefinition = noopSetDefinition } = {}) {\n        const typeMap = definition || setDefinition(mapToTypeMap(registry, Types));\n        const [decoded, decodedLength] = isU8a(value) || isHex(value)\n            ? decodeU8aStruct(registry, new Array(typeMap[0].length), u8aToU8a(value), typeMap)\n            : value instanceof Struct\n                ? [value, 0]\n                : decodeStructFromObject(registry, typeMap, value || {}, jsonMap);\n        super(decoded);\n        this.initialU8aLength = decodedLength;\n        this.registry = registry;\n        this.__internal__jsonMap = jsonMap;\n        this.__internal__Types = typeMap;\n    }\n    static with(Types, jsonMap) {\n        let definition;\n        // eslint-disable-next-line no-return-assign\n        const setDefinition = (d) => definition = d;\n        return class extends Struct {\n            static {\n                const keys = Object.keys(Types);\n                objectProperties(this.prototype, keys, (k, _, self) => self.get(k));\n            }\n            constructor(registry, value) {\n                super(registry, Types, value, jsonMap, { definition, setDefinition });\n            }\n        };\n    }\n    /**\n     * @description The available keys for this struct\n     */\n    get defKeys() {\n        return this.__internal__Types[1];\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        for (const v of this.values()) {\n            if (!v.isEmpty) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        let total = 0;\n        for (const v of this.values()) {\n            total += v.encodedLength;\n        }\n        return total;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Returns the Type description of the structure\n     */\n    get Type() {\n        const result = {};\n        const [Types, keys] = this.__internal__Types;\n        for (let i = 0, count = keys.length; i < count; i++) {\n            result[keys[i]] = new Types[i](this.registry).toRawType();\n        }\n        return result;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return compareMap(this, other);\n    }\n    /**\n     * @description Returns a specific names entry in the structure\n     * @param key The name of the entry to retrieve\n     */\n    get(key) {\n        return super.get(key);\n    }\n    /**\n     * @description Returns the values of a member at a specific index (Rather use get(name) for performance)\n     */\n    getAtIndex(index) {\n        return this.toArray()[index];\n    }\n    /**\n     * @description Returns the a types value by name\n     */\n    getT(key) {\n        return super.get(key);\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect(isBare) {\n        const inner = [];\n        for (const [k, v] of this.entries()) {\n            inner.push({\n                ...v.inspect(!isBare || isBoolean(isBare)\n                    ? isBare\n                    : isBare[k]),\n                name: stringCamelCase(k)\n            });\n        }\n        return {\n            inner\n        };\n    }\n    /**\n     * @description Converts the Object to an standard JavaScript Array\n     */\n    toArray() {\n        return [...this.values()];\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k] = v.toHuman(isExtended, disableAscii);\n        }\n        return json;\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            // Here we pull out the entry against the JSON mapping (if supplied)\n            // since this representation goes over RPC and needs to be correct\n            json[(this.__internal__jsonMap.get(k) || k)] = v.toJSON();\n        }\n        return json;\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive(disableAscii) {\n        const json = {};\n        for (const [k, v] of this.entries()) {\n            json[k] = v.toPrimitive(disableAscii);\n        }\n        return json;\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return stringify(typesToMap(this.registry, this.__internal__Types));\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return stringify(this.toJSON());\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = [];\n        for (const [k, v] of this.entries()) {\n            encoded.push(v.toU8a(!isBare || isBoolean(isBare)\n                ? isBare\n                : isBare[k]));\n        }\n        return u8aConcatStrict(encoded);\n    }\n}\n","import { compactAddLength, compactFromU8aLim, compactToU8a, hexToU8a, isHex, isString, isU8a, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nimport { Raw } from './Raw.js';\nconst MAX_LENGTH = 128 * 1024;\n/** @internal */\nfunction decodeText(value) {\n    if (isU8a(value)) {\n        if (!value.length) {\n            return ['', 0];\n        }\n        // for Raw, the internal buffer does not have an internal length\n        // (the same applies in e.g. Bytes, where length is added at encoding-time)\n        if (value instanceof Raw) {\n            return [u8aToString(value), 0];\n        }\n        const [offset, length] = compactFromU8aLim(value);\n        const total = offset + length;\n        if (length > MAX_LENGTH) {\n            throw new Error(`Text: length ${length.toString()} exceeds ${MAX_LENGTH}`);\n        }\n        else if (total > value.length) {\n            throw new Error(`Text: required length less than remainder, expected at least ${total}, found ${value.length}`);\n        }\n        return [u8aToString(value.subarray(offset, total)), total];\n    }\n    else if (isHex(value)) {\n        return [u8aToString(hexToU8a(value)), 0];\n    }\n    return [value ? value.toString() : '', 0];\n}\n/**\n * @name Text\n * @description\n * This is a string wrapper, along with the length. It is used both for strings as well\n * as items such as documentation. It simply extends the standard JS `String` built-in\n * object, inheriting all methods exposed from `String`.\n * @noInheritDoc\n */\nexport class Text extends String {\n    registry;\n    createdAtHash;\n    initialU8aLength;\n    isStorageFallback;\n    __internal__override = null;\n    constructor(registry, value) {\n        const [str, decodedLength] = decodeText(value);\n        super(str);\n        this.registry = registry;\n        this.initialU8aLength = decodedLength;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n    get isEmpty() {\n        return this.length === 0;\n    }\n    /**\n     * @description The length of the value\n     */\n    get length() {\n        // only included here since we ignore inherited docs\n        return super.length;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return isString(other)\n            ? this.toString() === other.toString()\n            : false;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const value = stringToU8a(super.toString());\n        return {\n            outer: value.length\n                ? [compactToU8a(value.length), value]\n                : [compactToU8a(value.length)]\n        };\n    }\n    /**\n     * @description Set an override value for this\n     */\n    setOverride(override) {\n        this.__internal__override = override;\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        // like with Vec<u8>, when we are encoding to hex, we don't actually add\n        // the length prefix (it is already implied by the actual string length)\n        return u8aToHex(this.toU8a(true));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Text';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.__internal__override || super.toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        // NOTE Here we use the super toString (we are not taking overrides into account,\n        // rather encoding the original value the string was constructed with)\n        const encoded = stringToU8a(super.toString());\n        return isBare\n            ? encoded\n            : compactAddLength(encoded);\n    }\n}\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/types-codec', path: (({ url: getAbsoluteUrl('ules/@polkadot/types-codec/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/types-codec/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/types-codec/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/types-codec/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '11.3.1' };\n","import { Float } from '../native/Float.js';\n/**\n * @name f32\n * @description\n * A 32-bit float\n */\nexport class f32 extends Float.with(32) {\n    // NOTE without this, we cannot properly determine extensions\n    __FloatType = 'f32';\n}\n","import { Float } from '../native/Float.js';\n/**\n * @name f64\n * @description\n * A 64-bit float\n */\nexport class f64 extends Float.with(64) {\n    // NOTE without this, we cannot properly determine extensions\n    __FloatType = 'f64';\n}\n","import { Int } from '../base/Int.js';\n/**\n * @name i128\n * @description\n * A 128-bit signed integer\n */\nexport class i128 extends Int.with(128) {\n    // NOTE without this, we cannot properly determine extensions\n    __IntType = 'i128';\n}\n","import { Int } from '../base/Int.js';\n/**\n * @name i16\n * @description\n * A 16-bit signed integer\n */\nexport class i16 extends Int.with(16) {\n    // NOTE without this, we cannot properly determine extensions\n    __IntType = 'i16';\n}\n","import { Int } from '../base/Int.js';\n/**\n * @name i256\n * @description\n * A 256-bit signed integer\n */\nexport class i256 extends Int.with(256) {\n    // NOTE without this, we cannot properly determine extensions\n    __IntType = 'i256';\n}\n","import { Int } from '../base/Int.js';\n/**\n * @name i32\n * @description\n * A 32-bit signed integer\n */\nexport class i32 extends Int.with(32) {\n    // NOTE without this, we cannot properly determine extensions\n    __IntType = 'i32';\n}\n","import { Int } from '../base/Int.js';\n/**\n * @name i64\n * @description\n * A 64-bit signed integer\n */\nexport class i64 extends Int.with(64) {\n    // NOTE without this, we cannot properly determine extensions\n    __IntType = 'i64';\n}\n","import { Int } from '../base/Int.js';\n/**\n * @name i8\n * @description\n * An 8-bit signed integer\n */\nexport class i8 extends Int.with(8) {\n    // NOTE without this, we cannot properly determine extensions\n    __IntType = 'i8';\n}\n","import { i32 } from './I32.js';\n/**\n * @name ISize\n * @description\n * A System default signed number, typically used in RPC to report non-consensus\n * data. It is a wrapper for [[I32]] as a WASM default (as generated by Rust bindings).\n * It is not to be used, since it creates consensus mismatches.\n */\nexport class isize extends i32 {\n    constructor(registry, value) {\n        super(registry, value);\n        throw new Error('The `isize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally i64) and WASM (always i32) code. Use one of the `i32` or `i64` types explicitly.');\n    }\n}\n","import { UInt } from '../base/UInt.js';\n/**\n * @name u128\n * @description\n * A 128-bit unsigned integer\n */\nexport class u128 extends UInt.with(128) {\n    // NOTE without this, we cannot properly determine extensions\n    __UIntType = 'u128';\n}\n","import { UInt } from '../base/UInt.js';\n/**\n * @name u16\n * @description\n * A 16-bit unsigned integer\n */\nexport class u16 extends UInt.with(16) {\n    // NOTE without this, we cannot properly determine extensions\n    __UIntType = 'u16';\n}\n","import { UInt } from '../base/UInt.js';\n/**\n * @name u256\n * @description\n * A 256-bit unsigned integer\n */\nexport class u256 extends UInt.with(256) {\n    // NOTE without this, we cannot properly determine extensions\n    __UIntType = 'u256';\n}\n","import { UInt } from '../base/UInt.js';\n/**\n * @name u32\n * @description\n * A 32-bit unsigned integer\n */\nexport class u32 extends UInt.with(32) {\n    // NOTE without this, we cannot properly determine extensions\n    __UIntType = 'u32';\n}\n","import { UInt } from '../base/UInt.js';\n/**\n * @name u64\n * @description\n * A 64-bit unsigned integer\n */\nexport class u64 extends UInt.with(64) {\n    // NOTE without this, we cannot properly determine extensions\n    __UIntType = 'u64';\n}\n","import { UInt } from '../base/UInt.js';\n/**\n * @name u8\n * @description\n * An 8-bit unsigned integer\n */\nexport class u8 extends UInt.with(8) {\n    // NOTE without this, we cannot properly determine extensions\n    __UIntType = 'u8';\n}\n","import { u32 } from './U32.js';\n/**\n * @name USize\n * @description\n * A System default unsigned number, typically used in RPC to report non-consensus\n * data. It is a wrapper for [[U32]] as a WASM default (as generated by Rust bindings).\n * It is not to be used, since it created consensus mismatches.\n */\nexport class usize extends u32 {\n    constructor(registry, value) {\n        super(registry, value);\n        throw new Error('The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.');\n    }\n}\n","import { isUndefined } from '@polkadot/util';\nimport { hasEq } from './util.js';\nexport function compareArray(a, b) {\n    if (Array.isArray(b)) {\n        return (a.length === b.length) && isUndefined(a.find((v, index) => hasEq(v)\n            ? !v.eq(b[index])\n            : v !== b[index]));\n    }\n    return false;\n}\n","import { isObject, isUndefined } from '@polkadot/util';\nimport { hasEq } from './util.js';\nfunction hasMismatch(a, b) {\n    return isUndefined(a) || (hasEq(a)\n        ? !a.eq(b)\n        : a !== b);\n}\nfunction notEntry(value) {\n    return !Array.isArray(value) || value.length !== 2;\n}\nfunction compareMapArray(a, b) {\n    // equal number of entries and each entry in the array should match\n    return (a.size === b.length) && !b.some((e) => notEntry(e) ||\n        hasMismatch(a.get(e[0]), e[1]));\n}\nexport function compareMap(a, b) {\n    if (Array.isArray(b)) {\n        return compareMapArray(a, b);\n    }\n    else if (b instanceof Map) {\n        return compareMapArray(a, [...b.entries()]);\n    }\n    else if (isObject(b)) {\n        return compareMapArray(a, Object.entries(b));\n    }\n    return false;\n}\n","import { isObject } from '@polkadot/util';\nfunction compareSetArray(a, b) {\n    // equal number of entries and each entry in the array should match\n    return (a.size === b.length) && !b.some((e) => !a.has(e));\n}\nexport function compareSet(a, b) {\n    if (Array.isArray(b)) {\n        return compareSetArray(a, b);\n    }\n    else if (b instanceof Set) {\n        return compareSetArray(a, [...b.values()]);\n    }\n    else if (isObject(b)) {\n        return compareSetArray(a, Object.values(b));\n    }\n    return false;\n}\n","import { u8aToHex } from '@polkadot/util';\n/** @internal */\nfunction formatFailure(registry, fn, _result, { message }, u8a, i, count, Type, key) {\n    let type = '';\n    try {\n        type = `: ${new Type(registry).toRawType()}`;\n    }\n    catch {\n        // ignore\n    }\n    // This is extra debugging info (we most-probably want this in in some way, shape or form,\n    // but at this point not quite sure how to include and format it (it can be quite massive)\n    // console.error(JSON.stringify(result, null, 2));\n    return `${fn}: failed at ${u8aToHex(u8a.subarray(0, 16))}…${key ? ` on ${key}` : ''} (index ${i + 1}/${count})${type}:: ${message}`;\n}\n/**\n * @internal\n *\n * Given an u8a, and an array of Type constructors, decode the u8a against the\n * types, and return an array of decoded values.\n *\n * @param u8a - The u8a to decode.\n * @param result - The result array (will be returned with values pushed)\n * @param types - The array of CodecClass to decode the U8a against.\n */\nexport function decodeU8a(registry, result, u8a, [Types, keys]) {\n    const count = result.length;\n    let offset = 0;\n    let i = 0;\n    try {\n        while (i < count) {\n            const value = new Types[i](registry, u8a.subarray(offset));\n            offset += value.initialU8aLength || value.encodedLength;\n            result[i] = value;\n            i++;\n        }\n    }\n    catch (error) {\n        throw new Error(formatFailure(registry, 'decodeU8a', result, error, u8a.subarray(offset), i, count, Types[i], keys[i]));\n    }\n    return [result, offset];\n}\n/**\n * @internal\n *\n * Split from decodeU8a since this is specialized to zip returns ... while we duplicate, this\n * is all on the hot-path, so it is not great, however there is (some) method behind the madness\n */\nexport function decodeU8aStruct(registry, result, u8a, [Types, keys]) {\n    const count = result.length;\n    let offset = 0;\n    let i = 0;\n    try {\n        while (i < count) {\n            const value = new Types[i](registry, u8a.subarray(offset));\n            offset += value.initialU8aLength || value.encodedLength;\n            result[i] = [keys[i], value];\n            i++;\n        }\n    }\n    catch (error) {\n        throw new Error(formatFailure(registry, 'decodeU8aStruct', result, error, u8a.subarray(offset), i, count, Types[i], keys[i]));\n    }\n    return [result, offset];\n}\n/**\n * @internal\n *\n * Split from decodeU8a since this is specialized to 1 instance ... while we duplicate, this\n * is all on the hot-path, so it is not great, however there is (some) method behind the madness\n */\nexport function decodeU8aVec(registry, result, u8a, startAt, Type) {\n    const count = result.length;\n    let offset = startAt;\n    let i = 0;\n    try {\n        while (i < count) {\n            const value = new Type(registry, u8a.subarray(offset));\n            offset += value.initialU8aLength || value.encodedLength;\n            result[i] = value;\n            i++;\n        }\n    }\n    catch (error) {\n        throw new Error(formatFailure(registry, 'decodeU8aVec', result, error, u8a.subarray(offset), i, count, Type));\n    }\n    return [offset, offset - startAt];\n}\n","const BOUNDED = ['BTreeMap', 'BTreeSet', 'HashMap', 'Vec'];\nconst ALLOWED_BOXES = BOUNDED.concat(['Compact', 'DoNotConstruct', 'Int', 'Linkage', 'Range', 'RangeInclusive', 'Result', 'Opaque', 'Option', 'UInt', 'WrapperKeepOpaque', 'WrapperOpaque']);\nconst BOX_PRECEDING = ['<', '(', '[', '\"', ',', ' ']; // start of vec, tuple, fixed array, part of struct def or in tuple\nconst mappings = [\n    // alias <T::InherentOfflineReport as InherentOfflineReport>::Inherent -> InherentOfflineReport\n    alias('<T::InherentOfflineReport as InherentOfflineReport>::Inherent', 'InherentOfflineReport', false),\n    alias('VecDeque<', 'Vec<', false),\n    // <T::Balance as HasCompact>\n    cleanupCompact(),\n    // Change BoundedVec<Type, Size> to Vec<Type>\n    removeExtensions('Bounded', true),\n    // Change WeakVec<Type> to Vec<Type>\n    removeExtensions('Weak', false),\n    // Remove all the trait prefixes\n    removeTraits(),\n    // remove PairOf<T> -> (T, T)\n    removePairOf(),\n    // remove boxing, `Box<Proposal>` -> `Proposal`\n    removeWrap('Box<'),\n    // remove generics, `MisbehaviorReport<Hash, BlockNumber>` -> `MisbehaviorReport`\n    removeGenerics(),\n    // alias String -> Text (compat with jsonrpc methods)\n    alias('String', 'Text'),\n    // alias Vec<u8> -> Bytes\n    alias('Vec<u8>', 'Bytes'),\n    alias('&\\\\[u8\\\\]', 'Bytes'),\n    alias(\"&'static\\\\[u8\\\\]\", 'Bytes'),\n    // alias RawAddress -> Address\n    alias('RawAddress', 'Address'),\n    // lookups, mapped to Address/AccountId as appropriate in runtime\n    alias('Lookup::Source', 'LookupSource'),\n    alias('Lookup::Target', 'LookupTarget'),\n    // HACK duplication between contracts & primitives, however contracts prefixed with exec\n    alias('exec::StorageKey', 'ContractStorageKey'),\n    // flattens tuples with one value, `(AccountId)` -> `AccountId`\n    flattenSingleTuple(),\n    // converts ::Type to Type, <T as Trait<I>>::Proposal -> Proposal\n    removeColons(),\n    // remove all trailing spaces - this should always be the last\n    trim()\n];\nexport function trim() {\n    return (value) => value.trim();\n}\nexport function findClosing(value, start) {\n    let depth = 0;\n    for (let i = start, count = value.length; i < count; i++) {\n        if (value[i] === '>') {\n            if (!depth) {\n                return i;\n            }\n            depth--;\n        }\n        else if (value[i] === '<') {\n            depth++;\n        }\n    }\n    throw new Error(`Unable to find closing matching <> on '${value}' (start ${start})`);\n}\nexport function alias(src, dest, withChecks = true) {\n    const from = new RegExp(`(^${src}|${BOX_PRECEDING.map((box) => `\\\\${box}${src}`).join('|')})`, 'g');\n    const to = (src) => {\n        from.lastIndex = 0;\n        return withChecks && BOX_PRECEDING.includes(src[0])\n            ? `${src[0]}${dest}`\n            : dest;\n    };\n    return (value) => value.replace(from, to);\n}\nexport function cleanupCompact() {\n    return (value) => {\n        if (value.includes(' as HasCompact')) {\n            for (let i = 0, count = value.length; i < count; i++) {\n                if (value[i] === '<') {\n                    const end = findClosing(value, i + 1) - 14;\n                    if (value.substring(end, end + 14) === ' as HasCompact') {\n                        value = `Compact<${value.substring(i + 1, end)}>`;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n}\nexport function flattenSingleTuple() {\n    const from1 = /,\\)/g;\n    const from2 = /\\(([^,]+)\\)/;\n    return (value) => {\n        from1.lastIndex = 0;\n        return value\n            // tuples may have trailing commas, e.g. (u32, BlockNumber, )\n            .replace(from1, ')')\n            // change (u32) -> u32\n            .replace(from2, '$1');\n    };\n}\nfunction replaceTagWith(value, matcher, replacer) {\n    let index = -1;\n    while (true) {\n        index = value.indexOf(matcher, index + 1);\n        if (index === -1) {\n            return value;\n        }\n        const start = index + matcher.length;\n        const end = findClosing(value, start);\n        value = `${value.substring(0, index)}${replacer(value.substring(start, end))}${value.substring(end + 1)}`;\n    }\n}\nexport function removeExtensions(type, isSized) {\n    return (value) => {\n        for (let i = 0, count = BOUNDED.length; i < count; i++) {\n            const tag = BOUNDED[i];\n            value = replaceTagWith(value, `${type}${tag}<`, (v) => {\n                const parts = v\n                    .split(',')\n                    .map((s) => s.trim())\n                    .filter((s) => s);\n                if (isSized) {\n                    parts.pop();\n                }\n                return `${tag}<${parts.join(',')}>`;\n            });\n        }\n        return value;\n    };\n}\nexport function removeColons() {\n    return (value) => {\n        let index = 0;\n        while (index !== -1) {\n            index = value.indexOf('::');\n            if (index === 0) {\n                value = value.substring(2);\n            }\n            else if (index !== -1) {\n                let start = index;\n                while (start !== -1 && !BOX_PRECEDING.includes(value[start])) {\n                    start--;\n                }\n                value = `${value.substring(0, start + 1)}${value.substring(index + 2)}`;\n            }\n        }\n        return value;\n    };\n}\nexport function removeGenerics() {\n    return (value) => {\n        for (let i = 0, count = value.length; i < count; i++) {\n            if (value[i] === '<') {\n                // check against the allowed wrappers, be it Vec<..>, Option<...> ...\n                const box = ALLOWED_BOXES.find((box) => {\n                    const start = i - box.length;\n                    return ((start >= 0 &&\n                        value.substring(start, i) === box) && (\n                    // make sure it is stand-alone, i.e. don't catch ElectionResult<...> as Result<...>\n                    start === 0 ||\n                        BOX_PRECEDING.includes(value[start - 1])));\n                });\n                // we have not found anything, unwrap generic innards\n                if (!box) {\n                    const end = findClosing(value, i + 1);\n                    value = `${value.substring(0, i)}${value.substring(end + 1)}`;\n                }\n            }\n        }\n        return value;\n    };\n}\nexport function removePairOf() {\n    const replacer = (v) => `(${v},${v})`;\n    return (value) => replaceTagWith(value, 'PairOf<', replacer);\n}\nexport function removeTraits() {\n    const from1 = /\\s/g;\n    const from2 = /(T|Self)::/g;\n    const from3 = /<(T|Self)asTrait>::/g;\n    const from4 = /<Tas[a-z]+::Trait>::/g;\n    const from5 = /<LookupasStaticLookup>/g;\n    const from6 = /::Type/g;\n    return (value) => {\n        from1.lastIndex = 0;\n        from2.lastIndex = 0;\n        from3.lastIndex = 0;\n        from4.lastIndex = 0;\n        from5.lastIndex = 0;\n        from6.lastIndex = 0;\n        return value\n            // remove all whitespaces\n            .replace(from1, '')\n            // anything `T::<type>` to end up as `<type>`\n            .replace(from2, '')\n            // replace `<T as Trait>::` (whitespaces were removed above)\n            .replace(from3, '')\n            // replace `<T as something::Trait>::` (whitespaces were removed above)\n            .replace(from4, '')\n            // replace <Lookup as StaticLookup>\n            .replace(from5, 'Lookup')\n            // replace `<...>::Type`\n            .replace(from6, '');\n    };\n}\nexport function removeWrap(check) {\n    const replacer = (v) => v;\n    return (value) => replaceTagWith(value, check, replacer);\n}\nconst sanitizeMap = new Map();\nexport function sanitize(value) {\n    const startValue = value.toString();\n    const memoized = sanitizeMap.get(startValue);\n    if (memoized) {\n        return memoized;\n    }\n    let result = startValue;\n    for (let i = 0, count = mappings.length; i < count; i++) {\n        result = mappings[i](result);\n    }\n    sanitizeMap.set(startValue, result);\n    return result;\n}\n","import { bnToBn, isBigInt, isBn, isBoolean, isCodec, isNumber, stringify } from '@polkadot/util';\n/** @internal **/\nfunction isArrayLike(arg) {\n    return arg instanceof Uint8Array || Array.isArray(arg);\n}\n/** @internal **/\nfunction isEnum(arg) {\n    return isCodec(arg) && isNumber(arg.index) && isCodec(arg.value);\n}\n/** @internal **/\nfunction isOption(arg) {\n    return isCodec(arg) && isBoolean(arg.isSome) && isCodec(arg.value);\n}\n/** @internal */\nfunction isNumberLike(arg) {\n    return isNumber(arg) || isBn(arg) || isBigInt(arg);\n}\n/** @internal */\nfunction sortArray(a, b) {\n    // Vec, Tuple, Bytes etc.\n    let sortRes = 0;\n    const minLen = Math.min(a.length, b.length);\n    for (let i = 0; i < minLen; ++i) {\n        sortRes = sortAsc(a[i], b[i]);\n        if (sortRes !== 0) {\n            return sortRes;\n        }\n    }\n    return a.length - b.length;\n}\n/** @internal */\nfunction checkForDuplicates(container, seen, arg) {\n    // Convert the value to hex.\n    if (isCodec(arg)) {\n        const hex = arg.toHex();\n        // Check if we have seen the value.\n        if (seen.has(hex)) {\n            // Duplicates are not allowed.\n            throw new Error(`Duplicate value in ${container}: ${stringify(arg)}`);\n        }\n        seen.add(hex);\n    }\n    return true;\n}\n/**\n* Sort keys/values of BTreeSet/BTreeMap in ascending order for encoding compatibility with Rust's BTreeSet/BTreeMap\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html)\n* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html)\n*/\nexport function sortAsc(a, b) {\n    if (isNumberLike(a) && isNumberLike(b)) {\n        return bnToBn(a).cmp(bnToBn(b));\n    }\n    else if (a instanceof Map && b instanceof Map) {\n        return sortAsc(Array.from(a.values()), Array.from(b.values()));\n    }\n    else if (isEnum(a) && isEnum(b)) {\n        return sortAsc(a.index, b.index) || sortAsc(a.value, b.value);\n    }\n    else if (isOption(a) && isOption(b)) {\n        return sortAsc(a.isNone ? 0 : 1, b.isNone ? 0 : 1) || sortAsc(a.value, b.value);\n    }\n    else if (isArrayLike(a) && isArrayLike(b)) {\n        return sortArray(a, b);\n    }\n    else if (isCodec(a) && isCodec(b)) {\n        // Text, Bool etc.\n        return sortAsc(a.toU8a(true), b.toU8a(true));\n    }\n    throw new Error(`Attempting to sort unrecognized values: ${stringify(a)} (typeof ${typeof a}) <-> ${stringify(b)} (typeof ${typeof b})`);\n}\nexport function sortSet(set) {\n    const seen = new Set();\n    return new Set(Array.from(set).filter((value) => checkForDuplicates('BTreeSet', seen, value)).sort(sortAsc));\n}\nexport function sortMap(map) {\n    const seen = new Set();\n    return new Map(Array.from(map.entries()).filter(([key]) => checkForDuplicates('BTreeMap', seen, key)).sort(([keyA], [keyB]) => sortAsc(keyA, keyB)));\n}\n","/**\n * @internal\n * From a type string or class, return the associated type class\n */\nexport function typeToConstructor(registry, type) {\n    return typeof type === 'function'\n        ? type\n        : registry.createClassUnsafe(type);\n}\n/**\n * @internal\n * Takes an input array of types and returns the associated classes for it\n*/\nexport function typesToConstructors(registry, types) {\n    const count = types.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        result[i] = typeToConstructor(registry, types[i]);\n    }\n    return result;\n}\n/**\n * @internal\n * Takes an input map of the form `{ [string]: string | CodecClass }` and returns a map of `{ [string]: CodecClass }`\n */\nexport function mapToTypeMap(registry, input) {\n    const entries = Object.entries(input);\n    const count = entries.length;\n    const output = [new Array(count), new Array(count)];\n    for (let i = 0; i < count; i++) {\n        output[1][i] = entries[i][0];\n        output[0][i] = typeToConstructor(registry, entries[i][1]);\n    }\n    return output;\n}\n","export function typesToMap(registry, [Types, keys]) {\n    const result = {};\n    for (let i = 0, count = keys.length; i < count; i++) {\n        result[keys[i]] = registry.getClassName(Types[i]) || new Types[i](registry).toRawType();\n    }\n    return result;\n}\n","import { isFunction } from '@polkadot/util';\nexport function hasEq(o) {\n    return isFunction(o.eq);\n}\n","import { BTreeMap, BTreeSet, Bytes, CodecSet, Compact, DoNotConstruct, Enum, HashMap, Int, Null, Option, Range, RangeInclusive, Result, Struct, Tuple, U8aFixed, UInt, Vec, VecFixed, WrapperKeepOpaque, WrapperOpaque } from '@polkadot/types-codec';\nimport { isNumber, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from '../types/index.js';\nimport { getTypeDef } from '../util/getTypeDef.js';\nfunction getTypeDefType({ lookupName, type }) {\n    return lookupName || type;\n}\nfunction getSubDefArray(value) {\n    if (!Array.isArray(value.sub)) {\n        throw new Error(`Expected subtype as TypeDef[] in ${stringify(value)}`);\n    }\n    return value.sub;\n}\nfunction getSubDef(value) {\n    if (!value.sub || Array.isArray(value.sub)) {\n        throw new Error(`Expected subtype as TypeDef in ${stringify(value)}`);\n    }\n    return value.sub;\n}\nfunction getSubType(value) {\n    return getTypeDefType(getSubDef(value));\n}\nfunction getTypeClassMap(value) {\n    const subs = getSubDefArray(value);\n    const map = {};\n    for (let i = 0, count = subs.length; i < count; i++) {\n        const sub = subs[i];\n        if (!sub.name) {\n            throw new Error(`No name found in definition ${stringify(sub)}`);\n        }\n        map[sub.name] = getTypeDefType(sub);\n    }\n    return map;\n}\nfunction getTypeClassArray(value) {\n    return getSubDefArray(value).map(getTypeDefType);\n}\nfunction createInt(Clazz, { displayName, length }) {\n    if (!isNumber(length)) {\n        throw new Error(`Expected bitLength information for ${displayName || Clazz.constructor.name}<bitLength>`);\n    }\n    return Clazz.with(length, displayName);\n}\nfunction createHashMap(Clazz, value) {\n    const [keyType, valueType] = getTypeClassArray(value);\n    return Clazz.with(keyType, valueType);\n}\nfunction createWithSub(Clazz, value) {\n    return Clazz.with(getSubType(value));\n}\nconst infoMapping = {\n    [TypeDefInfo.BTreeMap]: (_registry, value) => createHashMap(BTreeMap, value),\n    [TypeDefInfo.BTreeSet]: (_registry, value) => createWithSub(BTreeSet, value),\n    [TypeDefInfo.Compact]: (_registry, value) => createWithSub(Compact, value),\n    [TypeDefInfo.DoNotConstruct]: (_registry, value) => DoNotConstruct.with(value.displayName || value.type),\n    [TypeDefInfo.Enum]: (_registry, value) => {\n        const subs = getSubDefArray(value);\n        return Enum.with(subs.every(({ type }) => type === 'Null')\n            ? subs.reduce((out, { index, name }, count) => {\n                if (!name) {\n                    throw new Error('No name found in sub definition');\n                }\n                out[name] = index || count;\n                return out;\n            }, {})\n            : getTypeClassMap(value));\n    },\n    [TypeDefInfo.HashMap]: (_registry, value) => createHashMap(HashMap, value),\n    [TypeDefInfo.Int]: (_registry, value) => createInt(Int, value),\n    // We have circular deps between Linkage & Struct\n    [TypeDefInfo.Linkage]: (_registry, value) => {\n        const type = `Option<${getSubType(value)}>`;\n        // eslint-disable-next-line sort-keys\n        const Clazz = Struct.with({ previous: type, next: type });\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        Clazz.prototype.toRawType = function () {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\n            return `Linkage<${this.next.toRawType(true)}>`;\n        };\n        return Clazz;\n    },\n    [TypeDefInfo.Null]: (_registry, _value) => Null,\n    [TypeDefInfo.Option]: (_registry, value) => {\n        if (!value.sub || Array.isArray(value.sub)) {\n            throw new Error('Expected type information for Option');\n        }\n        // NOTE This is opt-in (unhandled), not by default\n        // if (value.sub.type === 'bool') {\n        //   return OptionBool;\n        // }\n        return createWithSub(Option, value);\n    },\n    [TypeDefInfo.Plain]: (registry, value) => registry.getOrUnknown(value.type),\n    [TypeDefInfo.Range]: (_registry, value) => createWithSub(Range, value),\n    [TypeDefInfo.RangeInclusive]: (_registry, value) => createWithSub(RangeInclusive, value),\n    [TypeDefInfo.Result]: (_registry, value) => {\n        const [Ok, Err] = getTypeClassArray(value);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return Result.with({ Err, Ok });\n    },\n    [TypeDefInfo.Set]: (_registry, value) => CodecSet.with(getSubDefArray(value).reduce((result, { index, name }) => {\n        if (!name || !isNumber(index)) {\n            throw new Error('No name found in sub definition');\n        }\n        result[name] = index;\n        return result;\n    }, {}), value.length),\n    [TypeDefInfo.Si]: (registry, value) => getTypeClass(registry, registry.lookup.getTypeDef(value.type)),\n    [TypeDefInfo.Struct]: (_registry, value) => Struct.with(getTypeClassMap(value), value.alias),\n    [TypeDefInfo.Tuple]: (_registry, value) => Tuple.with(getTypeClassArray(value)),\n    [TypeDefInfo.UInt]: (_registry, value) => createInt(UInt, value),\n    [TypeDefInfo.Vec]: (_registry, { sub }) => {\n        if (!sub || Array.isArray(sub)) {\n            throw new Error('Expected type information for vector');\n        }\n        return (sub.type === 'u8'\n            ? Bytes\n            : Vec.with(getTypeDefType(sub)));\n    },\n    [TypeDefInfo.VecFixed]: (_registry, { displayName, length, sub }) => {\n        if (!isNumber(length) || !sub || Array.isArray(sub)) {\n            throw new Error('Expected length & type information for fixed vector');\n        }\n        return (sub.type === 'u8'\n            ? U8aFixed.with((length * 8), displayName)\n            : VecFixed.with(getTypeDefType(sub), length));\n    },\n    [TypeDefInfo.WrapperKeepOpaque]: (_registry, value) => createWithSub(WrapperKeepOpaque, value),\n    [TypeDefInfo.WrapperOpaque]: (_registry, value) => createWithSub(WrapperOpaque, value)\n};\nexport function constructTypeClass(registry, typeDef) {\n    try {\n        const Type = infoMapping[typeDef.info](registry, typeDef);\n        if (!Type) {\n            throw new Error('No class created');\n        }\n        // don't clobber any existing\n        if (!Type.__fallbackType && typeDef.fallbackType) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore ...this is the only place we we actually assign this...\n            Type.__fallbackType = typeDef.fallbackType;\n        }\n        return Type;\n    }\n    catch (error) {\n        throw new Error(`Unable to construct class from ${stringify(typeDef)}: ${error.message}`);\n    }\n}\nexport function getTypeClass(registry, typeDef) {\n    return registry.getUnsafe(typeDef.type, false, typeDef);\n}\nexport function createClassUnsafe(registry, type) {\n    return (\n    // just retrieve via name, no creation via typeDef\n    registry.getUnsafe(type) ||\n        // we don't have an existing type, create the class via typeDef\n        getTypeClass(registry, registry.isLookupType(type)\n            ? registry.lookup.getTypeDef(type)\n            : getTypeDef(type)));\n}\n","import { Option } from '@polkadot/types-codec';\nimport { isHex, isU8a, u8aEq, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { createClassUnsafe } from './class.js';\nfunction checkInstance(created, matcher) {\n    const u8a = created.toU8a();\n    const rawType = created.toRawType();\n    const isOk = (\n    // full match, all ok\n    u8aEq(u8a, matcher) ||\n        (\n        // on a length-prefixed type, just check the actual length\n        ['Bytes', 'Text', 'Type'].includes(rawType) &&\n            matcher.length === created.length) ||\n        (\n        // when the created is empty and matcher is also empty, let it slide...\n        created.isEmpty &&\n            matcher.every((v) => !v)));\n    if (!isOk) {\n        throw new Error(`${rawType}:: Decoded input doesn't match input, received ${u8aToHex(matcher, 512)} (${matcher.length} bytes), created ${u8aToHex(u8a, 512)} (${u8a.length} bytes)`);\n    }\n}\nfunction checkPedantic(created, [value]) {\n    if (isU8a(value)) {\n        checkInstance(created, value);\n    }\n    else if (isHex(value)) {\n        checkInstance(created, u8aToU8a(value));\n    }\n}\nfunction initType(registry, Type, params = [], { blockHash, isFallback, isOptional, isPedantic } = {}) {\n    const created = new (isOptional\n        ? Option.with(Type)\n        : Type)(registry, ...params);\n    isPedantic && checkPedantic(created, params);\n    if (blockHash) {\n        created.createdAtHash = createTypeUnsafe(registry, 'BlockHash', [blockHash]);\n    }\n    if (isFallback) {\n        created.isStorageFallback = true;\n    }\n    return created;\n}\nexport function createTypeUnsafe(registry, type, params = [], options = {}) {\n    let Clazz = null;\n    let firstError = null;\n    try {\n        Clazz = createClassUnsafe(registry, type);\n        return initType(registry, Clazz, params, options);\n    }\n    catch (error) {\n        firstError = new Error(`createType(${type}):: ${error.message}`);\n    }\n    if (Clazz?.__fallbackType) {\n        try {\n            Clazz = createClassUnsafe(registry, Clazz.__fallbackType);\n            return initType(registry, Clazz, params, options);\n        }\n        catch {\n            // swallow, we will throw the first error again\n        }\n    }\n    throw firstError;\n}\n","export var TypeDefInfo;\n(function (TypeDefInfo) {\n    TypeDefInfo[TypeDefInfo[\"BTreeMap\"] = 0] = \"BTreeMap\";\n    TypeDefInfo[TypeDefInfo[\"BTreeSet\"] = 1] = \"BTreeSet\";\n    TypeDefInfo[TypeDefInfo[\"Compact\"] = 2] = \"Compact\";\n    TypeDefInfo[TypeDefInfo[\"DoNotConstruct\"] = 3] = \"DoNotConstruct\";\n    TypeDefInfo[TypeDefInfo[\"Enum\"] = 4] = \"Enum\";\n    TypeDefInfo[TypeDefInfo[\"HashMap\"] = 5] = \"HashMap\";\n    TypeDefInfo[TypeDefInfo[\"Int\"] = 6] = \"Int\";\n    TypeDefInfo[TypeDefInfo[\"Linkage\"] = 7] = \"Linkage\";\n    TypeDefInfo[TypeDefInfo[\"Null\"] = 8] = \"Null\";\n    TypeDefInfo[TypeDefInfo[\"Option\"] = 9] = \"Option\";\n    TypeDefInfo[TypeDefInfo[\"Plain\"] = 10] = \"Plain\";\n    TypeDefInfo[TypeDefInfo[\"Range\"] = 11] = \"Range\";\n    TypeDefInfo[TypeDefInfo[\"RangeInclusive\"] = 12] = \"RangeInclusive\";\n    TypeDefInfo[TypeDefInfo[\"Result\"] = 13] = \"Result\";\n    TypeDefInfo[TypeDefInfo[\"Set\"] = 14] = \"Set\";\n    TypeDefInfo[TypeDefInfo[\"Si\"] = 15] = \"Si\";\n    TypeDefInfo[TypeDefInfo[\"Struct\"] = 16] = \"Struct\";\n    TypeDefInfo[TypeDefInfo[\"Tuple\"] = 17] = \"Tuple\";\n    TypeDefInfo[TypeDefInfo[\"UInt\"] = 18] = \"UInt\";\n    TypeDefInfo[TypeDefInfo[\"Vec\"] = 19] = \"Vec\";\n    TypeDefInfo[TypeDefInfo[\"VecFixed\"] = 20] = \"VecFixed\";\n    TypeDefInfo[TypeDefInfo[\"WrapperKeepOpaque\"] = 21] = \"WrapperKeepOpaque\";\n    TypeDefInfo[TypeDefInfo[\"WrapperOpaque\"] = 22] = \"WrapperOpaque\";\n})(TypeDefInfo || (TypeDefInfo = {}));\n","import { isNumber, isUndefined, objectSpread, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from '../types/index.js';\nconst stringIdentity = (value) => value.toString();\nconst INFO_WRAP = ['BTreeMap', 'BTreeSet', 'Compact', 'HashMap', 'Option', 'Result', 'Vec'];\nexport function paramsNotation(outer, inner, transform = stringIdentity) {\n    return `${outer}${inner\n        ? `<${(Array.isArray(inner) ? inner : [inner]).map(transform).join(', ')}>`\n        : ''}`;\n}\nfunction encodeWithParams(registry, typeDef, outer) {\n    const { info, sub } = typeDef;\n    switch (info) {\n        case TypeDefInfo.BTreeMap:\n        case TypeDefInfo.BTreeSet:\n        case TypeDefInfo.Compact:\n        case TypeDefInfo.HashMap:\n        case TypeDefInfo.Linkage:\n        case TypeDefInfo.Option:\n        case TypeDefInfo.Range:\n        case TypeDefInfo.RangeInclusive:\n        case TypeDefInfo.Result:\n        case TypeDefInfo.Vec:\n        case TypeDefInfo.WrapperKeepOpaque:\n        case TypeDefInfo.WrapperOpaque:\n            return paramsNotation(outer, sub, (p) => encodeTypeDef(registry, p));\n    }\n    throw new Error(`Unable to encode ${stringify(typeDef)} with params`);\n}\nfunction encodeSubTypes(registry, sub, asEnum, extra) {\n    const names = sub.map(({ name }) => name);\n    if (!names.every((n) => !!n)) {\n        throw new Error(`Subtypes does not have consistent names, ${names.join(', ')}`);\n    }\n    const inner = objectSpread({}, extra);\n    for (let i = 0, count = sub.length; i < count; i++) {\n        const def = sub[i];\n        if (!def.name) {\n            throw new Error(`No name found in ${stringify(def)}`);\n        }\n        inner[def.name] = encodeTypeDef(registry, def);\n    }\n    return stringify(asEnum\n        ? { _enum: inner }\n        : inner);\n}\nconst encoders = {\n    [TypeDefInfo.BTreeMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeMap'),\n    [TypeDefInfo.BTreeSet]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeSet'),\n    [TypeDefInfo.Compact]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Compact'),\n    [TypeDefInfo.DoNotConstruct]: (registry, { displayName, lookupIndex, lookupName }) => `DoNotConstruct<${lookupName || displayName || (isUndefined(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex))}>`,\n    [TypeDefInfo.Enum]: (registry, { sub }) => {\n        if (!Array.isArray(sub)) {\n            throw new Error('Unable to encode Enum type');\n        }\n        // c-like enums have all Null entries\n        // TODO We need to take the disciminant into account and auto-add empty entries\n        return sub.every(({ type }) => type === 'Null')\n            ? stringify({ _enum: sub.map(({ name }, index) => `${name || `Empty${index}`}`) })\n            : encodeSubTypes(registry, sub, true);\n    },\n    [TypeDefInfo.HashMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'HashMap'),\n    [TypeDefInfo.Int]: (_registry, { length = 32 }) => `Int<${length}>`,\n    [TypeDefInfo.Linkage]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Linkage'),\n    [TypeDefInfo.Null]: (_registry, _typeDef) => 'Null',\n    [TypeDefInfo.Option]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Option'),\n    [TypeDefInfo.Plain]: (_registry, { displayName, type }) => displayName || type,\n    [TypeDefInfo.Range]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Range'),\n    [TypeDefInfo.RangeInclusive]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'RangeInclusive'),\n    [TypeDefInfo.Result]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Result'),\n    [TypeDefInfo.Set]: (_registry, { length = 8, sub }) => {\n        if (!Array.isArray(sub)) {\n            throw new Error('Unable to encode Set type');\n        }\n        return stringify({\n            _set: sub.reduce((all, { index, name }, count) => objectSpread(all, { [`${name || `Unknown${index || count}`}`]: index || count }), { _bitLength: length || 8 })\n        });\n    },\n    [TypeDefInfo.Si]: (_registry, { lookupName, type }) => lookupName || type,\n    [TypeDefInfo.Struct]: (registry, { alias, sub }) => {\n        if (!Array.isArray(sub)) {\n            throw new Error('Unable to encode Struct type');\n        }\n        return encodeSubTypes(registry, sub, false, alias\n            ? {\n                _alias: [...alias.entries()].reduce((all, [k, v]) => objectSpread(all, { [k]: v }), {})\n            }\n            : {});\n    },\n    [TypeDefInfo.Tuple]: (registry, { sub }) => {\n        if (!Array.isArray(sub)) {\n            throw new Error('Unable to encode Tuple type');\n        }\n        return `(${sub.map((type) => encodeTypeDef(registry, type)).join(',')})`;\n    },\n    [TypeDefInfo.UInt]: (_registry, { length = 32 }) => `UInt<${length}>`,\n    [TypeDefInfo.Vec]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Vec'),\n    [TypeDefInfo.VecFixed]: (_registry, { length, sub }) => {\n        if (!isNumber(length) || !sub || Array.isArray(sub)) {\n            throw new Error('Unable to encode VecFixed type');\n        }\n        return `[${sub.type};${length}]`;\n    },\n    [TypeDefInfo.WrapperKeepOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperKeepOpaque'),\n    [TypeDefInfo.WrapperOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperOpaque')\n};\nfunction encodeType(registry, typeDef, withLookup = true) {\n    return withLookup && typeDef.lookupName\n        ? typeDef.lookupName\n        : encoders[typeDef.info](registry, typeDef);\n}\nexport function encodeTypeDef(registry, typeDef) {\n    // In the case of contracts we do have the unfortunate situation where the displayName would\n    // refer to \"Option\" when it is an option. For these, string it out, only using when actually\n    // not a top-level element to be used\n    return (typeDef.displayName && !INFO_WRAP.some((i) => typeDef.displayName === i))\n        ? typeDef.displayName\n        : encodeType(registry, typeDef);\n}\nexport function withTypeString(registry, typeDef) {\n    return objectSpread({}, typeDef, {\n        type: encodeType(registry, typeDef, false)\n    });\n}\n","import { sanitize } from '@polkadot/types-codec';\nimport { isNumber, isString, objectSpread, stringify } from '@polkadot/util';\nimport { TypeDefInfo } from '../types/index.js';\nimport { typeSplit } from './typeSplit.js';\nconst KNOWN_INTERNALS = ['_alias', '_fallback'];\nfunction getTypeString(typeOrObj) {\n    return isString(typeOrObj)\n        ? typeOrObj.toString()\n        : stringify(typeOrObj);\n}\nfunction isRustEnum(details) {\n    const values = Object.values(details);\n    if (values.some((v) => isNumber(v))) {\n        if (!values.every((v) => isNumber(v) && v >= 0 && v <= 255)) {\n            throw new Error('Invalid number-indexed enum definition');\n        }\n        return false;\n    }\n    return true;\n}\nfunction _decodeEnum(value, details, count, fallbackType) {\n    value.info = TypeDefInfo.Enum;\n    value.fallbackType = fallbackType;\n    // not as pretty, but remain compatible with oo7 for both struct and Array types\n    if (Array.isArray(details)) {\n        value.sub = details.map((name, index) => ({\n            index,\n            info: TypeDefInfo.Plain,\n            name,\n            type: 'Null'\n        }));\n    }\n    else if (isRustEnum(details)) {\n        value.sub = Object.entries(details).map(([name, typeOrObj], index) => objectSpread({}, getTypeDef(getTypeString(typeOrObj || 'Null'), { name }, count), { index }));\n    }\n    else {\n        value.sub = Object.entries(details).map(([name, index]) => ({\n            index,\n            info: TypeDefInfo.Plain,\n            name,\n            type: 'Null'\n        }));\n    }\n    return value;\n}\nfunction _decodeSet(value, details, fallbackType) {\n    value.info = TypeDefInfo.Set;\n    value.fallbackType = fallbackType;\n    value.length = details._bitLength;\n    value.sub = Object\n        .entries(details)\n        .filter(([name]) => !name.startsWith('_'))\n        .map(([name, index]) => ({\n        index,\n        info: TypeDefInfo.Plain,\n        name,\n        type: 'Null'\n    }));\n    return value;\n}\nfunction _decodeStruct(value, type, _, count) {\n    const parsed = JSON.parse(type);\n    const keys = Object.keys(parsed);\n    if (parsed._enum) {\n        return _decodeEnum(value, parsed._enum, count, parsed._fallback);\n    }\n    else if (parsed._set) {\n        return _decodeSet(value, parsed._set, parsed._fallback);\n    }\n    value.alias = parsed._alias\n        ? new Map(Object.entries(parsed._alias))\n        : undefined;\n    value.fallbackType = parsed._fallback;\n    value.sub = keys\n        .filter((name) => !KNOWN_INTERNALS.includes(name))\n        .map((name) => getTypeDef(getTypeString(parsed[name]), { name }, count));\n    return value;\n}\nfunction _decodeFixedVec(value, type, _, count) {\n    const max = type.length - 1;\n    let index = -1;\n    let inner = 0;\n    for (let i = 1; (i < max) && (index === -1); i++) {\n        switch (type[i]) {\n            case ';': {\n                if (inner === 0) {\n                    index = i;\n                }\n                break;\n            }\n            case '[':\n            case '(':\n            case '<':\n                inner++;\n                break;\n            case ']':\n            case ')':\n            case '>':\n                inner--;\n                break;\n        }\n    }\n    if (index === -1) {\n        throw new Error(`${type}: Unable to extract location of ';'`);\n    }\n    const vecType = type.substring(1, index);\n    const [strLength, displayName] = type.substring(index + 1, max).split(';');\n    const length = parseInt(strLength.trim(), 10);\n    if (length > 2048) {\n        throw new Error(`${type}: Only support for [Type; <length>], where length <= 2048`);\n    }\n    value.displayName = displayName;\n    value.length = length;\n    value.sub = getTypeDef(vecType, {}, count);\n    return value;\n}\nfunction _decodeTuple(value, _, subType, count) {\n    value.sub = subType.length === 0\n        ? []\n        : typeSplit(subType).map((inner) => getTypeDef(inner, {}, count));\n    return value;\n}\nfunction _decodeAnyInt(value, type, _, clazz) {\n    const [strLength, displayName] = type.substring(clazz.length + 1, type.length - 1).split(',');\n    const length = parseInt(strLength.trim(), 10);\n    if ((length > 8192) || (length % 8)) {\n        throw new Error(`${type}: Only support for ${clazz}<bitLength>, where length <= 8192 and a power of 8, found ${length}`);\n    }\n    value.displayName = displayName;\n    value.length = length;\n    return value;\n}\nfunction _decodeInt(value, type, subType) {\n    return _decodeAnyInt(value, type, subType, 'Int');\n}\nfunction _decodeUInt(value, type, subType) {\n    return _decodeAnyInt(value, type, subType, 'UInt');\n}\nfunction _decodeDoNotConstruct(value, type, _) {\n    const NAME_LENGTH = 'DoNotConstruct'.length;\n    value.displayName = type.substring(NAME_LENGTH + 1, type.length - 1);\n    return value;\n}\nfunction hasWrapper(type, [start, end]) {\n    return (type.startsWith(start)) && (type.slice(-1 * end.length) === end);\n}\nconst nestedExtraction = [\n    ['[', ']', TypeDefInfo.VecFixed, _decodeFixedVec],\n    ['{', '}', TypeDefInfo.Struct, _decodeStruct],\n    ['(', ')', TypeDefInfo.Tuple, _decodeTuple],\n    // the inner for these are the same as tuple, multiple values\n    ['BTreeMap<', '>', TypeDefInfo.BTreeMap, _decodeTuple],\n    ['HashMap<', '>', TypeDefInfo.HashMap, _decodeTuple],\n    ['Int<', '>', TypeDefInfo.Int, _decodeInt],\n    ['Result<', '>', TypeDefInfo.Result, _decodeTuple],\n    ['UInt<', '>', TypeDefInfo.UInt, _decodeUInt],\n    ['DoNotConstruct<', '>', TypeDefInfo.DoNotConstruct, _decodeDoNotConstruct]\n];\nconst wrappedExtraction = [\n    ['BTreeSet<', '>', TypeDefInfo.BTreeSet],\n    ['Compact<', '>', TypeDefInfo.Compact],\n    ['Linkage<', '>', TypeDefInfo.Linkage],\n    ['Opaque<', '>', TypeDefInfo.WrapperOpaque],\n    ['Option<', '>', TypeDefInfo.Option],\n    ['Range<', '>', TypeDefInfo.Range],\n    ['RangeInclusive<', '>', TypeDefInfo.RangeInclusive],\n    ['Vec<', '>', TypeDefInfo.Vec],\n    ['WrapperKeepOpaque<', '>', TypeDefInfo.WrapperKeepOpaque],\n    ['WrapperOpaque<', '>', TypeDefInfo.WrapperOpaque]\n];\nfunction extractSubType(type, [start, end]) {\n    return type.substring(start.length, type.length - end.length);\n}\nexport function getTypeDef(_type, { displayName, name } = {}, count = 0) {\n    // create the type via Type, allowing types to be sanitized\n    const type = sanitize(_type);\n    const value = { displayName, info: TypeDefInfo.Plain, name, type };\n    if (++count > 64) {\n        throw new Error('getTypeDef: Maximum nested limit reached');\n    }\n    const nested = nestedExtraction.find((nested) => hasWrapper(type, nested));\n    if (nested) {\n        value.info = nested[2];\n        return nested[3](value, type, extractSubType(type, nested), count);\n    }\n    const wrapped = wrappedExtraction.find((wrapped) => hasWrapper(type, wrapped));\n    if (wrapped) {\n        value.info = wrapped[2];\n        value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);\n    }\n    return value;\n}\n","export function typeSplit(type) {\n    const result = [];\n    // these are the depths of the various tokens: <, [, {, (\n    let c = 0;\n    let f = 0;\n    let s = 0;\n    let t = 0;\n    // current start position\n    let start = 0;\n    for (let i = 0, count = type.length; i < count; i++) {\n        switch (type[i]) {\n            // if we are not nested, add the type\n            case ',': {\n                if (!(c || f || s || t)) {\n                    result.push(type.substring(start, i).trim());\n                    start = i + 1;\n                }\n                break;\n            }\n            // adjust compact/vec (and friends) depth\n            case '<':\n                c++;\n                break;\n            case '>':\n                c--;\n                break;\n            // adjust fixed vec depths\n            case '[':\n                f++;\n                break;\n            case ']':\n                f--;\n                break;\n            // adjust struct depth\n            case '{':\n                s++;\n                break;\n            case '}':\n                s--;\n                break;\n            // adjust tuple depth\n            case '(':\n                t++;\n                break;\n            case ')':\n                t--;\n                break;\n        }\n    }\n    // ensure we have all the terminators taken care of\n    if (c || f || s || t) {\n        throw new Error(`Invalid definition (missing terminators) found in ${type}`);\n    }\n    // the final leg of the journey\n    result.push(type.substring(start, type.length).trim());\n    return result;\n}\n","import { objectSpread } from '@polkadot/util';\nexport const XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];\nexport function mapXcmTypes(version) {\n    return XCM_MAPPINGS.reduce((all, key) => objectSpread(all, { [key]: `${key}${version}` }), {});\n}\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/types-known', path: (({ url: getAbsoluteUrl('ules/@polkadot/types-known/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/types-known/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/types-known/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/types-known/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '11.3.1' };\n","import { packageInfo as typesInfo } from '@polkadot/types/packageInfo';\nimport { detectPackage } from '@polkadot/util';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, [typesInfo]);\n","export const typesChain = {};\n","const sharedTypes = {\n    // Anchor\n    AnchorData: {\n        anchoredBlock: 'u64',\n        docRoot: 'H256',\n        id: 'H256'\n    },\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    PreCommitData: {\n        expirationBlock: 'u64',\n        identity: 'H256',\n        signingRoot: 'H256'\n    },\n    // Fees\n    Fee: {\n        key: 'Hash',\n        price: 'Balance'\n    },\n    // MultiAccount\n    MultiAccountData: {\n        deposit: 'Balance',\n        depositor: 'AccountId',\n        signatories: 'Vec<AccountId>',\n        threshold: 'u16'\n    },\n    // Bridge\n    ChainId: 'u8',\n    DepositNonce: 'u64',\n    ResourceId: '[u8; 32]',\n    'chainbridge::ChainId': 'u8',\n    // NFT\n    RegistryId: 'H160',\n    TokenId: 'U256',\n    AssetId: {\n        registryId: 'RegistryId',\n        tokenId: 'TokenId'\n    },\n    AssetInfo: {\n        metadata: 'Bytes'\n    },\n    MintInfo: {\n        anchorId: 'Hash',\n        proofs: 'Vec<ProofMint>',\n        staticHashes: '[Hash; 3]'\n    },\n    Proof: {\n        leafHash: 'H256',\n        sortedHashes: 'H256'\n    },\n    ProofMint: {\n        hashes: 'Vec<Hash>',\n        property: 'Bytes',\n        salt: '[u8; 32]',\n        value: 'Bytes'\n    },\n    RegistryInfo: {\n        fields: 'Vec<Bytes>',\n        ownerCanBurn: 'bool'\n    },\n    ProxyType: {\n        _enum: [\n            'Any',\n            'NonTransfer',\n            'Governance',\n            'Staking',\n            'NonProxy'\n        ]\n    }\n};\nconst standaloneTypes = {\n    ...sharedTypes,\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'LookupSource',\n    LookupSource: 'IndicesLookupSource',\n    Multiplier: 'Fixed64',\n    RefCount: 'RefCountTo259'\n};\nexport const versioned = [\n    {\n        minmax: [240, 243],\n        types: {\n            ...standaloneTypes,\n            ProxyType: {\n                _enum: [\n                    'Any',\n                    'NonTransfer',\n                    'Governance',\n                    'Staking',\n                    'Vesting'\n                ]\n            }\n        }\n    },\n    {\n        minmax: [244, 999],\n        types: { ...standaloneTypes }\n    },\n    {\n        minmax: [1000, undefined],\n        types: { ...sharedTypes }\n    }\n];\n","import { mapXcmTypes } from '@polkadot/types-create';\nconst sharedTypes = {\n    CompactAssignments: 'CompactAssignmentsWith24',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith24',\n    Keys: 'SessionKeys6',\n    ProxyType: {\n        _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'IdentityJudgement', 'CancelProxy', 'Auction']\n    },\n    Weight: 'WeightV1'\n};\nconst addrIndicesTypes = {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'LookupSource',\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith16',\n    Keys: 'SessionKeys5',\n    LookupSource: 'IndicesLookupSource',\n    ValidatorPrefs: 'ValidatorPrefsWithCommission'\n};\nconst addrAccountIdTypes = {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith16',\n    Keys: 'SessionKeys5',\n    LookupSource: 'AccountId',\n    ValidatorPrefs: 'ValidatorPrefsWithCommission'\n};\nexport const versioned = [\n    {\n        // 1020 is first CC3\n        minmax: [1019, 1031],\n        types: {\n            ...addrIndicesTypes,\n            BalanceLock: 'BalanceLockTo212',\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchError: 'DispatchErrorTo198',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            IdentityInfo: 'IdentityInfoTo198',\n            Keys: 'SessionKeys5',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            SlashingSpans: 'SlashingSpansTo204',\n            StakingLedger: 'StakingLedgerTo223',\n            Votes: 'VotesTo230',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1032, 1042],\n        types: {\n            ...addrIndicesTypes,\n            BalanceLock: 'BalanceLockTo212',\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Keys: 'SessionKeys5',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            SlashingSpans: 'SlashingSpansTo204',\n            StakingLedger: 'StakingLedgerTo223',\n            Votes: 'VotesTo230',\n            Weight: 'u32'\n        }\n    },\n    {\n        // actual at 1045 (1043-1044 is dev)\n        minmax: [1043, 1045],\n        types: {\n            ...addrIndicesTypes,\n            BalanceLock: 'BalanceLockTo212',\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Keys: 'SessionKeys5',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            StakingLedger: 'StakingLedgerTo223',\n            Votes: 'VotesTo230',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1046, 1049],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            StakingLedger: 'StakingLedgerTo223',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1050, 1054],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            ReferendumInfo: 'ReferendumInfoTo239',\n            Scheduled: 'ScheduledTo254',\n            StakingLedger: 'StakingLedgerTo240',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1055, 1056],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            Scheduled: 'ScheduledTo254',\n            StakingLedger: 'StakingLedgerTo240',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [1057, 1061],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            // Last 100% known problematic runtime range - this quite possibly need to\n            // apply to more runtime ranges that follow, we just don't know how far this\n            // should be applied to\n            //\n            // TL;DR whack-a-mole since this was not histrically checked\n            //\n            // See https://github.com/polkadot-js/api/issues/5618#issuecomment-1530970316\n            Scheduled: 'ScheduledTo254'\n        }\n    },\n    {\n        minmax: [1062, 2012],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [2013, 2022],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [2023, 2024],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [2025, 2027],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes\n        }\n    },\n    {\n        minmax: [2028, 2029],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount',\n            CompactAssignments: 'CompactAssignmentsWith16',\n            RawSolution: 'RawSolutionWith16'\n        }\n    },\n    {\n        minmax: [2030, 9000],\n        types: {\n            ...sharedTypes,\n            CompactAssignments: 'CompactAssignmentsWith16',\n            RawSolution: 'RawSolutionWith16'\n        }\n    },\n    {\n        minmax: [9010, 9099],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        // jump from 9100 to 9110, however align with Rococo\n        minmax: [9100, 9105],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata v14\n        minmax: [9106, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n","const sharedTypes = {\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith16',\n    Keys: 'SessionKeys6',\n    ProxyType: {\n        _enum: {\n            Any: 0,\n            NonTransfer: 1,\n            Governance: 2,\n            Staking: 3,\n            UnusedSudoBalances: 4,\n            IdentityJudgement: 5,\n            CancelProxy: 6,\n            Auction: 7\n        }\n    },\n    Weight: 'WeightV1'\n};\nconst addrAccountIdTypes = {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    Keys: 'SessionKeys5',\n    LookupSource: 'AccountId',\n    ValidatorPrefs: 'ValidatorPrefsWithCommission'\n};\nexport const versioned = [\n    {\n        minmax: [0, 12],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [13, 22],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [23, 24],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [25, 27],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes\n        }\n    },\n    {\n        minmax: [28, 29],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount'\n        }\n    },\n    {\n        minmax: [30, 9109],\n        types: {\n            ...sharedTypes\n        }\n    },\n    {\n        // metadata v14\n        minmax: [9110, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n","import { mapXcmTypes } from '@polkadot/types-create';\n/* eslint-disable sort-keys */\nconst sharedTypes = {\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    FullIdentification: '()', // No staking, only session (as per config)\n    Keys: 'SessionKeys7B',\n    Weight: 'WeightV1'\n};\nexport const versioned = [\n    {\n        minmax: [0, 200],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount',\n            Address: 'AccountId',\n            LookupSource: 'AccountId'\n        }\n    },\n    {\n        minmax: [201, 214],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount'\n        }\n    },\n    {\n        minmax: [215, 228],\n        types: {\n            ...sharedTypes,\n            Keys: 'SessionKeys6'\n        }\n    },\n    {\n        minmax: [229, 9099],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        minmax: [9100, 9105],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata v14\n        minmax: [9106, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n","import { mapXcmTypes } from '@polkadot/types-create';\nconst sharedTypes = {\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    TAssetBalance: 'u128',\n    ProxyType: {\n        _enum: [\n            'Any',\n            'NonTransfer',\n            'CancelProxy',\n            'Assets',\n            'AssetOwner',\n            'AssetManager',\n            'Staking'\n        ]\n    },\n    Weight: 'WeightV1'\n};\nexport const versioned = [\n    {\n        minmax: [0, 3],\n        types: {\n            // Enum was modified mid-flight -\n            // https://github.com/paritytech/substrate/pull/10382/files#diff-e4e016b33a82268b6208dc974eea841bad47597865a749fee2f937eb6fdf67b4R498\n            DispatchError: 'DispatchErrorPre6First',\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        minmax: [4, 5],\n        types: {\n            // As above, see https://github.com/polkadot-js/api/issues/5301\n            DispatchError: 'DispatchErrorPre6First',\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata V14\n        minmax: [500, 9999],\n        types: {\n            Weight: 'WeightV1',\n            TAssetConversion: 'Option<AssetId>'\n        }\n    },\n    {\n        minmax: [10000, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n];\n","import { mapXcmTypes } from '@polkadot/types-create';\nconst sharedTypes = {\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    TAssetBalance: 'u128',\n    ProxyType: {\n        _enum: [\n            'Any',\n            'NonTransfer',\n            'CancelProxy',\n            'Assets',\n            'AssetOwner',\n            'AssetManager',\n            'Staking'\n        ]\n    },\n    Weight: 'WeightV1'\n};\nexport const versioned = [\n    {\n        minmax: [0, 3],\n        types: {\n            // Enum was modified mid-flight -\n            // https://github.com/paritytech/substrate/pull/10382/files#diff-e4e016b33a82268b6208dc974eea841bad47597865a749fee2f937eb6fdf67b4R498\n            DispatchError: 'DispatchErrorPre6First',\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        minmax: [4, 5],\n        types: {\n            // As above, see https://github.com/polkadot-js/api/issues/5301\n            DispatchError: 'DispatchErrorPre6First',\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata V14\n        minmax: [500, 1001003],\n        types: {\n            Weight: 'WeightV1',\n            TAssetConversion: 'Option<AssetId>'\n        }\n    },\n    {\n        minmax: [1002000, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n","import { mapXcmTypes } from '@polkadot/types-create';\nconst sharedTypes = {\n    // 16 validators\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    RawSolution: 'RawSolutionWith16',\n    // general\n    Keys: 'SessionKeys6',\n    ProxyType: {\n        _enum: ['Any', 'NonTransfer', 'Staking', 'SudoBalances', 'IdentityJudgement', 'CancelProxy']\n    },\n    Weight: 'WeightV1'\n};\nconst addrAccountIdTypes = {\n    AccountInfo: 'AccountInfoWithRefCount',\n    Address: 'AccountId',\n    CompactAssignments: 'CompactAssignmentsWith16',\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    LookupSource: 'AccountId',\n    Keys: 'SessionKeys5',\n    RawSolution: 'RawSolutionWith16',\n    ValidatorPrefs: 'ValidatorPrefsWithCommission'\n};\nexport const versioned = [\n    {\n        minmax: [1, 2],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            Multiplier: 'Fixed64',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259',\n            Weight: 'u32'\n        }\n    },\n    {\n        minmax: [3, 22],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            OpenTip: 'OpenTipTo225',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [23, 42],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            CompactAssignments: 'CompactAssignmentsTo257',\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [43, 44],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes,\n            DispatchInfo: 'DispatchInfoTo244',\n            Heartbeat: 'HeartbeatTo244',\n            RefCount: 'RefCountTo259'\n        }\n    },\n    {\n        minmax: [45, 47],\n        types: {\n            ...sharedTypes,\n            ...addrAccountIdTypes\n        }\n    },\n    {\n        minmax: [48, 49],\n        types: {\n            ...sharedTypes,\n            AccountInfo: 'AccountInfoWithDualRefCount'\n        }\n    },\n    {\n        minmax: [50, 9099],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        minmax: [9100, 9105],\n        types: {\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata v14\n        minmax: [9106, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n    // ,\n    // {\n    //   // weight v2 introduction\n    //   minmax: [9300, undefined],\n    //   types: {\n    //     Weight: 'WeightV2'\n    //   }\n    // }\n];\n","import { mapXcmTypes } from '@polkadot/types-create';\nconst sharedTypes = {\n    DispatchErrorModule: 'DispatchErrorModuleU8',\n    TAssetBalance: 'u128',\n    ProxyType: {\n        _enum: [\n            'Any',\n            'NonTransfer',\n            'CancelProxy',\n            'Assets',\n            'AssetOwner',\n            'AssetManager',\n            'Staking'\n        ]\n    },\n    Weight: 'WeightV1'\n};\nexport const versioned = [\n    {\n        minmax: [0, 3],\n        types: {\n            // Enum was modified mid-flight -\n            // https://github.com/paritytech/substrate/pull/10382/files#diff-e4e016b33a82268b6208dc974eea841bad47597865a749fee2f937eb6fdf67b4R498\n            DispatchError: 'DispatchErrorPre6First',\n            ...sharedTypes,\n            ...mapXcmTypes('V0')\n        }\n    },\n    {\n        minmax: [4, 5],\n        types: {\n            // As above, see https://github.com/polkadot-js/api/issues/5301\n            DispatchError: 'DispatchErrorPre6First',\n            ...sharedTypes,\n            ...mapXcmTypes('V1')\n        }\n    },\n    {\n        // metadata V14\n        minmax: [500, 9434],\n        types: {\n            Weight: 'WeightV1',\n            TAssetConversion: 'Option<AssetId>'\n        }\n    },\n    {\n        minmax: [9435, undefined],\n        types: {\n            Weight: 'WeightV1'\n        }\n    }\n];\n","import { versioned as centrifugeChain } from './centrifuge-chain.js';\nimport { versioned as kusama } from './kusama.js';\nimport { versioned as node } from './node.js';\nimport { versioned as nodeTemplate } from './node-template.js';\nimport { versioned as polkadot } from './polkadot.js';\nimport { versioned as rococo } from './rococo.js';\nimport { versioned as shell } from './shell.js';\nimport { versioned as statemine } from './statemine.js';\nimport { versioned as statemint } from './statemint.js';\nimport { versioned as westend } from './westend.js';\nimport { versioned as westmint } from './westmint.js';\nexport const typesSpec = {\n    'centrifuge-chain': centrifugeChain,\n    kusama,\n    node,\n    'node-template': nodeTemplate,\n    polkadot,\n    rococo,\n    shell,\n    statemine,\n    statemint,\n    westend,\n    westmint\n};\n","export const versioned = [\n    {\n        minmax: [0, undefined],\n        types: {\n            // nothing, API tracks master\n            // (v2 weights are not yet the default)\n            Weight: 'WeightV2'\n        }\n    }\n];\n","export const versioned = [\n    {\n        minmax: [0, undefined],\n        types: {\n            // nothing, API tracks master\n            // (v2 weights are not yet the default)\n            Weight: 'WeightV2'\n        }\n    }\n];\n","export const versioned = [\n    {\n        minmax: [0, undefined],\n        types: {\n        // nothing, limited runtime\n        }\n    }\n];\n","export const upgrades = [\n    [\n        0,\n        1020,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        26669,\n        1021,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        38245,\n        1022,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        54248,\n        1023,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        59659,\n        1024,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        67651,\n        1025,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        82191,\n        1027,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        83238,\n        1028,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        101503,\n        1029,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        203466,\n        1030,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        295787,\n        1031,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        461692,\n        1032,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        504329,\n        1033,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        569327,\n        1038,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                1\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        587687,\n        1039,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        653183,\n        1040,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        693488,\n        1042,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        901442,\n        1045,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1375086,\n        1050,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1445458,\n        1051,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1472960,\n        1052,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1475648,\n        1053,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1491596,\n        1054,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1574408,\n        1055,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                2\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                1\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2064961,\n        1058,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2201991,\n        1062,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2671528,\n        2005,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2704202,\n        2007,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2728002,\n        2008,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2832534,\n        2011,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2962294,\n        2012,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3240000,\n        2013,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3274408,\n        2015,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3323565,\n        2019,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3534175,\n        2022,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3860281,\n        2023,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4143129,\n        2024,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4401242,\n        2025,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4841367,\n        2026,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5961600,\n        2027,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6137912,\n        2028,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6561855,\n        2029,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7100891,\n        2030,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7468792,\n        9010,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7668600,\n        9030,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7812476,\n        9040,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8010981,\n        9050,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8073833,\n        9070,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8555825,\n        9080,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8945245,\n        9090,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9611377,\n        9100,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9625129,\n        9111,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9866422,\n        9122,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10403784,\n        9130,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10960765,\n        9150,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11006614,\n        9151,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11404482,\n        9160,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11601803,\n        9170,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12008022,\n        9180,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12405451,\n        9190,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12665416,\n        9200,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12909508,\n        9220,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        13109752,\n        9230,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        13555777,\n        9250,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        13727747,\n        9260,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        14248044,\n        9271,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        14433840,\n        9280,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        14645900,\n        9291,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        15048375,\n        9300,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        15426015,\n        9320,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        15680713,\n        9340,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        15756296,\n        9350,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        15912007,\n        9360,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        16356547,\n        9370,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        17335450,\n        9381,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                3\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        18062739,\n        9420,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                2\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ]\n        ]\n    ],\n    [\n        18625000,\n        9430,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                2\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ]\n        ]\n    ],\n    [\n        20465806,\n        1000000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                5\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ]\n        ]\n    ],\n    [\n        21570000,\n        1001000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                7\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        21786291,\n        1001002,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                7\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        22515962,\n        1001003,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                7\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        22790000,\n        1002000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        23176015,\n        1002001,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        23450253,\n        1002004,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        23565293,\n        1002005,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ]\n];\n","export const upgrades = [\n    [\n        0,\n        0,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        29231,\n        1,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        188836,\n        5,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        199405,\n        6,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        214264,\n        7,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        244358,\n        8,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        303079,\n        9,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        314201,\n        10,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        342400,\n        11,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        443963,\n        12,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        528470,\n        13,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        687751,\n        14,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        746085,\n        15,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        787923,\n        16,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        799302,\n        17,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1205128,\n        18,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1603423,\n        23,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1733218,\n        24,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2005673,\n        25,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2436698,\n        26,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3613564,\n        27,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3899547,\n        28,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4345767,\n        29,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4876134,\n        30,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5661442,\n        9050,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6321619,\n        9080,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6713249,\n        9090,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7217907,\n        9100,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7229126,\n        9110,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7560558,\n        9122,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8115869,\n        9140,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8638103,\n        9151,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9280179,\n        9170,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9738717,\n        9180,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10156856,\n        9190,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10458576,\n        9200,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10655116,\n        9220,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10879371,\n        9230,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11328884,\n        9250,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11532856,\n        9260,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11933818,\n        9270,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        12217535,\n        9280,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ]\n        ]\n    ],\n    [\n        12245277,\n        9281,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ]\n        ]\n    ],\n    [\n        12532644,\n        9291,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ]\n        ]\n    ],\n    [\n        12876189,\n        9300,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ]\n        ]\n    ],\n    [\n        13800015,\n        9340,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ]\n        ]\n    ],\n    [\n        14188833,\n        9360,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ]\n        ]\n    ],\n    [\n        14543918,\n        9370,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ]\n        ]\n    ],\n    [\n        15978362,\n        9420,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                2\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ]\n        ]\n    ],\n    [\n        16450000,\n        9430,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                2\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ]\n        ]\n    ],\n    [\n        17840000,\n        9431,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                2\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ]\n        ]\n    ],\n    [\n        18407475,\n        1000001,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                5\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ]\n        ]\n    ],\n    [\n        19551000,\n        1001002,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                5\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        20181758,\n        1001003,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                5\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        20438530,\n        1002000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        21169168,\n        1002004,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ]\n];\n","export const upgrades = [\n    [\n        214356,\n        4,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                1\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        392764,\n        7,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        409740,\n        8,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        809976,\n        20,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        877581,\n        24,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        879238,\n        25,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        889472,\n        26,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        902937,\n        27,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        932751,\n        28,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        991142,\n        29,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1030162,\n        31,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1119657,\n        32,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1199282,\n        33,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1342534,\n        34,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1392263,\n        35,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1431703,\n        36,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1433369,\n        37,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        1490972,\n        41,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2087397,\n        43,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2316688,\n        44,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        2549864,\n        45,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3925782,\n        46,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        3925843,\n        47,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4207800,\n        48,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        4627944,\n        49,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5124076,\n        50,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5478664,\n        900,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5482450,\n        9000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                4\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5584305,\n        9010,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5784566,\n        9030,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5879822,\n        9031,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5896856,\n        9032,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        5897316,\n        9033,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6117927,\n        9050,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6210274,\n        9070,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                2\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6379314,\n        9080,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                2\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        6979141,\n        9090,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7568453,\n        9100,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7766394,\n        9111,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7911691,\n        9120,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7968866,\n        9121,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        7982889,\n        9122,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        8514322,\n        9130,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9091726,\n        9140,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9091774,\n        9150,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                3\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                1\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9406726,\n        9160,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        9921066,\n        9170,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10007115,\n        9180,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                5\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10480973,\n        9190,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10578091,\n        9200,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10678509,\n        9210,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        10811001,\n        9220,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11096116,\n        9230,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11409279,\n        9250,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11584820,\n        9251,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11716837,\n        9260,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11876919,\n        9261,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ]\n        ]\n    ],\n    [\n        11987927,\n        9270,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        12077324,\n        9271,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        12301871,\n        9280,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        12604343,\n        9290,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                2\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        12841034,\n        9300,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13128237,\n        9310,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                1\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13272363,\n        9320,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13483497,\n        9330,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13649433,\n        9340,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13761100,\n        9350,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        13847400,\n        9360,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        14249200,\n        9370,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                2\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                2\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        14576855,\n        9380,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                3\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                3\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ]\n        ]\n    ],\n    [\n        14849830,\n        9390,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                1\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                3\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ]\n        ]\n    ],\n    [\n        15146832,\n        9400,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                2\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                3\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ]\n        ]\n    ],\n    [\n        15332317,\n        9401,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                1\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                2\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                3\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ]\n        ]\n    ],\n    [\n        15661793,\n        9420,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                2\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ]\n        ]\n    ],\n    [\n        16165469,\n        9430,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                4\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                2\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ]\n        ]\n    ],\n    [\n        18293984,\n        102000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                7\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        18293991,\n        103000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                8\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        18451783,\n        104000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                9\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        18679741,\n        1005000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                9\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        19166695,\n        1006000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        19234157,\n        1006001,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        19542944,\n        1007000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        19621258,\n        1007001,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        19761406,\n        1008000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                4\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        20056997,\n        1009000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                5\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        20368318,\n        1010000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                5\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                10\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x6ff52ee858e6c5bd\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        20649086,\n        1011000,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                5\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                11\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x6ff52ee858e6c5bd\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ],\n    [\n        21217837,\n        1011001,\n        [\n            [\n                \"0xdf6acb689907609b\",\n                5\n            ],\n            [\n                \"0x37e397fc7c91f5e4\",\n                2\n            ],\n            [\n                \"0x40fe3ad401f8959a\",\n                6\n            ],\n            [\n                \"0xd2bc9897eed08f15\",\n                3\n            ],\n            [\n                \"0xf78b278be53f454c\",\n                2\n            ],\n            [\n                \"0xaf2c0297a23e6d3d\",\n                11\n            ],\n            [\n                \"0x49eaaf1b548a0cb0\",\n                3\n            ],\n            [\n                \"0x91d5df18b0d2cf58\",\n                2\n            ],\n            [\n                \"0x2a5e924655399e60\",\n                1\n            ],\n            [\n                \"0xed99c5acb25eedf5\",\n                3\n            ],\n            [\n                \"0xcbca25e39f142387\",\n                2\n            ],\n            [\n                \"0x687ad44ad37f03c2\",\n                1\n            ],\n            [\n                \"0xab3c0572291feb8b\",\n                1\n            ],\n            [\n                \"0xbc9d89904f5b923f\",\n                1\n            ],\n            [\n                \"0x37c8bb1350a9a2a8\",\n                4\n            ],\n            [\n                \"0xf3ff14d5ab527059\",\n                3\n            ],\n            [\n                \"0x6ff52ee858e6c5bd\",\n                1\n            ],\n            [\n                \"0x17a6bc0d0062aeb3\",\n                1\n            ],\n            [\n                \"0x18ef58a3b67ba770\",\n                1\n            ],\n            [\n                \"0xfbc577b9d747efd6\",\n                1\n            ]\n        ]\n    ]\n];\n","import { selectableNetworks } from '@polkadot/networks';\nimport { BN, hexToU8a } from '@polkadot/util';\nimport * as allKnown from './e2e/index.js';\nconst NET_EXTRA = {\n    westend: {\n        genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']\n    }\n};\n/** @internal */\nfunction mapRaw([network, versions]) {\n    const chain = selectableNetworks.find((n) => n.network === network) || NET_EXTRA[network];\n    if (!chain) {\n        throw new Error(`Unable to find info for chain ${network}`);\n    }\n    return {\n        genesisHash: hexToU8a(chain.genesisHash[0]),\n        network,\n        versions: versions.map(([blockNumber, specVersion, apis]) => ({\n            apis,\n            blockNumber: new BN(blockNumber),\n            specVersion: new BN(specVersion)\n        }))\n    };\n}\nexport const upgrades = Object.entries(allKnown).map(mapRaw);\n","import { bnToBn } from '@polkadot/util';\nimport { typesChain } from './chain/index.js';\nimport { typesSpec } from './spec/index.js';\nimport { upgrades } from './upgrades/index.js';\n/**\n * @description Perform the callback function using the stringified spec/chain\n * @internal\n * */\nfunction withNames(chainName, specName, fn) {\n    return fn(chainName.toString(), specName.toString());\n}\n/**\n * @descriptionFflatten a VersionedType[] into a Record<string, string>\n * @internal\n * */\nfunction filterVersions(versions = [], specVersion) {\n    return versions\n        .filter(({ minmax: [min, max] }) => (min === undefined || min === null || specVersion >= min) &&\n        (max === undefined || max === null || specVersion <= max))\n        .reduce((result, { types }) => ({ ...result, ...types }), {});\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable signed extensions (ready for registration)\n */\nexport function getSpecExtensions({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => ({\n        ...(knownTypes.typesBundle?.spec?.[s]?.signedExtensions ?? {}),\n        ...(knownTypes.typesBundle?.chain?.[c]?.signedExtensions ?? {})\n    }));\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable types (ready for registration)\n */\nexport function getSpecTypes({ knownTypes }, chainName, specName, specVersion) {\n    const _specVersion = bnToBn(specVersion).toNumber();\n    return withNames(chainName, specName, (c, s) => ({\n        // The order here is always, based on -\n        //   - spec then chain\n        //   - typesBundle takes higher precedence\n        //   - types is the final catch-all override\n        ...filterVersions(typesSpec[s], _specVersion),\n        ...filterVersions(typesChain[c], _specVersion),\n        ...filterVersions(knownTypes.typesBundle?.spec?.[s]?.types, _specVersion),\n        ...filterVersions(knownTypes.typesBundle?.chain?.[c]?.types, _specVersion),\n        ...(knownTypes.typesSpec?.[s] ?? {}),\n        ...(knownTypes.typesChain?.[c] ?? {}),\n        ...(knownTypes.types ?? {})\n    }));\n}\n/**\n * @description Based on the chain or spec, return the hasher used\n */\nexport function getSpecHasher({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => knownTypes.hasher ||\n        knownTypes.typesBundle?.chain?.[c]?.hasher ||\n        knownTypes.typesBundle?.spec?.[s]?.hasher ||\n        null);\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable rpc definitions (ready for registration)\n */\nexport function getSpecRpc({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => ({\n        ...(knownTypes.typesBundle?.spec?.[s]?.rpc ?? {}),\n        ...(knownTypes.typesBundle?.chain?.[c]?.rpc ?? {})\n    }));\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable runtime definitions (ready for registration)\n */\nexport function getSpecRuntime({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => ({\n        ...(knownTypes.typesBundle?.spec?.[s]?.runtime ?? {}),\n        ...(knownTypes.typesBundle?.chain?.[c]?.runtime ?? {})\n    }));\n}\n/**\n * @description Based on the chain and runtimeVersion, get the applicable alias definitions (ready for registration)\n */\nexport function getSpecAlias({ knownTypes }, chainName, specName) {\n    return withNames(chainName, specName, (c, s) => ({\n        // as per versions, first spec, then chain then finally non-versioned\n        ...(knownTypes.typesBundle?.spec?.[s]?.alias ?? {}),\n        ...(knownTypes.typesBundle?.chain?.[c]?.alias ?? {}),\n        ...(knownTypes.typesAlias ?? {})\n    }));\n}\n/**\n * @description Returns a version record for known chains where upgrades are being tracked\n */\nexport function getUpgradeVersion(genesisHash, blockNumber) {\n    const known = upgrades.find((u) => genesisHash.eq(u.genesisHash));\n    return known\n        ? [\n            known.versions.reduce((last, version) => {\n                return blockNumber.gt(version.blockNumber)\n                    ? version\n                    : last;\n            }, undefined),\n            known.versions.find((version) => blockNumber.lte(version.blockNumber))\n        ]\n        : [undefined, undefined];\n}\n","import { createClassUnsafe } from '@polkadot/types-create';\nexport function createClass(registry, type) {\n    return createClassUnsafe(registry, type);\n}\n","import { createTypeUnsafe } from '@polkadot/types-create';\n/**\n * Create an instance of a `type` with a given `params`.\n * @param type - A recognizable string representing the type to create an\n * instance from\n * @param params - The value to instantiate the type with\n */\nexport function createType(registry, type, ...params) {\n    return createTypeUnsafe(registry, type, params);\n}\n","import { lazyMethod } from '@polkadot/util';\nexport function lazyVariants(lookup, { type }, getName, creator) {\n    const result = {};\n    const variants = lookup.getSiType(type).def.asVariant.variants;\n    for (let i = 0, count = variants.length; i < count; i++) {\n        lazyMethod(result, variants[i], creator, getName, i);\n    }\n    return result;\n}\n","export const emptyCheck = {\n    extrinsic: {},\n    payload: {}\n};\n","import { emptyCheck } from './emptyCheck.js';\nexport const polkadot = {\n    LimitParathreadCommits: emptyCheck,\n    OnlyStakingAndClaims: emptyCheck,\n    PrevalidateAttests: emptyCheck,\n    RestrictFunctionality: emptyCheck,\n    TransactionCallFilter: emptyCheck,\n    ValidateDoubleVoteReports: emptyCheck\n};\n","import { emptyCheck } from './emptyCheck.js';\nexport const shell = {\n    DisallowSigned: emptyCheck\n};\n","import { emptyCheck } from './emptyCheck.js';\nconst CheckMetadataHash = {\n    extrinsic: {\n        mode: 'u8'\n    },\n    payload: {\n        metadataHash: 'Option<[u8;32]>'\n    }\n};\nconst CheckMortality = {\n    extrinsic: {\n        era: 'ExtrinsicEra'\n    },\n    payload: {\n        blockHash: 'Hash'\n    }\n};\nconst ChargeTransactionPayment = {\n    extrinsic: {\n        tip: 'Compact<Balance>'\n    },\n    payload: {}\n};\nexport const substrate = {\n    ChargeTransactionPayment,\n    CheckBlockGasLimit: emptyCheck,\n    CheckEra: CheckMortality,\n    CheckGenesis: {\n        extrinsic: {},\n        payload: {\n            genesisHash: 'Hash'\n        }\n    },\n    CheckMetadataHash,\n    CheckMortality,\n    CheckNonZeroSender: emptyCheck,\n    CheckNonce: {\n        extrinsic: {\n            nonce: 'Compact<Index>'\n        },\n        payload: {}\n    },\n    CheckSpecVersion: {\n        extrinsic: {},\n        payload: {\n            specVersion: 'u32'\n        }\n    },\n    CheckTxVersion: {\n        extrinsic: {},\n        payload: {\n            transactionVersion: 'u32'\n        }\n    },\n    CheckVersion: {\n        extrinsic: {},\n        payload: {\n            specVersion: 'u32'\n        }\n    },\n    CheckWeight: emptyCheck,\n    LockStakingStatus: emptyCheck,\n    SkipCheckIfFeeless: ChargeTransactionPayment,\n    ValidateEquivocationReport: emptyCheck\n};\n","import { objectSpread } from '@polkadot/util';\nimport { polkadot } from './polkadot.js';\nimport { shell } from './shell.js';\nimport { statemint } from './statemint.js';\nimport { substrate } from './substrate.js';\nexport const allExtensions = objectSpread({}, substrate, polkadot, shell, statemint);\nexport const fallbackExtensions = [\n    'CheckVersion',\n    'CheckGenesis',\n    'CheckEra',\n    'CheckNonce',\n    'CheckWeight',\n    'ChargeTransactionPayment',\n    'CheckBlockGasLimit'\n];\nexport function findUnknownExtensions(extensions, userExtensions = {}) {\n    const names = [...Object.keys(allExtensions), ...Object.keys(userExtensions)];\n    return extensions.filter((k) => !names.includes(k));\n}\nexport function expandExtensionTypes(extensions, type, userExtensions = {}) {\n    return extensions\n        // Always allow user extensions first - these should provide overrides\n        .map((k) => userExtensions[k] || allExtensions[k])\n        .filter((info) => !!info)\n        .reduce((result, info) => objectSpread(result, info[type]), {});\n}\n","export const statemint = {\n    ChargeAssetTxPayment: {\n        extrinsic: {\n            tip: 'Compact<Balance>',\n            // eslint-disable-next-line sort-keys\n            assetId: 'TAssetConversion'\n        },\n        payload: {}\n    }\n};\n","import { DoNotConstruct, Json, Raw } from '@polkadot/types-codec';\nimport { constructTypeClass, createClassUnsafe, createTypeUnsafe } from '@polkadot/types-create';\nimport { assertReturn, BN_ZERO, formatBalance, isBn, isFunction, isNumber, isString, isU8a, lazyMethod, logger, objectSpread, stringCamelCase, stringify } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { expandExtensionTypes, fallbackExtensions, findUnknownExtensions } from '../extrinsic/signedExtensions/index.js';\nimport { GenericEventData } from '../generic/Event.js';\nimport * as baseTypes from '../index.types.js';\nimport * as definitions from '../interfaces/definitions.js';\nimport { createCallFunction } from '../metadata/decorate/extrinsics/index.js';\nimport { decorateConstants, filterCallsSome, filterEventsSome } from '../metadata/decorate/index.js';\nimport { Metadata } from '../metadata/Metadata.js';\nimport { PortableRegistry } from '../metadata/PortableRegistry/index.js';\nimport { lazyVariants } from './lazy.js';\nconst DEFAULT_FIRST_CALL_IDX = new Uint8Array(2);\nconst l = logger('registry');\nfunction sortDecimalStrings(a, b) {\n    return parseInt(a, 10) - parseInt(b, 10);\n}\nfunction valueToString(v) {\n    return v.toString();\n}\nfunction getFieldArgs(lookup, fields) {\n    const count = fields.length;\n    const args = new Array(count);\n    for (let i = 0; i < count; i++) {\n        args[i] = lookup.getTypeDef(fields[i].type).type;\n    }\n    return args;\n}\nfunction clearRecord(record) {\n    const keys = Object.keys(record);\n    for (let i = 0, count = keys.length; i < count; i++) {\n        delete record[keys[i]];\n    }\n}\nfunction getVariantStringIdx({ index }) {\n    return index.toString();\n}\nfunction injectErrors(_, { lookup, pallets }, version, result) {\n    clearRecord(result);\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { errors, index, name } = pallets[i];\n        if (errors.isSome) {\n            const sectionName = stringCamelCase(name);\n            lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, errors.unwrap(), getVariantStringIdx, ({ docs, fields, index, name }) => ({\n                args: getFieldArgs(lookup, fields),\n                docs: docs.map(valueToString),\n                fields,\n                index: index.toNumber(),\n                method: name.toString(),\n                name: name.toString(),\n                section: sectionName\n            })));\n        }\n    }\n}\nfunction injectEvents(registry, { lookup, pallets }, version, result) {\n    const filtered = pallets.filter(filterEventsSome);\n    clearRecord(result);\n    for (let i = 0, count = filtered.length; i < count; i++) {\n        const { events, index, name } = filtered[i];\n        lazyMethod(result, version >= 12 ? index.toNumber() : i, () => lazyVariants(lookup, events.unwrap(), getVariantStringIdx, (variant) => {\n            const meta = registry.createType('EventMetadataLatest', objectSpread({}, variant, { args: getFieldArgs(lookup, variant.fields) }));\n            return class extends GenericEventData {\n                constructor(registry, value) {\n                    super(registry, value, meta, stringCamelCase(name), variant.name.toString());\n                }\n            };\n        }));\n    }\n}\nfunction injectExtrinsics(registry, { lookup, pallets }, version, result, mapping) {\n    const filtered = pallets.filter(filterCallsSome);\n    clearRecord(result);\n    clearRecord(mapping);\n    for (let i = 0, count = filtered.length; i < count; i++) {\n        const { calls, index, name } = filtered[i];\n        const sectionIndex = version >= 12 ? index.toNumber() : i;\n        const sectionName = stringCamelCase(name);\n        const allCalls = calls.unwrap();\n        lazyMethod(result, sectionIndex, () => lazyVariants(lookup, allCalls, getVariantStringIdx, (variant) => createCallFunction(registry, lookup, variant, sectionName, sectionIndex)));\n        const { path } = registry.lookup.getSiType(allCalls.type);\n        // frame_system::pallet::Call / pallet_balances::pallet::Call / polkadot_runtime_parachains::configuration::pallet::Call /\n        const palletIdx = path.findIndex((v) => v.eq('pallet'));\n        if (palletIdx !== -1) {\n            const name = stringCamelCase(path\n                .slice(0, palletIdx)\n                .map((p, i) => i === 0\n                // frame_system || pallet_balances\n                ? p.replace(/^(frame|pallet)_/, '')\n                : p)\n                .join(' '));\n            if (!mapping[name]) {\n                mapping[name] = [sectionName];\n            }\n            else {\n                mapping[name].push(sectionName);\n            }\n        }\n    }\n}\nfunction extractProperties(registry, metadata) {\n    const original = registry.getChainProperties();\n    const constants = decorateConstants(registry, metadata.asLatest, metadata.version);\n    const ss58Format = constants['system'] && (constants['system']['sS58Prefix'] || constants['system']['ss58Prefix']);\n    if (!ss58Format) {\n        return original;\n    }\n    const { isEthereum, tokenDecimals, tokenSymbol } = original || {};\n    return registry.createTypeUnsafe('ChainProperties', [{ isEthereum, ss58Format, tokenDecimals, tokenSymbol }]);\n}\nexport class TypeRegistry {\n    __internal__chainProperties;\n    __internal__classes = new Map();\n    __internal__definitions = new Map();\n    __internal__firstCallIndex = null;\n    __internal__hasher = blake2AsU8a;\n    __internal__knownTypes = {};\n    __internal__lookup;\n    __internal__metadata;\n    __internal__metadataVersion = 0;\n    __internal__signedExtensions = fallbackExtensions;\n    __internal__unknownTypes = new Map();\n    __internal__userExtensions;\n    __internal__knownDefaults;\n    __internal__knownDefaultsEntries;\n    __internal__knownDefinitions;\n    __internal__metadataCalls = {};\n    __internal__metadataErrors = {};\n    __internal__metadataEvents = {};\n    __internal__moduleMap = {};\n    createdAtHash;\n    constructor(createdAtHash) {\n        this.__internal__knownDefaults = objectSpread({ Json, Metadata, PortableRegistry, Raw }, baseTypes);\n        this.__internal__knownDefaultsEntries = Object.entries(this.__internal__knownDefaults);\n        this.__internal__knownDefinitions = definitions;\n        const allKnown = Object.values(this.__internal__knownDefinitions);\n        for (let i = 0, count = allKnown.length; i < count; i++) {\n            this.register(allKnown[i].types);\n        }\n        if (createdAtHash) {\n            this.createdAtHash = this.createType('BlockHash', createdAtHash);\n        }\n    }\n    get chainDecimals() {\n        if (this.__internal__chainProperties?.tokenDecimals.isSome) {\n            const allDecimals = this.__internal__chainProperties.tokenDecimals.unwrap();\n            if (allDecimals.length) {\n                return allDecimals.map((b) => b.toNumber());\n            }\n        }\n        return [12];\n    }\n    get chainIsEthereum() {\n        return this.__internal__chainProperties?.isEthereum.isTrue || false;\n    }\n    get chainSS58() {\n        return this.__internal__chainProperties?.ss58Format.isSome\n            ? this.__internal__chainProperties.ss58Format.unwrap().toNumber()\n            : undefined;\n    }\n    get chainTokens() {\n        if (this.__internal__chainProperties?.tokenSymbol.isSome) {\n            const allTokens = this.__internal__chainProperties.tokenSymbol.unwrap();\n            if (allTokens.length) {\n                return allTokens.map(valueToString);\n            }\n        }\n        return [formatBalance.getDefaults().unit];\n    }\n    get firstCallIndex() {\n        return this.__internal__firstCallIndex || DEFAULT_FIRST_CALL_IDX;\n    }\n    /**\n     * @description Returns true if the type is in a Compat format\n     */\n    isLookupType(value) {\n        return /Lookup\\d+$/.test(value);\n    }\n    /**\n     * @description Creates a lookup string from the supplied id\n     */\n    createLookupType(lookupId) {\n        return `Lookup${typeof lookupId === 'number' ? lookupId : lookupId.toNumber()}`;\n    }\n    get knownTypes() {\n        return this.__internal__knownTypes;\n    }\n    get lookup() {\n        return assertReturn(this.__internal__lookup, 'PortableRegistry has not been set on this registry');\n    }\n    get metadata() {\n        return assertReturn(this.__internal__metadata, 'Metadata has not been set on this registry');\n    }\n    get unknownTypes() {\n        return [...this.__internal__unknownTypes.keys()];\n    }\n    get signedExtensions() {\n        return this.__internal__signedExtensions;\n    }\n    clearCache() {\n        this.__internal__classes = new Map();\n    }\n    /**\n     * @describe Creates an instance of the class\n     */\n    createClass(type) {\n        return createClassUnsafe(this, type);\n    }\n    /**\n     * @describe Creates an instance of the class\n     */\n    createClassUnsafe(type) {\n        return createClassUnsafe(this, type);\n    }\n    /**\n     * @description Creates an instance of a type as registered\n     */\n    createType(type, ...params) {\n        return createTypeUnsafe(this, type, params);\n    }\n    /**\n     * @description Creates an instance of a type as registered\n     */\n    createTypeUnsafe(type, params, options) {\n        return createTypeUnsafe(this, type, params, options);\n    }\n    // find a specific call\n    findMetaCall(callIndex) {\n        const [section, method] = [callIndex[0], callIndex[1]];\n        return assertReturn(this.__internal__metadataCalls[`${section}`] && this.__internal__metadataCalls[`${section}`][`${method}`], () => `findMetaCall: Unable to find Call with index [${section}, ${method}]/[${callIndex.toString()}]`);\n    }\n    // finds an error\n    findMetaError(errorIndex) {\n        const [section, method] = isU8a(errorIndex)\n            ? [errorIndex[0], errorIndex[1]]\n            : [\n                errorIndex.index.toNumber(),\n                isU8a(errorIndex.error)\n                    ? errorIndex.error[0]\n                    : errorIndex.error.toNumber()\n            ];\n        return assertReturn(this.__internal__metadataErrors[`${section}`] && this.__internal__metadataErrors[`${section}`][`${method}`], () => `findMetaError: Unable to find Error with index [${section}, ${method}]/[${errorIndex.toString()}]`);\n    }\n    findMetaEvent(eventIndex) {\n        const [section, method] = [eventIndex[0], eventIndex[1]];\n        return assertReturn(this.__internal__metadataEvents[`${section}`] && this.__internal__metadataEvents[`${section}`][`${method}`], () => `findMetaEvent: Unable to find Event with index [${section}, ${method}]/[${eventIndex.toString()}]`);\n    }\n    get(name, withUnknown, knownTypeDef) {\n        return this.getUnsafe(name, withUnknown, knownTypeDef);\n    }\n    getUnsafe(name, withUnknown, knownTypeDef) {\n        let Type = this.__internal__classes.get(name) || this.__internal__knownDefaults[name];\n        // we have not already created the type, attempt it\n        if (!Type) {\n            const definition = this.__internal__definitions.get(name);\n            let BaseType;\n            // we have a definition, so create the class now (lazily)\n            if (definition) {\n                BaseType = createClassUnsafe(this, definition);\n            }\n            else if (knownTypeDef) {\n                BaseType = constructTypeClass(this, knownTypeDef);\n            }\n            else if (withUnknown) {\n                l.warn(`Unable to resolve type ${name}, it will fail on construction`);\n                this.__internal__unknownTypes.set(name, true);\n                BaseType = DoNotConstruct.with(name);\n            }\n            if (BaseType) {\n                // NOTE If we didn't extend here, we would have strange artifacts. An example is\n                // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128\n                // Additionally, we now pass through the registry, which is a link to ourselves\n                Type = class extends BaseType {\n                };\n                this.__internal__classes.set(name, Type);\n                // In the case of lookups, we also want to store the actual class against\n                // the lookup name, instad of having to traverse again\n                if (knownTypeDef && isNumber(knownTypeDef.lookupIndex)) {\n                    this.__internal__classes.set(this.createLookupType(knownTypeDef.lookupIndex), Type);\n                }\n            }\n        }\n        return Type;\n    }\n    getChainProperties() {\n        return this.__internal__chainProperties;\n    }\n    getClassName(Type) {\n        // we cannot rely on export order (anymore, since babel/core 7.15.8), so in the case of\n        // items such as u32 & U32, we get the lowercase versions here... not quite as optimal\n        // (previously this used to be a simple find & return)\n        const names = [];\n        for (const [name, Clazz] of this.__internal__knownDefaultsEntries) {\n            if (Type === Clazz) {\n                names.push(name);\n            }\n        }\n        for (const [name, Clazz] of this.__internal__classes.entries()) {\n            if (Type === Clazz) {\n                names.push(name);\n            }\n        }\n        return names.length\n            // both sort and reverse are done in-place\n            // ['U32', 'u32'] -> ['u32', 'U32']\n            ? names.sort().reverse()[0]\n            : undefined;\n    }\n    getDefinition(typeName) {\n        return this.__internal__definitions.get(typeName);\n    }\n    getModuleInstances(specName, moduleName) {\n        return this.__internal__knownTypes?.typesBundle?.spec?.[specName.toString()]?.instances?.[moduleName] || this.__internal__moduleMap[moduleName];\n    }\n    getOrThrow(name) {\n        const Clazz = this.get(name);\n        if (!Clazz) {\n            throw new Error(`type ${name} not found`);\n        }\n        return Clazz;\n    }\n    getOrUnknown(name) {\n        return this.get(name, true);\n    }\n    getSignedExtensionExtra() {\n        return expandExtensionTypes(this.__internal__signedExtensions, 'payload', this.__internal__userExtensions);\n    }\n    getSignedExtensionTypes() {\n        return expandExtensionTypes(this.__internal__signedExtensions, 'extrinsic', this.__internal__userExtensions);\n    }\n    hasClass(name) {\n        return this.__internal__classes.has(name) || !!this.__internal__knownDefaults[name];\n    }\n    hasDef(name) {\n        return this.__internal__definitions.has(name);\n    }\n    hasType(name) {\n        return !this.__internal__unknownTypes.get(name) && (this.hasClass(name) || this.hasDef(name));\n    }\n    hash(data) {\n        return this.createType('CodecHash', this.__internal__hasher(data));\n    }\n    // eslint-disable-next-line no-dupe-class-members\n    register(arg1, arg2) {\n        // NOTE Constructors appear as functions here\n        if (isFunction(arg1)) {\n            this.__internal__classes.set(arg1.name, arg1);\n        }\n        else if (isString(arg1)) {\n            if (!isFunction(arg2)) {\n                throw new Error(`Expected class definition passed to '${arg1}' registration`);\n            }\n            else if (arg1 === arg2.toString()) {\n                throw new Error(`Unable to register circular ${arg1} === ${arg1}`);\n            }\n            this.__internal__classes.set(arg1, arg2);\n        }\n        else {\n            this.__internal__registerObject(arg1);\n        }\n    }\n    __internal__registerObject = (obj) => {\n        const entries = Object.entries(obj);\n        for (let e = 0, count = entries.length; e < count; e++) {\n            const [name, type] = entries[e];\n            if (isFunction(type)) {\n                // This _looks_ a bit funny, but `typeof Clazz === 'function'\n                this.__internal__classes.set(name, type);\n            }\n            else {\n                const def = isString(type)\n                    ? type\n                    : stringify(type);\n                if (name === def) {\n                    throw new Error(`Unable to register circular ${name} === ${def}`);\n                }\n                // we already have this type, remove the classes registered for it\n                if (this.__internal__classes.has(name)) {\n                    this.__internal__classes.delete(name);\n                }\n                this.__internal__definitions.set(name, def);\n            }\n        }\n    };\n    // sets the chain properties\n    setChainProperties(properties) {\n        if (properties) {\n            this.__internal__chainProperties = properties;\n        }\n    }\n    setHasher(hasher) {\n        this.__internal__hasher = hasher || blake2AsU8a;\n    }\n    setKnownTypes(knownTypes) {\n        this.__internal__knownTypes = knownTypes;\n    }\n    setLookup(lookup) {\n        this.__internal__lookup = lookup;\n        // register all applicable types found\n        lookup.register();\n    }\n    // register alias types alongside the portable/lookup setup\n    // (we don't combine this into setLookup since that would/could\n    // affect stand-along lookups, such as ABIs which don't have\n    // actual on-chain metadata)\n    __internal__registerLookup = (lookup) => {\n        // attach the lookup before we register any types\n        this.setLookup(lookup);\n        // we detect based on runtime configuration\n        let Weight = null;\n        if (this.hasType('SpWeightsWeightV2Weight')) {\n            // detection for WeightV2 type based on latest naming\n            const weightv2 = this.createType('SpWeightsWeightV2Weight');\n            Weight = weightv2.refTime && weightv2.proofSize\n                // with both refTime & proofSize we use as-is (WeightV2)\n                ? 'SpWeightsWeightV2Weight'\n                // fallback to WeightV1 (WeightV1.5 is a struct, single field)\n                : 'WeightV1';\n        }\n        else if (!isBn(this.createType('Weight'))) {\n            // where we have an already-supplied BN override, we don't clobber\n            // it with our detected value (This protects against pre-defines\n            // where Weight may be aliassed to WeightV0, e.g. in early Kusama chains)\n            Weight = 'WeightV1';\n        }\n        if (Weight) {\n            // we have detected a version, adjust the definition\n            this.register({ Weight });\n        }\n    };\n    // sets the metadata\n    setMetadata(metadata, signedExtensions, userExtensions, noInitWarn) {\n        this.__internal__metadata = metadata.asLatest;\n        this.__internal__metadataVersion = metadata.version;\n        this.__internal__firstCallIndex = null;\n        // attach the lookup at this point and register relevant types (before injecting)\n        this.__internal__registerLookup(this.__internal__metadata.lookup);\n        injectExtrinsics(this, this.__internal__metadata, this.__internal__metadataVersion, this.__internal__metadataCalls, this.__internal__moduleMap);\n        injectErrors(this, this.__internal__metadata, this.__internal__metadataVersion, this.__internal__metadataErrors);\n        injectEvents(this, this.__internal__metadata, this.__internal__metadataVersion, this.__internal__metadataEvents);\n        // set the default call index (the lowest section, the lowest method)\n        // in most chains this should be 0,0\n        const [defSection] = Object\n            .keys(this.__internal__metadataCalls)\n            .sort(sortDecimalStrings);\n        if (defSection) {\n            const [defMethod] = Object\n                .keys(this.__internal__metadataCalls[defSection])\n                .sort(sortDecimalStrings);\n            if (defMethod) {\n                this.__internal__firstCallIndex = new Uint8Array([parseInt(defSection, 10), parseInt(defMethod, 10)]);\n            }\n        }\n        // setup the available extensions\n        this.setSignedExtensions(signedExtensions || (this.__internal__metadata.extrinsic.version.gt(BN_ZERO)\n            // FIXME Use the extension and their injected types\n            ? this.__internal__metadata.extrinsic.signedExtensions.map(({ identifier }) => identifier.toString())\n            : fallbackExtensions), userExtensions, noInitWarn);\n        // setup the chain properties with format overrides\n        this.setChainProperties(extractProperties(this, metadata));\n    }\n    // sets the available signed extensions\n    setSignedExtensions(signedExtensions = fallbackExtensions, userExtensions, noInitWarn) {\n        this.__internal__signedExtensions = signedExtensions;\n        this.__internal__userExtensions = userExtensions;\n        if (!noInitWarn) {\n            const unknown = findUnknownExtensions(this.__internal__signedExtensions, this.__internal__userExtensions);\n            if (unknown.length) {\n                l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);\n            }\n        }\n    }\n}\n","import { AbstractBase } from '@polkadot/types-codec';\nimport { compactAddLength, compactFromU8a, compactToU8a, isHex, isU8a, objectProperty, objectSpread, u8aConcat, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { EXTRINSIC_VERSION as LATEST_EXTRINSIC_VERSION } from './v4/Extrinsic.js';\nimport { BIT_SIGNED, BIT_UNSIGNED, DEFAULT_VERSION, UNMASK_VERSION } from './constants.js';\nconst VERSIONS = [\n    'ExtrinsicUnknown', // v0 is unknown\n    'ExtrinsicUnknown',\n    'ExtrinsicUnknown',\n    'ExtrinsicUnknown',\n    'ExtrinsicV4'\n];\nexport { LATEST_EXTRINSIC_VERSION };\n/** @internal */\nfunction newFromValue(registry, value, version) {\n    if (value instanceof GenericExtrinsic) {\n        return value.unwrap();\n    }\n    const isSigned = (version & BIT_SIGNED) === BIT_SIGNED;\n    const type = VERSIONS[version & UNMASK_VERSION] || VERSIONS[0];\n    // we cast here since the VERSION definition is incredibly broad - we don't have a\n    // slice for \"only add extrinsic types\", and more string definitions become unwieldy\n    return registry.createTypeUnsafe(type, [value, { isSigned, version }]);\n}\n/** @internal */\nfunction decodeExtrinsic(registry, value, version = DEFAULT_VERSION) {\n    if (isU8a(value) || Array.isArray(value) || isHex(value)) {\n        return decodeU8a(registry, u8aToU8a(value), version);\n    }\n    else if (value instanceof registry.createClassUnsafe('Call')) {\n        return newFromValue(registry, { method: value }, version);\n    }\n    return newFromValue(registry, value, version);\n}\n/** @internal */\nfunction decodeU8a(registry, value, version) {\n    if (!value.length) {\n        return newFromValue(registry, new Uint8Array(), version);\n    }\n    const [offset, length] = compactFromU8a(value);\n    const total = offset + length.toNumber();\n    if (total > value.length) {\n        throw new Error(`Extrinsic: length less than remainder, expected at least ${total}, found ${value.length}`);\n    }\n    const data = value.subarray(offset, total);\n    return newFromValue(registry, data.subarray(1), data[0]);\n}\nclass ExtrinsicBase extends AbstractBase {\n    constructor(registry, value, initialU8aLength) {\n        super(registry, value, initialU8aLength);\n        const signKeys = Object.keys(registry.getSignedExtensionTypes());\n        const getter = (key) => this.inner.signature[key];\n        // This is on the abstract class, ensuring that hasOwnProperty operates\n        // correctly, i.e. it needs to be on the base class exposing it\n        for (let i = 0, count = signKeys.length; i < count; i++) {\n            objectProperty(this, signKeys[i], getter);\n        }\n    }\n    /**\n     * @description The arguments passed to for the call, exposes args so it is compatible with [[Call]]\n     */\n    get args() {\n        return this.method.args;\n    }\n    /**\n     * @description The argument definitions, compatible with [[Call]]\n     */\n    get argsDef() {\n        return this.method.argsDef;\n    }\n    /**\n     * @description The actual `[sectionIndex, methodIndex]` as used in the Call\n     */\n    get callIndex() {\n        return this.method.callIndex;\n    }\n    /**\n     * @description The actual data for the Call\n     */\n    get data() {\n        return this.method.data;\n    }\n    /**\n     * @description The era for this extrinsic\n     */\n    get era() {\n        return this.inner.signature.era;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description `true` id the extrinsic is signed\n     */\n    get isSigned() {\n        return this.inner.signature.isSigned;\n    }\n    /**\n     * @description The length of the actual data, excluding prefix\n     */\n    get length() {\n        return this.toU8a(true).length;\n    }\n    /**\n     * @description The [[FunctionMetadataLatest]] that describes the extrinsic\n     */\n    get meta() {\n        return this.method.meta;\n    }\n    /**\n     * @description The [[Call]] this extrinsic wraps\n     */\n    get method() {\n        return this.inner.method;\n    }\n    /**\n     * @description The nonce for this extrinsic\n     */\n    get nonce() {\n        return this.inner.signature.nonce;\n    }\n    /**\n     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n     */\n    get signature() {\n        return this.inner.signature.signature;\n    }\n    /**\n     * @description The [[Address]] that signed\n     */\n    get signer() {\n        return this.inner.signature.signer;\n    }\n    /**\n     * @description Forwards compat\n     */\n    get tip() {\n        return this.inner.signature.tip;\n    }\n    /**\n     * @description Forward compat\n     */\n    get assetId() {\n        return this.inner.signature.assetId;\n    }\n    /**\n     * @description Forward compat\n     */\n    get metadataHash() {\n        return this.inner.signature.metadataHash;\n    }\n    /**\n     * @description Returns the raw transaction version (not flagged with signing information)\n    */\n    get type() {\n        return this.inner.version;\n    }\n    get inner() {\n        return this.unwrap();\n    }\n    /**\n     * @description Returns the encoded version flag\n    */\n    get version() {\n        return this.type | (this.isSigned ? BIT_SIGNED : BIT_UNSIGNED);\n    }\n    /**\n     * @description Checks if the source matches this in type\n     */\n    is(other) {\n        return this.method.is(other);\n    }\n    unwrap() {\n        return super.unwrap();\n    }\n}\n/**\n * @name GenericExtrinsic\n * @description\n * Representation of an Extrinsic in the system. It contains the actual call,\n * (optional) signature and encodes with an actual length prefix\n *\n * {@link https://github.com/paritytech/wiki/blob/master/Extrinsic.md#the-extrinsic-format-for-node}.\n *\n * Can be:\n * - signed, to create a transaction\n * - left as is, to create an inherent\n */\nexport class GenericExtrinsic extends ExtrinsicBase {\n    __internal__hashCache;\n    static LATEST_EXTRINSIC_VERSION = LATEST_EXTRINSIC_VERSION;\n    constructor(registry, value, { version } = {}) {\n        super(registry, decodeExtrinsic(registry, value, version));\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n    get hash() {\n        if (!this.__internal__hashCache) {\n            this.__internal__hashCache = super.hash;\n        }\n        return this.__internal__hashCache;\n    }\n    /**\n     * @description Injects an already-generated signature into the extrinsic\n     */\n    addSignature(signer, signature, payload) {\n        this.inner.addSignature(signer, signature, payload);\n        this.__internal__hashCache = undefined;\n        return this;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const encoded = u8aConcat(...this.toU8aInner());\n        return {\n            inner: this.isSigned\n                ? this.inner.inspect().inner\n                : this.inner.method.inspect().inner,\n            outer: [compactToU8a(encoded.length), new Uint8Array([this.version])]\n        };\n    }\n    /**\n     * @description Sign the extrinsic with a specific keypair\n     */\n    sign(account, options) {\n        this.inner.sign(account, options);\n        this.__internal__hashCache = undefined;\n        return this;\n    }\n    /**\n     * @describe Adds a fake signature to the extrinsic\n     */\n    signFake(signer, options) {\n        this.inner.signFake(signer, options);\n        this.__internal__hashCache = undefined;\n        return this;\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex(isBare) {\n        return u8aToHex(this.toU8a(isBare));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExpanded, disableAscii) {\n        return objectSpread({}, {\n            isSigned: this.isSigned,\n            method: this.method.toHuman(isExpanded, disableAscii)\n        }, this.isSigned\n            ? {\n                assetId: this.assetId ? this.assetId.toHuman(isExpanded, disableAscii) : null,\n                era: this.era.toHuman(isExpanded, disableAscii),\n                metadataHash: this.metadataHash ? this.metadataHash.toHex() : null,\n                nonce: this.nonce.toHuman(isExpanded, disableAscii),\n                signature: this.signature.toHex(),\n                signer: this.signer.toHuman(isExpanded, disableAscii),\n                tip: this.tip.toHuman(isExpanded, disableAscii)\n            }\n            : null);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toHex();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Extrinsic';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value is not length-prefixed\n     */\n    toU8a(isBare) {\n        const encoded = u8aConcat(...this.toU8aInner());\n        return isBare\n            ? encoded\n            : compactAddLength(encoded);\n    }\n    toU8aInner() {\n        // we do not apply bare to the internal values, rather this only determines out length addition,\n        // where we strip all lengths this creates an extrinsic that cannot be decoded\n        return [\n            new Uint8Array([this.version]),\n            this.inner.toU8a()\n        ];\n    }\n}\n","export const BIT_SIGNED = 0b10000000;\nexport const BIT_UNSIGNED = 0;\nexport const EMPTY_U8A = new Uint8Array();\nexport const DEFAULT_VERSION = 4;\nexport const IMMORTAL_ERA = new Uint8Array([0]);\nexport const UNMASK_VERSION = 0b01111111;\n","import { Struct } from '@polkadot/types-codec';\nimport { isU8a } from '@polkadot/util';\nexport const EXTRINSIC_VERSION = 4;\n/**\n * @name GenericExtrinsicV4\n * @description\n * The third generation of compact extrinsics\n */\nexport class GenericExtrinsicV4 extends Struct {\n    constructor(registry, value, { isSigned } = {}) {\n        super(registry, {\n            signature: 'ExtrinsicSignatureV4',\n            // eslint-disable-next-line sort-keys\n            method: 'Call'\n        }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));\n    }\n    /** @internal */\n    static decodeExtrinsic(registry, value, isSigned = false) {\n        if (value instanceof GenericExtrinsicV4) {\n            return value;\n        }\n        else if (value instanceof registry.createClassUnsafe('Call')) {\n            return { method: value };\n        }\n        else if (isU8a(value)) {\n            // here we decode manually since we need to pull through the version information\n            const signature = registry.createTypeUnsafe('ExtrinsicSignatureV4', [value, { isSigned }]);\n            const method = registry.createTypeUnsafe('Call', [value.subarray(signature.encodedLength)]);\n            return {\n                method,\n                signature\n            };\n        }\n        return value || {};\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description The [[Call]] this extrinsic wraps\n     */\n    get method() {\n        return this.getT('method');\n    }\n    /**\n     * @description The [[ExtrinsicSignatureV4]]\n     */\n    get signature() {\n        return this.getT('signature');\n    }\n    /**\n     * @description The version for the signature\n     */\n    get version() {\n        return EXTRINSIC_VERSION;\n    }\n    /**\n     * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)\n     */\n    addSignature(signer, signature, payload) {\n        this.signature.addSignature(signer, signature, payload);\n        return this;\n    }\n    /**\n     * @description Sign the extrinsic with a specific keypair\n     */\n    sign(account, options) {\n        this.signature.sign(this.method, account, options);\n        return this;\n    }\n    /**\n     * @describe Adds a fake signature to the extrinsic\n     */\n    signFake(signer, options) {\n        this.signature.signFake(this.method, signer, options);\n        return this;\n    }\n}\n","import { Null, Struct, Tuple } from '@polkadot/types-codec';\nimport { objectProperties, objectSpread } from '@polkadot/util';\n/** @internal */\nfunction decodeEvent(registry, value) {\n    if (!value?.length) {\n        return { DataType: Null };\n    }\n    const index = value.subarray(0, 2);\n    return {\n        DataType: registry.findMetaEvent(index),\n        value: {\n            data: value.subarray(2),\n            index\n        }\n    };\n}\n/**\n * @name GenericEventData\n * @description\n * Wrapper for the actual data that forms part of an [[Event]]\n */\nexport class GenericEventData extends Tuple {\n    __internal__meta;\n    __internal__method;\n    __internal__names = null;\n    __internal__section;\n    __internal__typeDef;\n    constructor(registry, value, meta, section = '<unknown>', method = '<unknown>') {\n        const fields = meta?.fields || [];\n        super(registry, fields.map(({ type }) => registry.createLookupType(type)), value);\n        this.__internal__meta = meta;\n        this.__internal__method = method;\n        this.__internal__section = section;\n        this.__internal__typeDef = fields.map(({ type }) => registry.lookup.getTypeDef(type));\n        const names = fields\n            .map(({ name }) => registry.lookup.sanitizeField(name)[0])\n            .filter((n) => !!n);\n        if (names.length === fields.length) {\n            this.__internal__names = names;\n            objectProperties(this, names, (_, i) => this[i]);\n        }\n    }\n    /**\n     * @description The wrapped [[EventMetadata]]\n     */\n    get meta() {\n        return this.__internal__meta;\n    }\n    /**\n     * @description The method as a string\n     */\n    get method() {\n        return this.__internal__method;\n    }\n    /**\n     * @description The field names (as available)\n     */\n    get names() {\n        return this.__internal__names;\n    }\n    /**\n     * @description The section as a string\n     */\n    get section() {\n        return this.__internal__section;\n    }\n    /**\n     * @description The [[TypeDef]] for this event\n     */\n    get typeDef() {\n        return this.__internal__typeDef;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        if (this.__internal__names !== null) {\n            const json = {};\n            for (let i = 0, count = this.__internal__names.length; i < count; i++) {\n                json[this.__internal__names[i]] = this[i].toHuman(isExtended, disableAscii);\n            }\n            return json;\n        }\n        return super.toHuman(isExtended);\n    }\n}\n/**\n * @name GenericEvent\n * @description\n * A representation of a system event. These are generated via the [[Metadata]] interfaces and\n * specific to a specific Substrate runtime\n */\nexport class GenericEvent extends Struct {\n    // Currently we _only_ decode from Uint8Array, since we expect it to\n    // be used via EventRecord\n    constructor(registry, _value) {\n        const { DataType, value } = decodeEvent(registry, _value);\n        super(registry, {\n            index: 'EventId',\n            // eslint-disable-next-line sort-keys\n            data: DataType\n        }, value);\n    }\n    /**\n     * @description The wrapped [[EventData]]\n     */\n    get data() {\n        return this.getT('data');\n    }\n    /**\n     * @description The [[EventId]], identifying the raw event\n     */\n    get index() {\n        return this.getT('index');\n    }\n    /**\n     * @description The [[EventMetadata]] with the documentation\n     */\n    get meta() {\n        return this.data.meta;\n    }\n    /**\n     * @description The method string identifying the event\n     */\n    get method() {\n        return this.data.method;\n    }\n    /**\n     * @description The section string identifying the event\n     */\n    get section() {\n        return this.data.section;\n    }\n    /**\n     * @description The [[TypeDef]] for the event\n     */\n    get typeDef() {\n        return this.data.typeDef;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExpanded, disableAscii) {\n        return objectSpread({\n            method: this.method,\n            section: this.section\n        }, isExpanded\n            ? { docs: this.meta.docs.map((d) => d.toString()) }\n            : null, super.toHuman(isExpanded, disableAscii));\n    }\n}\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/types-create', path: (({ url: getAbsoluteUrl('ules/@polkadot/types-create/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/types-create/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/types-create/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/types-create/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '11.3.1' };\n","import { packageInfo as codecInfo } from '@polkadot/types-codec/packageInfo';\nimport { packageInfo as createInfo } from '@polkadot/types-create/packageInfo';\nimport { detectPackage } from '@polkadot/util';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, [codecInfo, createInfo]);\n","import { assertUnreachable } from '@polkadot/util';\nfunction convertType(key) {\n    return (registry, { type }) => registry.createType('Si1TypeDef', {\n        [key]: {\n            type: type.toNumber()\n        }\n    });\n}\nfunction convertArray(registry, { len, type }) {\n    return registry.createType('Si1TypeDef', {\n        Array: {\n            len,\n            type: type.toNumber()\n        }\n    });\n}\nfunction convertBitSequence(registry, { bitOrderType, bitStoreType }) {\n    return registry.createType('Si1TypeDef', {\n        BitSequence: {\n            bitOrderType: bitOrderType.toNumber(),\n            bitStoreType: bitStoreType.toNumber()\n        }\n    });\n}\nconst convertCompact = convertType('Compact');\nfunction convertComposite(registry, { fields }) {\n    return registry.createType('Si1TypeDef', {\n        Composite: {\n            fields: convertFields(registry, fields)\n        }\n    });\n}\nfunction convertFields(registry, fields) {\n    return fields.map(({ docs, name, type, typeName }) => registry.createType('Si1Field', {\n        docs,\n        name,\n        type: type.toNumber(),\n        typeName\n    }));\n}\nfunction convertPhantom(registry, path) {\n    console.warn(`Converting phantom type ${path.map((p) => p.toString()).join('::')} to empty tuple`);\n    return registry.createType('Si1TypeDef', {\n        Tuple: []\n    });\n}\nfunction convertPrimitive(registry, prim) {\n    return registry.createType('Si1TypeDef', {\n        Primitive: prim.toString()\n    });\n}\nconst convertSequence = convertType('Sequence');\nfunction convertTuple(registry, types) {\n    return registry.createType('Si1TypeDef', {\n        Tuple: types.map((t) => t.toNumber())\n    });\n}\nfunction convertVariant(registry, { variants }) {\n    return registry.createType('Si1TypeDef', {\n        Variant: {\n            variants: variants.map(({ discriminant, docs, fields, name }, index) => registry.createType('Si1Variant', {\n                docs,\n                fields: convertFields(registry, fields),\n                index: discriminant.isSome\n                    ? discriminant.unwrap().toNumber()\n                    : index,\n                name\n            }))\n        }\n    });\n}\nfunction convertDef(registry, { def, path }) {\n    let result;\n    switch (def.type) {\n        case 'Array':\n            result = convertArray(registry, def.asArray);\n            break;\n        case 'BitSequence':\n            result = convertBitSequence(registry, def.asBitSequence);\n            break;\n        case 'Compact':\n            result = convertCompact(registry, def.asCompact);\n            break;\n        case 'Composite':\n            result = convertComposite(registry, def.asComposite);\n            break;\n        case 'Phantom':\n            result = convertPhantom(registry, path);\n            break;\n        case 'Primitive':\n            result = convertPrimitive(registry, def.asPrimitive);\n            break;\n        case 'Sequence':\n            result = convertSequence(registry, def.asSequence);\n            break;\n        case 'Tuple':\n            result = convertTuple(registry, def.asTuple);\n            break;\n        case 'Variant':\n            result = convertVariant(registry, def.asVariant);\n            break;\n        default: assertUnreachable(def.type);\n    }\n    return result;\n}\nexport function toV1(registry, types) {\n    return types.map((t, index) => registry.createType('PortableType', {\n        // offsets are +1 from v0\n        id: index + 1,\n        type: {\n            def: convertDef(registry, t),\n            docs: [],\n            params: t.params.map((p) => registry.createType('Si1TypeParameter', {\n                type: p.toNumber()\n            })),\n            path: t.path.map((p) => p.toString())\n        }\n    }));\n}\n","import { Enum, Raw, Tuple, U64 } from '@polkadot/types-codec';\nimport { bnToBn, formatNumber, hexToU8a, isHex, isObject, isU8a, u8aToBn, u8aToU8a } from '@polkadot/util';\nimport { IMMORTAL_ERA } from './constants.js';\nfunction getTrailingZeros(period) {\n    const binary = period.toString(2);\n    let index = 0;\n    while (binary[binary.length - 1 - index] === '0') {\n        index++;\n    }\n    return index;\n}\n/** @internal */\nfunction decodeMortalEra(registry, value) {\n    if (isU8a(value) || isHex(value) || Array.isArray(value)) {\n        return decodeMortalU8a(registry, u8aToU8a(value));\n    }\n    else if (!value) {\n        return [new U64(registry), new U64(registry)];\n    }\n    else if (isObject(value)) {\n        return decodeMortalObject(registry, value);\n    }\n    throw new Error('Invalid data passed to Mortal era');\n}\n/** @internal */\nfunction decodeMortalObject(registry, value) {\n    const { current, period } = value;\n    let calPeriod = Math.pow(2, Math.ceil(Math.log2(period)));\n    calPeriod = Math.min(Math.max(calPeriod, 4), 1 << 16);\n    const phase = current % calPeriod;\n    const quantizeFactor = Math.max(calPeriod >> 12, 1);\n    const quantizedPhase = phase / quantizeFactor * quantizeFactor;\n    return [new U64(registry, calPeriod), new U64(registry, quantizedPhase)];\n}\n/** @internal */\nfunction decodeMortalU8a(registry, value) {\n    if (value.length === 0) {\n        return [new U64(registry), new U64(registry)];\n    }\n    const first = u8aToBn(value.subarray(0, 1)).toNumber();\n    const second = u8aToBn(value.subarray(1, 2)).toNumber();\n    const encoded = first + (second << 8);\n    const period = 2 << (encoded % (1 << 4));\n    const quantizeFactor = Math.max(period >> 12, 1);\n    const phase = (encoded >> 4) * quantizeFactor;\n    if (period < 4 || phase >= period) {\n        throw new Error('Invalid data passed to Mortal era');\n    }\n    return [new U64(registry, period), new U64(registry, phase)];\n}\n/** @internal */\nfunction decodeExtrinsicEra(value = new Uint8Array()) {\n    if (isU8a(value)) {\n        return (!value.length || value[0] === 0)\n            ? new Uint8Array([0])\n            : new Uint8Array([1, value[0], value[1]]);\n    }\n    else if (!value) {\n        return new Uint8Array([0]);\n    }\n    else if (value instanceof GenericExtrinsicEra) {\n        return decodeExtrinsicEra(value.toU8a());\n    }\n    else if (isHex(value)) {\n        return decodeExtrinsicEra(hexToU8a(value));\n    }\n    else if (isObject(value)) {\n        const entries = Object.entries(value).map(([k, v]) => [k.toLowerCase(), v]);\n        const mortal = entries.find(([k]) => k.toLowerCase() === 'mortalera');\n        const immortal = entries.find(([k]) => k.toLowerCase() === 'immortalera');\n        // this is to de-serialize from JSON\n        return mortal\n            ? { MortalEra: mortal[1] }\n            : immortal\n                ? { ImmortalEra: immortal[1] }\n                : { MortalEra: value };\n    }\n    throw new Error('Invalid data passed to Era');\n}\n/**\n * @name ImmortalEra\n * @description\n * The ImmortalEra for an extrinsic\n */\nexport class ImmortalEra extends Raw {\n    constructor(registry, _value) {\n        // For immortals, we always provide the known value (i.e. treated as a\n        // constant no matter how it is constructed - it is a fixed structure)\n        super(registry, IMMORTAL_ERA);\n    }\n}\n/**\n * @name MortalEra\n * @description\n * The MortalEra for an extrinsic, indicating period and phase\n */\nexport class MortalEra extends Tuple {\n    constructor(registry, value) {\n        super(registry, {\n            period: U64,\n            phase: U64\n        }, decodeMortalEra(registry, value));\n    }\n    /**\n     * @description Encoded length for mortals occupy 2 bytes, different from the actual Tuple since it is encoded. This is a shortcut fro `toU8a().length`\n     */\n    get encodedLength() {\n        return 2 | 0;\n    }\n    /**\n     * @description The period of this Mortal wraps as a [[U64]]\n     */\n    get period() {\n        return this[0];\n    }\n    /**\n     * @description The phase of this Mortal wraps as a [[U64]]\n     */\n    get phase() {\n        return this[1];\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return {\n            period: formatNumber(this.period),\n            phase: formatNumber(this.phase)\n        };\n    }\n    /**\n     * @description Returns a JSON representation of the actual value\n     */\n    toJSON() {\n        return this.toHex();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     * Period and phase are encoded:\n     *   - The period of validity from the block hash found in the signing material.\n     *   - The phase in the period that this transaction's lifetime begins (and, importantly,\n     *     implies which block hash is included in the signature material). If the `period` is\n     *     greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n     *     `period` is.\n     */\n    toU8a(_isBare) {\n        const period = this.period.toNumber();\n        const encoded = Math.min(15, Math.max(1, getTrailingZeros(period) - 1)) + ((this.phase.toNumber() / Math.max(period >> 12, 1)) << 4);\n        return new Uint8Array([\n            encoded & 0xff,\n            encoded >> 8\n        ]);\n    }\n    /**\n     * @description Get the block number of the start of the era whose properties this object describes that `current` belongs to.\n     */\n    birth(current) {\n        const phase = this.phase.toNumber();\n        const period = this.period.toNumber();\n        // FIXME No toNumber() here\n        return (~~((Math.max(bnToBn(current).toNumber(), phase) - phase) / period) * period) + phase;\n    }\n    /**\n     * @description Get the block number of the first block at which the era has ended.\n     */\n    death(current) {\n        // FIXME No toNumber() here\n        return this.birth(current) + this.period.toNumber();\n    }\n}\n/**\n * @name GenericExtrinsicEra\n * @description\n * The era for an extrinsic, indicating either a mortal or immortal extrinsic\n */\nexport class GenericExtrinsicEra extends Enum {\n    constructor(registry, value) {\n        super(registry, {\n            ImmortalEra,\n            MortalEra\n        }, decodeExtrinsicEra(value));\n    }\n    /**\n     * @description Override the encoded length method\n     */\n    get encodedLength() {\n        return this.isImmortalEra\n            ? this.asImmortalEra.encodedLength\n            : this.asMortalEra.encodedLength;\n    }\n    /**\n     * @description Returns the item as a [[ImmortalEra]]\n     */\n    get asImmortalEra() {\n        if (!this.isImmortalEra) {\n            throw new Error(`Cannot convert '${this.type}' via asImmortalEra`);\n        }\n        return this.inner;\n    }\n    /**\n     * @description Returns the item as a [[MortalEra]]\n     */\n    get asMortalEra() {\n        if (!this.isMortalEra) {\n            throw new Error(`Cannot convert '${this.type}' via asMortalEra`);\n        }\n        return this.inner;\n    }\n    /**\n     * @description `true` if Immortal\n     */\n    get isImmortalEra() {\n        return this.index === 0;\n    }\n    /**\n     * @description `true` if Mortal\n     */\n    get isMortalEra() {\n        return this.index > 0;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the parity-codec specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return this.isMortalEra\n            ? this.asMortalEra.toU8a(isBare)\n            : this.asImmortalEra.toU8a(isBare);\n    }\n}\n","import { AbstractBase } from '@polkadot/types-codec';\nimport { u8aToHex } from '@polkadot/util';\nimport { DEFAULT_VERSION } from './constants.js';\nconst VERSIONS = [\n    'ExtrinsicPayloadUnknown', // v0 is unknown\n    'ExtrinsicPayloadUnknown',\n    'ExtrinsicPayloadUnknown',\n    'ExtrinsicPayloadUnknown',\n    'ExtrinsicPayloadV4'\n];\n/** @internal */\nfunction decodeExtrinsicPayload(registry, value, version = DEFAULT_VERSION) {\n    if (value instanceof GenericExtrinsicPayload) {\n        return value.unwrap();\n    }\n    return registry.createTypeUnsafe(VERSIONS[version] || VERSIONS[0], [value, { version }]);\n}\n/**\n * @name GenericExtrinsicPayload\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based\n * on the contents included\n */\nexport class GenericExtrinsicPayload extends AbstractBase {\n    constructor(registry, value, { version } = {}) {\n        super(registry, decodeExtrinsicPayload(registry, value, version));\n    }\n    /**\n     * @description The block [[BlockHash]] the signature applies to (mortal/immortal)\n     */\n    get blockHash() {\n        return this.inner.blockHash;\n    }\n    /**\n     * @description The [[ExtrinsicEra]]\n     */\n    get era() {\n        return this.inner.era;\n    }\n    /**\n     * @description The genesis block [[BlockHash]] the signature applies to\n     */\n    get genesisHash() {\n        // NOTE only v3+\n        return this.inner.genesisHash || this.registry.createTypeUnsafe('Hash', []);\n    }\n    /**\n     * @description The [[Bytes]] contained in the payload\n     */\n    get method() {\n        return this.inner.method;\n    }\n    /**\n     * @description The [[Index]]\n     */\n    get nonce() {\n        return this.inner.nonce;\n    }\n    /**\n     * @description The specVersion as a [[u32]] for this payload\n     */\n    get specVersion() {\n        // NOTE only v3+\n        return this.inner.specVersion || this.registry.createTypeUnsafe('u32', []);\n    }\n    /**\n     * @description The [[Balance]]\n     */\n    get tip() {\n        // NOTE from v2+\n        return this.inner.tip || this.registry.createTypeUnsafe('Compact<Balance>', []);\n    }\n    /**\n     * @description The transaction version as a [[u32]] for this payload\n     */\n    get transactionVersion() {\n        // NOTE only v4+\n        return this.inner.transactionVersion || this.registry.createTypeUnsafe('u32', []);\n    }\n    /**\n     * @description The (optional) asset id as a [[u32]] or [[MultiLocation]] for this payload\n     */\n    get assetId() {\n        return this.inner.assetId;\n    }\n    /**\n     * @description The (optional) [[Hash]] of the genesis metadata for this payload\n     */\n    get metadataHash() {\n        return this.inner.metadataHash;\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return this.inner.eq(other);\n    }\n    /**\n     * @description Sign the payload with the keypair\n     */\n    sign(signerPair) {\n        const signature = this.inner.sign(signerPair);\n        // This is extensible, so we could quite readily extend to send back extra\n        // information, such as for instance the payload, i.e. `payload: this.toHex()`\n        // For the case here we sign via the extrinsic, we ignore the return, so generally\n        // this is applicable for external signing\n        return {\n            signature: u8aToHex(signature)\n        };\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExtended, disableAscii) {\n        return this.inner.toHuman(isExtended, disableAscii);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toHex();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'ExtrinsicPayload';\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.toHex();\n    }\n    /**\n     * @description Returns a serialized u8a form\n     */\n    toU8a(isBare) {\n        // call our parent, with only the method stripped\n        return super.toU8a(isBare ? { method: true } : false);\n    }\n}\n","import { Struct } from '@polkadot/types-codec';\n/**\n * @name GenericExtrinsicPayloadUnknown\n * @description\n * A default handler for payloads where the version is not known (default throw)\n */\nexport class GenericExtrinsicPayloadUnknown extends Struct {\n    constructor(registry, _value, { version = 0 } = {}) {\n        super(registry, {});\n        throw new Error(`Unsupported extrinsic payload version ${version}`);\n    }\n}\n","import { Struct } from '@polkadot/types-codec';\nimport { UNMASK_VERSION } from './constants.js';\n/**\n * @name GenericExtrinsicUnknown\n * @description\n * A default handler for extrinsics where the version is not known (default throw)\n */\nexport class GenericExtrinsicUnknown extends Struct {\n    constructor(registry, _value, { isSigned = false, version = 0 } = {}) {\n        super(registry, {});\n        throw new Error(`Unsupported ${isSigned ? '' : 'un'}signed extrinsic version ${version & UNMASK_VERSION}`);\n    }\n}\n","import { Option, Struct } from '@polkadot/types-codec';\nimport { objectProperty, objectSpread, u8aToHex } from '@polkadot/util';\nconst knownTypes = {\n    address: 'Address',\n    assetId: 'Option<TAssetConversion>',\n    blockHash: 'Hash',\n    blockNumber: 'BlockNumber',\n    era: 'ExtrinsicEra',\n    genesisHash: 'Hash',\n    metadataHash: 'Option<[u8;32]>',\n    method: 'Call',\n    mode: 'u8',\n    nonce: 'Compact<Index>',\n    runtimeVersion: 'RuntimeVersion',\n    signedExtensions: 'Vec<Text>',\n    tip: 'Compact<Balance>',\n    version: 'u8'\n};\n/**\n * @name GenericSignerPayload\n * @description\n * A generic signer payload that can be used for serialization between API and signer\n */\nexport class GenericSignerPayload extends Struct {\n    __internal__extraTypes;\n    constructor(registry, value) {\n        const extensionTypes = objectSpread({}, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra());\n        super(registry, objectSpread({}, extensionTypes, knownTypes), value);\n        this.__internal__extraTypes = {};\n        const getter = (key) => this.get(key);\n        // add all extras that are not in the base types\n        for (const [key, type] of Object.entries(extensionTypes)) {\n            if (!knownTypes[key]) {\n                this.__internal__extraTypes[key] = type;\n            }\n            objectProperty(this, key, getter);\n        }\n    }\n    get address() {\n        return this.getT('address');\n    }\n    get blockHash() {\n        return this.getT('blockHash');\n    }\n    get blockNumber() {\n        return this.getT('blockNumber');\n    }\n    get era() {\n        return this.getT('era');\n    }\n    get genesisHash() {\n        return this.getT('genesisHash');\n    }\n    get method() {\n        return this.getT('method');\n    }\n    get nonce() {\n        return this.getT('nonce');\n    }\n    get runtimeVersion() {\n        return this.getT('runtimeVersion');\n    }\n    get signedExtensions() {\n        return this.getT('signedExtensions');\n    }\n    get tip() {\n        return this.getT('tip');\n    }\n    get assetId() {\n        return this.getT('assetId');\n    }\n    get version() {\n        return this.getT('version');\n    }\n    get mode() {\n        return this.getT('mode');\n    }\n    get metadataHash() {\n        return this.getT('metadataHash');\n    }\n    /**\n     * @description Creates an representation of the structure as an ISignerPayload JSON\n     */\n    toPayload() {\n        const result = {};\n        const keys = Object.keys(this.__internal__extraTypes);\n        // add any explicit overrides we may have\n        for (let i = 0, count = keys.length; i < count; i++) {\n            const key = keys[i];\n            const value = this.getT(key);\n            // Don't include Option.isNone\n            if (!(value instanceof Option) || value.isSome) {\n                // NOTE In the spread below we convert (mostly) to Hex to align\n                // with the typings. In the case of \"unknown\" fields, we use the\n                // primitive toJSON conversion (which is serializable). Technically\n                // we can include isNone in here as well (\"null\" is allowed), however\n                // for empty fields we just skip it completely (historical compat)\n                result[key] = value.toJSON();\n            }\n        }\n        return objectSpread(result, {\n            // the known defaults as managed explicitly and has different\n            // formatting in cases, e.g. we mostly expose a hex format here\n            address: this.address.toString(),\n            assetId: this.assetId ? this.assetId.toJSON() : null,\n            blockHash: this.blockHash.toHex(),\n            blockNumber: this.blockNumber.toHex(),\n            era: this.era.toHex(),\n            genesisHash: this.genesisHash.toHex(),\n            metadataHash: this.metadataHash.isSome ? this.metadataHash.toHex() : null,\n            method: this.method.toHex(),\n            mode: this.mode.toNumber(),\n            nonce: this.nonce.toHex(),\n            signedExtensions: this.signedExtensions.map((e) => e.toString()),\n            specVersion: this.runtimeVersion.specVersion.toHex(),\n            tip: this.tip.toHex(),\n            transactionVersion: this.runtimeVersion.transactionVersion.toHex(),\n            version: this.version.toNumber()\n        });\n    }\n    /**\n     * @description Creates a representation of the payload in raw Exrinsic form\n     */\n    toRaw() {\n        const payload = this.toPayload();\n        const data = u8aToHex(this.registry\n            .createTypeUnsafe('ExtrinsicPayload', [payload, { version: payload.version }])\n            // NOTE Explicitly pass the bare flag so the method is encoded un-prefixed (non-decodable, for signing only)\n            .toU8a({ method: true }));\n        return {\n            address: payload.address,\n            data,\n            type: 'payload'\n        };\n    }\n}\n","import { Enum, Struct } from '@polkadot/types-codec';\nimport { objectSpread } from '@polkadot/util';\nimport { sign } from '../util.js';\n/**\n * @name GenericExtrinsicPayloadV4\n * @description\n * A signing payload for an [[Extrinsic]]. For the final encoding, it is\n * variable length based on the contents included\n */\nexport class GenericExtrinsicPayloadV4 extends Struct {\n    __internal__signOptions;\n    constructor(registry, value) {\n        super(registry, objectSpread({ method: 'Bytes' }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), value);\n        // Do detection for the type of extrinsic, in the case of MultiSignature\n        // this is an enum, in the case of AnySignature, this is a Hash only\n        // (which may be 64 or 65 bytes)\n        this.__internal__signOptions = {\n            withType: registry.createTypeUnsafe('ExtrinsicSignature', []) instanceof Enum\n        };\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        return super.inspect({ method: true });\n    }\n    /**\n     * @description The block [[BlockHash]] the signature applies to (mortal/immortal)\n     */\n    get blockHash() {\n        return this.getT('blockHash');\n    }\n    /**\n     * @description The [[ExtrinsicEra]]\n     */\n    get era() {\n        return this.getT('era');\n    }\n    /**\n     * @description The genesis [[BlockHash]] the signature applies to (mortal/immortal)\n     */\n    get genesisHash() {\n        return this.getT('genesisHash');\n    }\n    /**\n     * @description The [[Bytes]] contained in the payload\n     */\n    get method() {\n        return this.getT('method');\n    }\n    /**\n     * @description The [[Index]]\n     */\n    get nonce() {\n        return this.getT('nonce');\n    }\n    /**\n     * @description The specVersion for this signature\n     */\n    get specVersion() {\n        return this.getT('specVersion');\n    }\n    /**\n     * @description The tip [[Balance]]\n     */\n    get tip() {\n        return this.getT('tip');\n    }\n    /**\n     * @description The transactionVersion for this signature\n     */\n    get transactionVersion() {\n        return this.getT('transactionVersion');\n    }\n    /**\n     * @description The (optional) asset id for this signature for chains that support transaction fees in assets\n     */\n    get assetId() {\n        return this.getT('assetId');\n    }\n    /**\n     * @description The (optional) asset id for this signature for chains that support transaction fees in assets\n     */\n    get metadataHash() {\n        return this.getT('metadataHash');\n    }\n    /**\n     * @description Sign the payload with the keypair\n     */\n    sign(signerPair) {\n        // NOTE The `toU8a({ method: true })` argument is absolutely critical, we\n        // don't want the method (Bytes) to have the length prefix included. This\n        // means that the data-as-signed is un-decodable, but is also doesn't need\n        // the extra information, only the pure data (and is not decoded) ...\n        // The same applies to V1..V3, if we have a V5, carry this comment\n        return sign(this.registry, signerPair, this.toU8a({ method: true }), this.__internal__signOptions);\n    }\n}\n","export function sign(registry, signerPair, u8a, options) {\n    const encoded = u8a.length > 256\n        ? registry.hash(u8a)\n        : u8a;\n    return signerPair.sign(encoded, options);\n}\n","import { Struct } from '@polkadot/types-codec';\nimport { isU8a, isUndefined, objectProperties, objectSpread, stringify, u8aToHex } from '@polkadot/util';\nimport { EMPTY_U8A, IMMORTAL_ERA } from '../constants.js';\nimport { GenericExtrinsicPayloadV4 } from './ExtrinsicPayload.js';\nconst FAKE_SIGNATURE = new Uint8Array(256).fill(1);\nfunction toAddress(registry, address) {\n    return registry.createTypeUnsafe('Address', [isU8a(address) ? u8aToHex(address) : address]);\n}\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\nexport class GenericExtrinsicSignatureV4 extends Struct {\n    __internal__signKeys;\n    constructor(registry, value, { isSigned } = {}) {\n        const signTypes = registry.getSignedExtensionTypes();\n        super(registry, objectSpread(\n        // eslint-disable-next-line sort-keys\n        { signer: 'Address', signature: 'ExtrinsicSignature' }, signTypes), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n        this.__internal__signKeys = Object.keys(signTypes);\n        objectProperties(this, this.__internal__signKeys, (k) => this.get(k));\n    }\n    /** @internal */\n    static decodeExtrinsicSignature(value, isSigned = false) {\n        if (!value) {\n            return EMPTY_U8A;\n        }\n        else if (value instanceof GenericExtrinsicSignatureV4) {\n            return value;\n        }\n        return isSigned\n            ? value\n            : EMPTY_U8A;\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        return this.isSigned\n            ? super.encodedLength\n            : 0;\n    }\n    /**\n     * @description `true` if the signature is valid\n     */\n    get isSigned() {\n        return !this.signature.isEmpty;\n    }\n    /**\n     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n     */\n    get era() {\n        return this.getT('era');\n    }\n    /**\n     * @description The [[Index]] for the signature\n     */\n    get nonce() {\n        return this.getT('nonce');\n    }\n    /**\n     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n     */\n    get signature() {\n        // the second case here is when we don't have an enum signature, treat as raw\n        return (this.multiSignature.value || this.multiSignature);\n    }\n    /**\n     * @description The raw [[ExtrinsicSignature]]\n     */\n    get multiSignature() {\n        return this.getT('signature');\n    }\n    /**\n     * @description The [[Address]] that signed\n     */\n    get signer() {\n        return this.getT('signer');\n    }\n    /**\n     * @description The [[Balance]] tip\n     */\n    get tip() {\n        return this.getT('tip');\n    }\n    /**\n     * @description The [[u32]] or [[MultiLocation]] assetId\n     */\n    get assetId() {\n        return this.getT('assetId');\n    }\n    /**\n     * @description The [[Hash]] for the metadata\n     */\n    get metadataHash() {\n        return this.getT('metadataHash');\n    }\n    _injectSignature(signer, signature, payload) {\n        // use the fields exposed to guide the getters\n        for (let i = 0, count = this.__internal__signKeys.length; i < count; i++) {\n            const k = this.__internal__signKeys[i];\n            const v = payload.get(k);\n            if (!isUndefined(v)) {\n                this.set(k, v);\n            }\n        }\n        // additional fields (exposed in struct itself)\n        this.set('signer', signer);\n        this.set('signature', signature);\n        return this;\n    }\n    /**\n     * @description Adds a raw signature\n     */\n    addSignature(signer, signature, payload) {\n        return this._injectSignature(toAddress(this.registry, signer), this.registry.createTypeUnsafe('ExtrinsicSignature', [signature]), new GenericExtrinsicPayloadV4(this.registry, payload));\n    }\n    /**\n     * @description Creates a payload from the supplied options\n     */\n    createPayload(method, options) {\n        const { era, runtimeVersion: { specVersion, transactionVersion } } = options;\n        return new GenericExtrinsicPayloadV4(this.registry, objectSpread({}, options, {\n            era: era || IMMORTAL_ERA,\n            method: method.toHex(),\n            specVersion,\n            transactionVersion\n        }));\n    }\n    /**\n     * @description Generate a payload and applies the signature from a keypair\n     */\n    sign(method, account, options) {\n        if (!account?.addressRaw) {\n            throw new Error(`Expected a valid keypair for signing, found ${stringify(account)}`);\n        }\n        const payload = this.createPayload(method, options);\n        return this._injectSignature(toAddress(this.registry, account.addressRaw), this.registry.createTypeUnsafe('ExtrinsicSignature', [payload.sign(account)]), payload);\n    }\n    /**\n     * @description Generate a payload and applies a fake signature\n     */\n    signFake(method, address, options) {\n        if (!address) {\n            throw new Error(`Expected a valid address for signing, found ${stringify(address)}`);\n        }\n        const payload = this.createPayload(method, options);\n        return this._injectSignature(toAddress(this.registry, address), this.registry.createTypeUnsafe('ExtrinsicSignature', [FAKE_SIGNATURE]), payload);\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        return this.isSigned\n            ? super.toU8a(isBare)\n            : EMPTY_U8A;\n    }\n}\n","import { U8aFixed } from '@polkadot/types-codec';\nimport { hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\n/** @internal */\nfunction decodeAccountId(value) {\n    if (isU8a(value) || Array.isArray(value)) {\n        return u8aToU8a(value);\n    }\n    else if (!value) {\n        return new Uint8Array();\n    }\n    else if (isHex(value)) {\n        return hexToU8a(value);\n    }\n    else if (isString(value)) {\n        return decodeAddress(value.toString());\n    }\n    throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof value}`);\n}\nclass BaseAccountId extends U8aFixed {\n    constructor(registry, allowedBits = 256 | 264, value) {\n        const decoded = decodeAccountId(value);\n        const decodedBits = decoded.length * 8;\n        // Part of stream containing >= 32 bytes or a all empty (defaults)\n        if (decodedBits < allowedBits && decoded.some((b) => b)) {\n            throw new Error(`Invalid AccountId provided, expected ${allowedBits >> 3} bytes, found ${decoded.length}`);\n        }\n        super(registry, decoded, allowedBits);\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return super.eq(decodeAccountId(other));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return encodeAddress(this, this.registry.chainSS58);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'AccountId';\n    }\n}\n/**\n * @name GenericAccountId\n * @description\n * A wrapper around an AccountId/PublicKey representation. Since we are dealing with\n * underlying PublicKeys (32 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\nexport class GenericAccountId extends BaseAccountId {\n    constructor(registry, value) {\n        super(registry, 256, value);\n    }\n}\nexport class GenericAccountId33 extends BaseAccountId {\n    constructor(registry, value) {\n        super(registry, 264, value);\n    }\n}\n","import { u32 } from '@polkadot/types-codec';\nimport { BN, bnToBn, isBigInt, isBn, isHex, isNumber, isU8a } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\nconst PREFIX_1BYTE = 0xef;\nconst PREFIX_2BYTE = 0xfc;\nconst PREFIX_4BYTE = 0xfd;\nconst PREFIX_8BYTE = 0xfe;\nconst MAX_1BYTE = new BN(PREFIX_1BYTE);\nconst MAX_2BYTE = new BN(1).shln(16);\nconst MAX_4BYTE = new BN(1).shln(32);\n/** @internal */\nfunction decodeAccountIndex(value) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    if (value instanceof GenericAccountIndex) {\n        // `value.toBn()` on AccountIndex returns a pure BN (i.e. not an\n        // AccountIndex), which has the initial `toString()` implementation.\n        return value.toBn();\n    }\n    else if (isBn(value) || isNumber(value) || isHex(value) || isU8a(value) || isBigInt(value)) {\n        return value;\n    }\n    return decodeAccountIndex(decodeAddress(value));\n}\n/**\n * @name GenericAccountIndex\n * @description\n * A wrapper around an AccountIndex, which is a shortened, variable-length encoding\n * for an Account. We extends from [[U32]] to provide the number-like properties.\n */\nexport class GenericAccountIndex extends u32 {\n    constructor(registry, value = new BN(0)) {\n        super(registry, decodeAccountIndex(value));\n    }\n    static calcLength(_value) {\n        const value = bnToBn(_value);\n        if (value.lte(MAX_1BYTE)) {\n            return 1;\n        }\n        else if (value.lt(MAX_2BYTE)) {\n            return 2;\n        }\n        else if (value.lt(MAX_4BYTE)) {\n            return 4;\n        }\n        return 8;\n    }\n    static readLength(input) {\n        const first = input[0];\n        if (first === PREFIX_2BYTE) {\n            return [1, 2];\n        }\n        else if (first === PREFIX_4BYTE) {\n            return [1, 4];\n        }\n        else if (first === PREFIX_8BYTE) {\n            return [1, 8];\n        }\n        return [0, 1];\n    }\n    static writeLength(input) {\n        switch (input.length) {\n            case 2: return new Uint8Array([PREFIX_2BYTE]);\n            case 4: return new Uint8Array([PREFIX_4BYTE]);\n            case 8: return new Uint8Array([PREFIX_8BYTE]);\n            default: return new Uint8Array([]);\n        }\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        // shortcut for BN or Number, don't create an object\n        if (isBn(other) || isNumber(other)) {\n            return super.eq(other);\n        }\n        // convert and compare\n        return super.eq(this.registry.createTypeUnsafe('AccountIndex', [other]));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        const length = GenericAccountIndex.calcLength(this);\n        return encodeAddress(this.toU8a().subarray(0, length), this.registry.chainSS58);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'AccountIndex';\n    }\n}\n","import { Struct } from '@polkadot/types-codec';\n/**\n * @name GenericBlock\n * @description\n * A block encoded with header and extrinsics\n */\nexport class GenericBlock extends Struct {\n    constructor(registry, value) {\n        super(registry, {\n            header: 'Header',\n            // eslint-disable-next-line sort-keys\n            extrinsics: 'Vec<Extrinsic>'\n        }, value);\n    }\n    /**\n     * @description Encodes a content [[Hash]] for the block\n     */\n    get contentHash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description The [[Extrinsic]] contained in the block\n     */\n    get extrinsics() {\n        return this.getT('extrinsics');\n    }\n    /**\n     * @description Block/header [[Hash]]\n     */\n    get hash() {\n        return this.header.hash;\n    }\n    /**\n     * @description The [[Header]] of the block\n     */\n    get header() {\n        return this.getT('header');\n    }\n}\n","import { Struct, U8aFixed } from '@polkadot/types-codec';\nimport { isHex, isObject, isU8a, objectSpread, u8aToU8a } from '@polkadot/util';\n/**\n * Get a mapping of `argument name -> argument type` for the function, from\n * its metadata.\n *\n * @param meta - The function metadata used to get the definition.\n * @internal\n */\nfunction getArgsDef(registry, meta) {\n    return meta.fields.reduce((result, { name, type }, index) => {\n        result[name.unwrapOr(`param${index}`).toString()] = registry.createLookupType(type);\n        return result;\n    }, {});\n}\n/** @internal */\nfunction decodeCallViaObject(registry, value, _meta) {\n    // we only pass args/methodsIndex out\n    const { args, callIndex } = value;\n    // Get the correct lookupIndex\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const lookupIndex = callIndex instanceof GenericCallIndex\n        ? callIndex.toU8a()\n        : callIndex;\n    // Find metadata with callIndex\n    const meta = _meta || registry.findMetaCall(lookupIndex).meta;\n    return {\n        args,\n        argsDef: getArgsDef(registry, meta),\n        callIndex,\n        meta\n    };\n}\n/** @internal */\nfunction decodeCallViaU8a(registry, value, _meta) {\n    // We need 2 bytes for the callIndex\n    const callIndex = registry.firstCallIndex.slice();\n    callIndex.set(value.subarray(0, 2), 0);\n    // Find metadata with callIndex\n    const meta = _meta || registry.findMetaCall(callIndex).meta;\n    return {\n        args: value.subarray(2),\n        argsDef: getArgsDef(registry, meta),\n        callIndex,\n        meta\n    };\n}\n/**\n * Decode input to pass into constructor.\n *\n * @param value - Value to decode, one of:\n * - hex\n * - Uint8Array\n * - {@see DecodeMethodInput}\n * @param _meta - Metadata to use, so that `injectMethods` lookup is not\n * necessary.\n * @internal\n */\nfunction decodeCall(registry, value = new Uint8Array(), _meta) {\n    if (isU8a(value) || isHex(value)) {\n        return decodeCallViaU8a(registry, u8aToU8a(value), _meta);\n    }\n    else if (isObject(value) && value.callIndex && value.args) {\n        return decodeCallViaObject(registry, value, _meta);\n    }\n    throw new Error(`Call: Cannot decode value '${value}' of type ${typeof value}`);\n}\n/**\n * @name GenericCallIndex\n * @description\n * A wrapper around the `[sectionIndex, methodIndex]` value that uniquely identifies a method\n */\nexport class GenericCallIndex extends U8aFixed {\n    constructor(registry, value) {\n        super(registry, value, 16);\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toHex();\n    }\n}\n/**\n * @name GenericCall\n * @description\n * Extrinsic function descriptor\n */\nexport class GenericCall extends Struct {\n    _meta;\n    constructor(registry, value, meta) {\n        const decoded = decodeCall(registry, value, meta);\n        try {\n            super(registry, {\n                callIndex: GenericCallIndex,\n                // eslint-disable-next-line sort-keys\n                args: Struct.with(decoded.argsDef)\n            }, decoded);\n        }\n        catch (error) {\n            let method = 'unknown.unknown';\n            try {\n                const c = registry.findMetaCall(decoded.callIndex);\n                method = `${c.section}.${c.method}`;\n            }\n            catch {\n                // ignore\n            }\n            throw new Error(`Call: failed decoding ${method}:: ${error.message}`);\n        }\n        this._meta = decoded.meta;\n    }\n    /**\n     * @description The arguments for the function call\n     */\n    get args() {\n        return [...this.getT('args').values()];\n    }\n    /**\n     * @description The argument definitions\n     */\n    get argsDef() {\n        return getArgsDef(this.registry, this.meta);\n    }\n    /**\n     * @description The argument entries\n     */\n    get argsEntries() {\n        return [...this.getT('args').entries()];\n    }\n    /**\n     * @description The encoded `[sectionIndex, methodIndex]` identifier\n     */\n    get callIndex() {\n        return this.getT('callIndex').toU8a();\n    }\n    /**\n     * @description The encoded data\n     */\n    get data() {\n        return this.getT('args').toU8a();\n    }\n    /**\n     * @description The [[FunctionMetadata]]\n     */\n    get meta() {\n        return this._meta;\n    }\n    /**\n     * @description Returns the name of the method\n     */\n    get method() {\n        return this.registry.findMetaCall(this.callIndex).method;\n    }\n    /**\n     * @description Returns the module containing the method\n     */\n    get section() {\n        return this.registry.findMetaCall(this.callIndex).section;\n    }\n    /**\n     * @description Checks if the source matches this in type\n     */\n    is(other) {\n        return other.callIndex[0] === this.callIndex[0] && other.callIndex[1] === this.callIndex[1];\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExpanded, disableAscii) {\n        let call;\n        try {\n            call = this.registry.findMetaCall(this.callIndex);\n        }\n        catch {\n            // swallow\n        }\n        return objectSpread({\n            args: this.argsEntries.reduce((args, [n, a]) => objectSpread(args, { [n]: a.toHuman(isExpanded, disableAscii) }), {}),\n            method: call?.method,\n            section: call?.section\n        }, isExpanded && call\n            ? { docs: call.meta.docs.map((d) => d.toString()) }\n            : null);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Call';\n    }\n}\n","import { Json } from '@polkadot/types-codec';\nimport { isFunction, isNull, isUndefined } from '@polkadot/util';\nfunction createValue(registry, type, value, asArray = true) {\n    // We detect codec here as well - when found, generally this is constructed from itself\n    if (value && isFunction(value.unwrapOrDefault)) {\n        return value;\n    }\n    return registry.createTypeUnsafe(type, [\n        asArray\n            ? isNull(value) || isUndefined(value)\n                ? null\n                : Array.isArray(value)\n                    ? value\n                    : [value]\n            : value\n    ]);\n}\nfunction decodeValue(registry, key, value) {\n    return key === 'ss58Format'\n        ? createValue(registry, 'Option<u32>', value, false)\n        : key === 'tokenDecimals'\n            ? createValue(registry, 'Option<Vec<u32>>', value)\n            : key === 'tokenSymbol'\n                ? createValue(registry, 'Option<Vec<Text>>', value)\n                : key === 'isEthereum'\n                    ? createValue(registry, 'Bool', value, false)\n                    : value;\n}\nfunction decode(registry, value) {\n    return (\n    // allow decoding from a map as well (ourselves)\n    value && isFunction(value.entries)\n        ? [...value.entries()]\n        : Object.entries(value || {})).reduce((all, [key, value]) => {\n        all[key] = decodeValue(registry, key, value);\n        return all;\n    }, {\n        isEthereum: registry.createTypeUnsafe('Bool', []),\n        ss58Format: registry.createTypeUnsafe('Option<u32>', []),\n        tokenDecimals: registry.createTypeUnsafe('Option<Vec<u32>>', []),\n        tokenSymbol: registry.createTypeUnsafe('Option<Vec<Text>>', [])\n    });\n}\nexport class GenericChainProperties extends Json {\n    constructor(registry, value) {\n        super(registry, decode(registry, value));\n    }\n    /**\n     * @description The chain uses Ethereum addresses\n     */\n    get isEthereum() {\n        return this.getT('isEthereum');\n    }\n    /**\n     * @description The chain ss58Format\n     */\n    get ss58Format() {\n        return this.getT('ss58Format');\n    }\n    /**\n     * @description The decimals for each of the tokens\n     */\n    get tokenDecimals() {\n        return this.getT('tokenDecimals');\n    }\n    /**\n     * @description The symbols for the tokens\n     */\n    get tokenSymbol() {\n        return this.getT('tokenSymbol');\n    }\n}\n","import { U8aFixed } from '@polkadot/types-codec';\nimport { BN, bnToU8a, isNumber, stringToU8a, u8aToHex, u8aToString } from '@polkadot/util';\nexport const CID_AURA = /*#__PURE__*/ stringToU8a('aura');\nexport const CID_BABE = /*#__PURE__*/ stringToU8a('BABE');\nexport const CID_GRPA = /*#__PURE__*/ stringToU8a('FRNK');\nexport const CID_POW = /*#__PURE__*/ stringToU8a('pow_');\nexport const CID_NMBS = /*#__PURE__*/ stringToU8a('nmbs');\nfunction getAuraAuthor(registry, bytes, sessionValidators) {\n    return sessionValidators[registry.createTypeUnsafe('RawAuraPreDigest', [bytes.toU8a(true)])\n        .slotNumber\n        .mod(new BN(sessionValidators.length))\n        .toNumber()];\n}\nfunction getBabeAuthor(registry, bytes, sessionValidators) {\n    const digest = registry.createTypeUnsafe('RawBabePreDigestCompat', [bytes.toU8a(true)]);\n    return sessionValidators[digest.value.toNumber()];\n}\nfunction getBytesAsAuthor(registry, bytes) {\n    return registry.createTypeUnsafe('AccountId', [bytes]);\n}\n/**\n * @name GenericConsensusEngineId\n * @description\n * A 4-byte identifier identifying the engine\n */\nexport class GenericConsensusEngineId extends U8aFixed {\n    constructor(registry, value) {\n        super(registry, isNumber(value)\n            ? bnToU8a(value, { isLe: false })\n            : value, 32);\n    }\n    /**\n     * @description `true` if the engine matches aura\n     */\n    get isAura() {\n        return this.eq(CID_AURA);\n    }\n    /**\n     * @description `true` is the engine matches babe\n     */\n    get isBabe() {\n        return this.eq(CID_BABE);\n    }\n    /**\n     * @description `true` is the engine matches grandpa\n     */\n    get isGrandpa() {\n        return this.eq(CID_GRPA);\n    }\n    /**\n     * @description `true` is the engine matches pow\n     */\n    get isPow() {\n        return this.eq(CID_POW);\n    }\n    /**\n     * @description `true` is the engine matches nimbus\n     */\n    get isNimbus() {\n        return this.eq(CID_NMBS);\n    }\n    /**\n     * @description From the input bytes, decode into an author\n     */\n    extractAuthor(bytes, sessionValidators) {\n        if (sessionValidators?.length) {\n            if (this.isAura) {\n                return getAuraAuthor(this.registry, bytes, sessionValidators);\n            }\n            else if (this.isBabe) {\n                return getBabeAuthor(this.registry, bytes, sessionValidators);\n            }\n        }\n        // For pow & Nimbus, the bytes are the actual author\n        if (this.isPow || this.isNimbus) {\n            return getBytesAsAuthor(this.registry, bytes);\n        }\n        return undefined;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toString();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'ConsensusEngineId';\n    }\n    /**\n     * @description Override the default toString to return a 4-byte string\n     */\n    toString() {\n        return this.isAscii\n            ? u8aToString(this)\n            : u8aToHex(this);\n    }\n}\n","import { AbstractBase } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from './AccountId.js';\nimport { GenericAccountIndex } from './AccountIndex.js';\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\nfunction decodeString(registry, value) {\n    const decoded = decodeAddress(value);\n    return decoded.length === 32\n        ? registry.createTypeUnsafe('AccountId', [decoded])\n        : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded)]);\n}\n/** @internal */\nfunction decodeU8a(registry, value) {\n    // This allows us to instantiate an address with a raw publicKey. Do this first before\n    // we checking the first byte, otherwise we may split an already-existent valid address\n    if (value.length === 32) {\n        return registry.createTypeUnsafe('AccountId', [value]);\n    }\n    else if (value[0] === 0xff) {\n        return registry.createTypeUnsafe('AccountId', [value.subarray(1)]);\n    }\n    const [offset, length] = GenericAccountIndex.readLength(value);\n    return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length))]);\n}\n/** @internal */\nfunction decodeAddressOrIndex(registry, value) {\n    return value instanceof GenericLookupSource\n        ? value.inner\n        : value instanceof GenericAccountId || value instanceof GenericAccountIndex\n            ? value\n            : isBn(value) || isNumber(value) || isBigInt(value)\n                ? registry.createTypeUnsafe('AccountIndex', [value])\n                : Array.isArray(value) || isHex(value) || isU8a(value)\n                    ? decodeU8a(registry, u8aToU8a(value))\n                    : decodeString(registry, value);\n}\n/**\n * @name LookupSource\n * @description\n * A wrapper around an AccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\nexport class GenericLookupSource extends AbstractBase {\n    constructor(registry, value = new Uint8Array()) {\n        super(registry, decodeAddressOrIndex(registry, value));\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        const rawLength = this._rawLength;\n        return rawLength + (\n        // for 1 byte AccountIndexes, we are not adding a specific prefix\n        rawLength > 1\n            ? 1\n            : 0);\n    }\n    /**\n     * @description The length of the raw value, either AccountIndex or AccountId\n     */\n    get _rawLength() {\n        return this.inner instanceof GenericAccountIndex\n            ? GenericAccountIndex.calcLength(this.inner)\n            : this.inner.encodedLength;\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const value = this.inner.toU8a().subarray(0, this._rawLength);\n        return {\n            outer: [\n                new Uint8Array(this.inner instanceof GenericAccountIndex\n                    ? GenericAccountIndex.writeLength(value)\n                    : ACCOUNT_ID_PREFIX),\n                value\n            ]\n        };\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Address';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n        return isBare\n            ? encoded\n            : u8aConcat(this.inner instanceof GenericAccountIndex\n                ? GenericAccountIndex.writeLength(encoded)\n                : ACCOUNT_ID_PREFIX, encoded);\n    }\n}\n","import { Enum } from '@polkadot/types-codec';\nimport { isBn, isNumber, isString, isU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountId } from './AccountId.js';\nimport { GenericAccountIndex } from './AccountIndex.js';\nfunction decodeU8a(registry, u8a) {\n    if ([0, 32].includes(u8a.length)) {\n        return { Id: u8a };\n    }\n    else if (u8a.length === 20) {\n        return { Address20: u8a };\n    }\n    else if (u8a.length <= 8) {\n        return { Index: registry.createTypeUnsafe('AccountIndex', [u8a]).toNumber() };\n    }\n    return u8a;\n}\nfunction decodeMultiAny(registry, value) {\n    if (value instanceof GenericAccountId) {\n        return { Id: value };\n    }\n    else if (isU8a(value)) {\n        // NOTE This is after the AccountId check (which is U8a)\n        return decodeU8a(registry, value);\n    }\n    else if (value instanceof GenericMultiAddress) {\n        return value;\n    }\n    else if (value instanceof GenericAccountIndex || isBn(value) || isNumber(value)) {\n        return { Index: isNumber(value) ? value : value.toNumber() };\n    }\n    else if (isString(value)) {\n        return decodeU8a(registry, decodeAddress(value.toString()));\n    }\n    return value;\n}\nexport class GenericMultiAddress extends Enum {\n    constructor(registry, value) {\n        super(registry, {\n            Id: 'AccountId',\n            Index: 'Compact<AccountIndex>',\n            Raw: 'Bytes',\n            // eslint-disable-next-line sort-keys\n            Address32: 'H256',\n            // eslint-disable-next-line sort-keys\n            Address20: 'H160'\n        }, decodeMultiAny(registry, value));\n    }\n    /**\n     * @description Returns a breakdown of the hex encoding for this Codec\n     */\n    inspect() {\n        const { inner, outer = [] } = this.inner.inspect();\n        return {\n            inner,\n            outer: [new Uint8Array([this.index]), ...outer]\n        };\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return this.value.toString();\n    }\n}\n","import { Bool, U8aFixed } from '@polkadot/types-codec';\nimport { isBoolean, isNumber, isU8a, isUndefined } from '@polkadot/util';\nconst AYE_BITS = 0b10000000;\nconst NAY_BITS = 0b00000000;\nconst CON_MASK = 0b01111111;\nconst DEF_CONV = 0b00000000; // the default conviction, None\n/** @internal */\nfunction decodeVoteBool(value) {\n    return value\n        ? new Uint8Array([AYE_BITS | DEF_CONV])\n        : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\nfunction decodeVoteU8a(value) {\n    return value.length\n        ? value.subarray(0, 1)\n        : new Uint8Array([NAY_BITS]);\n}\n/** @internal */\nfunction decodeVoteType(registry, value) {\n    return new Uint8Array([\n        (new Bool(registry, value.aye).isTrue\n            ? AYE_BITS\n            : NAY_BITS) |\n            registry.createTypeUnsafe('Conviction', [value.conviction || DEF_CONV]).index\n    ]);\n}\n/** @internal */\nfunction decodeVote(registry, value) {\n    if (isU8a(value)) {\n        return decodeVoteU8a(value);\n    }\n    else if (isUndefined(value) || value instanceof Boolean || isBoolean(value)) {\n        return decodeVoteBool(new Bool(registry, value).isTrue);\n    }\n    else if (isNumber(value)) {\n        return decodeVoteBool(value < 0);\n    }\n    return decodeVoteType(registry, value);\n}\n/**\n * @name GenericVote\n * @description\n * A number of lock periods, plus a vote, one way or the other.\n */\nexport class GenericVote extends U8aFixed {\n    __internal__aye;\n    __internal__conviction;\n    constructor(registry, value) {\n        // decoded is just 1 byte\n        // Aye: Most Significant Bit\n        // Conviction: 0000 - 0101\n        const decoded = decodeVote(registry, value);\n        super(registry, decoded, 8);\n        this.__internal__aye = (decoded[0] & AYE_BITS) === AYE_BITS;\n        this.__internal__conviction = this.registry.createTypeUnsafe('Conviction', [decoded[0] & CON_MASK]);\n    }\n    /**\n     * @description returns a V2 conviction\n     */\n    get conviction() {\n        return this.__internal__conviction;\n    }\n    /**\n     * @description true if the wrapped value is a positive vote\n     */\n    get isAye() {\n        return this.__internal__aye;\n    }\n    /**\n     * @description true if the wrapped value is a negative vote\n     */\n    get isNay() {\n        return !this.isAye;\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman(isExpanded) {\n        return {\n            conviction: this.conviction.toHuman(isExpanded),\n            vote: this.isAye ? 'Aye' : 'Nay'\n        };\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return {\n            aye: this.isAye,\n            conviction: this.conviction.toPrimitive()\n        };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Vote';\n    }\n}\n","import { U8aFixed } from '@polkadot/types-codec';\nimport { hexToU8a, isHex, isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { ethereumEncode, isEthereumAddress } from '@polkadot/util-crypto';\n/** @internal */\nfunction decodeAccountId(value) {\n    if (isU8a(value) || Array.isArray(value)) {\n        return u8aToU8a(value);\n    }\n    else if (isHex(value) || isEthereumAddress(value.toString())) {\n        return hexToU8a(value.toString());\n    }\n    else if (isString(value)) {\n        return u8aToU8a(value);\n    }\n    return value;\n}\n/**\n * @name GenericEthereumAccountId\n * @description\n * A wrapper around an Ethereum-compatible AccountId. Since we are dealing with\n * underlying addresses (20 bytes in length), we extend from U8aFixed which is\n * just a Uint8Array wrapper with a fixed length.\n */\nexport class GenericEthereumAccountId extends U8aFixed {\n    constructor(registry, value = new Uint8Array()) {\n        super(registry, decodeAccountId(value), 160);\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    eq(other) {\n        return !!other && super.eq(decodeAccountId(other));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n    toHuman() {\n        return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * @description Converts the value in a best-fit primitive form\n     */\n    toPrimitive() {\n        return this.toJSON();\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n    toString() {\n        return ethereumEncode(this);\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'AccountId';\n    }\n}\n","import { AbstractBase } from '@polkadot/types-codec';\nimport { isBigInt, isBn, isHex, isNumber, isU8a, u8aConcat, u8aToBn, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport { GenericAccountIndex } from '../generic/AccountIndex.js';\nimport { GenericEthereumAccountId } from './AccountId.js';\nexport const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);\n/** @internal */\nfunction decodeString(registry, value) {\n    const decoded = decodeAddress(value);\n    return decoded.length === 20\n        ? registry.createTypeUnsafe('EthereumAccountId', [decoded])\n        : registry.createTypeUnsafe('AccountIndex', [u8aToBn(decoded)]);\n}\n/** @internal */\nfunction decodeU8a(registry, value) {\n    // This allows us to instantiate an address with a raw publicKey. Do this first before\n    // we checking the first byte, otherwise we may split an already-existent valid address\n    if (value.length === 20) {\n        return registry.createTypeUnsafe('EthereumAccountId', [value]);\n    }\n    else if (value[0] === 0xff) {\n        return registry.createTypeUnsafe('EthereumAccountId', [value.subarray(1)]);\n    }\n    const [offset, length] = GenericAccountIndex.readLength(value);\n    return registry.createTypeUnsafe('AccountIndex', [u8aToBn(value.subarray(offset, offset + length))]);\n}\nfunction decodeAddressOrIndex(registry, value) {\n    return value instanceof GenericEthereumLookupSource\n        ? value.inner\n        : value instanceof GenericEthereumAccountId || value instanceof GenericAccountIndex\n            ? value\n            : isU8a(value) || Array.isArray(value) || isHex(value)\n                ? decodeU8a(registry, u8aToU8a(value))\n                : isBn(value) || isNumber(value) || isBigInt(value)\n                    ? registry.createTypeUnsafe('AccountIndex', [value])\n                    : decodeString(registry, value);\n}\n/**\n * @name GenericEthereumLookupSource\n * @description\n * A wrapper around an EthereumAccountId and/or AccountIndex that is encoded with a prefix.\n * Since we are dealing with underlying publicKeys (or shorter encoded addresses),\n * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address\n * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec\n */\nexport class GenericEthereumLookupSource extends AbstractBase {\n    constructor(registry, value = new Uint8Array()) {\n        super(registry, decodeAddressOrIndex(registry, value));\n    }\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get encodedLength() {\n        const rawLength = this._rawLength;\n        return rawLength + (\n        // for 1 byte AccountIndexes, we are not adding a specific prefix\n        rawLength > 1\n            ? 1\n            : 0);\n    }\n    /**\n     * @description The length of the raw value, either AccountIndex or AccountId\n     */\n    get _rawLength() {\n        return this.inner instanceof GenericAccountIndex\n            ? GenericAccountIndex.calcLength(this.inner)\n            : this.inner.encodedLength;\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n    toHex() {\n        return u8aToHex(this.toU8a());\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Address';\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    toU8a(isBare) {\n        const encoded = this.inner.toU8a().subarray(0, this._rawLength);\n        return isBare\n            ? encoded\n            : u8aConcat(this.inner instanceof GenericAccountIndex\n                ? GenericAccountIndex.writeLength(encoded)\n                : ACCOUNT_ID_PREFIX, encoded);\n    }\n}\n","import { Enum } from '@polkadot/types-codec';\nimport { isString, isU8a, u8aToU8a } from '@polkadot/util';\n/** @internal */\nfunction decodeDataU8a(registry, value) {\n    const indicator = value[0];\n    if (!indicator) {\n        return [undefined, undefined];\n    }\n    else if (indicator >= 1 && indicator <= 33) {\n        const length = indicator - 1;\n        const data = value.subarray(1, length + 1);\n        // in this case, we are passing a Raw back (since we have no length)\n        return [registry.createTypeUnsafe('Raw', [data]), 1];\n    }\n    else if (indicator >= 34 && indicator <= 37) {\n        return [value.subarray(1, 32 + 1), indicator - 32]; // 34 becomes 2\n    }\n    throw new Error(`Unable to decode Data, invalid indicator byte ${indicator}`);\n}\n/** @internal */\nfunction decodeData(registry, value) {\n    if (isU8a(value) || isString(value)) {\n        return decodeDataU8a(registry, u8aToU8a(value));\n    }\n    else if (!value) {\n        return [undefined, undefined];\n    }\n    // assume we have an Enum or an  object input, handle this via the normal Enum decoding\n    return [value, undefined];\n}\n/**\n * @name Data\n * @description\n * A [[Data]] container with node, raw or hashed data\n */\nexport class Data extends Enum {\n    constructor(registry, value) {\n        super(registry, {\n            None: 'Null', // 0\n            Raw: 'Bytes', // 1\n            // eslint-disable-next-line sort-keys\n            BlakeTwo256: 'H256', // 2\n            Sha256: 'H256', // 3\n            // eslint-disable-next-line sort-keys\n            Keccak256: 'H256', // 4\n            ShaThree256: 'H256' // 5\n        }, ...decodeData(registry, value));\n        if (this.isRaw && this.asRaw.length > 32) {\n            throw new Error('Data.Raw values are limited to a maximum length of 32 bytes');\n        }\n    }\n    get asBlakeTwo256() {\n        return this.value;\n    }\n    get asKeccak256() {\n        return this.value;\n    }\n    get asRaw() {\n        return this.value;\n    }\n    get asSha256() {\n        return this.value;\n    }\n    get asShaThree256() {\n        return this.value;\n    }\n    get isBlakeTwo256() {\n        return this.index === 2;\n    }\n    get isKeccak256() {\n        return this.index === 4;\n    }\n    get isNone() {\n        return this.index === 0;\n    }\n    get isRaw() {\n        return this.index === 1;\n    }\n    get isSha256() {\n        return this.index === 3;\n    }\n    get isShaThree256() {\n        return this.index === 5;\n    }\n    /**\n     * @description The encoded length\n     */\n    get encodedLength() {\n        return this.toU8a().length;\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     */\n    toU8a() {\n        if (this.index === 0) {\n            return new Uint8Array(1);\n        }\n        else if (this.index === 1) {\n            // don't add the length, just the data\n            const data = this.value.toU8a(true);\n            const length = Math.min(data.length, 32);\n            const u8a = new Uint8Array(length + 1);\n            u8a.set([length + 1], 0);\n            u8a.set(data.subarray(0, length), 1);\n            return u8a;\n        }\n        // otherwise we simply have a hash\n        const u8a = new Uint8Array(33);\n        u8a.set([this.index + 32], 0);\n        u8a.set(this.value.toU8a(), 1);\n        return u8a;\n    }\n}\n","import { Bytes } from '@polkadot/types-codec';\nimport { isFunction, isString, isU8a } from '@polkadot/util';\nimport { getSiName } from '../metadata/util/index.js';\nimport { unwrapStorageType } from '../util/index.js';\nconst HASHER_MAP = {\n    // opaque\n    Blake2_128: [16, false], // eslint-disable-line camelcase\n    Blake2_128Concat: [16, true], // eslint-disable-line camelcase\n    Blake2_256: [32, false], // eslint-disable-line camelcase\n    Identity: [0, true],\n    Twox128: [16, false],\n    Twox256: [32, false],\n    Twox64Concat: [8, true]\n};\n/** @internal */\nfunction decodeStorageKey(value) {\n    if (isU8a(value) || !value || isString(value)) {\n        // let Bytes handle these inputs\n        return { key: value };\n    }\n    else if (value instanceof StorageKey) {\n        return {\n            key: value,\n            method: value.method,\n            section: value.section\n        };\n    }\n    else if (isFunction(value)) {\n        return {\n            key: value(),\n            method: value.method,\n            section: value.section\n        };\n    }\n    else if (Array.isArray(value)) {\n        const [fn, args = []] = value;\n        if (!isFunction(fn)) {\n            throw new Error('Expected function input for key construction');\n        }\n        if (fn.meta && fn.meta.type.isMap) {\n            const map = fn.meta.type.asMap;\n            if (!Array.isArray(args) || args.length !== map.hashers.length) {\n                throw new Error(`Expected an array of ${map.hashers.length} values as params to a Map query`);\n            }\n        }\n        return {\n            key: fn(...args),\n            method: fn.method,\n            section: fn.section\n        };\n    }\n    throw new Error(`Unable to convert input ${value} to StorageKey`);\n}\n/** @internal */\nfunction decodeHashers(registry, value, hashers) {\n    // the storage entry is xxhashAsU8a(prefix, 128) + xxhashAsU8a(method, 128), 256 bits total\n    let offset = 32;\n    const count = hashers.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const [hasher, type] = hashers[i];\n        const [hashLen, canDecode] = HASHER_MAP[hasher.type];\n        const decoded = canDecode\n            ? registry.createTypeUnsafe(getSiName(registry.lookup, type), [value.subarray(offset + hashLen)])\n            : registry.createTypeUnsafe('Raw', [value.subarray(offset, offset + hashLen)]);\n        offset += hashLen + (canDecode ? decoded.encodedLength : 0);\n        result[i] = decoded;\n    }\n    return result;\n}\n/** @internal */\nfunction decodeArgsFromMeta(registry, value, meta) {\n    if (!meta || !meta.type.isMap) {\n        return [];\n    }\n    const { hashers, key } = meta.type.asMap;\n    const keys = hashers.length === 1\n        ? [key]\n        : registry.lookup.getSiType(key).def.asTuple;\n    return decodeHashers(registry, value, hashers.map((h, i) => [h, keys[i]]));\n}\n/** @internal */\nfunction getMeta(value) {\n    if (value instanceof StorageKey) {\n        return value.meta;\n    }\n    else if (isFunction(value)) {\n        return value.meta;\n    }\n    else if (Array.isArray(value)) {\n        const [fn] = value;\n        return fn.meta;\n    }\n    return undefined;\n}\n/** @internal */\nfunction getType(registry, value) {\n    if (value instanceof StorageKey) {\n        return value.outputType;\n    }\n    else if (isFunction(value)) {\n        return unwrapStorageType(registry, value.meta.type);\n    }\n    else if (Array.isArray(value)) {\n        const [fn] = value;\n        if (fn.meta) {\n            return unwrapStorageType(registry, fn.meta.type);\n        }\n    }\n    // If we have no type set, default to Raw\n    return 'Raw';\n}\n/**\n * @name StorageKey\n * @description\n * A representation of a storage key (typically hashed) in the system. It can be\n * constructed by passing in a raw key or a StorageEntry with (optional) arguments.\n */\nexport class StorageKey extends Bytes {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore This is assigned via this.decodeArgsFromMeta()\n    __internal__args;\n    __internal__meta;\n    __internal__outputType;\n    __internal__method;\n    __internal__section;\n    constructor(registry, value, override = {}) {\n        const { key, method, section } = decodeStorageKey(value);\n        super(registry, key);\n        this.__internal__outputType = getType(registry, value);\n        // decode the args (as applicable based on the key and the hashers, after all init)\n        this.setMeta(getMeta(value), override.section || section, override.method || method);\n    }\n    /**\n     * @description Return the decoded arguments (applicable to map with decodable values)\n     */\n    get args() {\n        return this.__internal__args;\n    }\n    /**\n     * @description The metadata or `undefined` when not available\n     */\n    get meta() {\n        return this.__internal__meta;\n    }\n    /**\n     * @description The key method or `undefined` when not specified\n     */\n    get method() {\n        return this.__internal__method;\n    }\n    /**\n     * @description The output type\n     */\n    get outputType() {\n        return this.__internal__outputType;\n    }\n    /**\n     * @description The key section or `undefined` when not specified\n     */\n    get section() {\n        return this.__internal__section;\n    }\n    is(key) {\n        return key.section === this.section && key.method === this.method;\n    }\n    /**\n     * @description Sets the meta for this key\n     */\n    setMeta(meta, section, method) {\n        this.__internal__meta = meta;\n        this.__internal__method = method || this.__internal__method;\n        this.__internal__section = section || this.__internal__section;\n        if (meta) {\n            this.__internal__outputType = unwrapStorageType(this.registry, meta.type);\n        }\n        try {\n            this.__internal__args = decodeArgsFromMeta(this.registry, this.toU8a(true), meta);\n        }\n        catch {\n            // ignore...\n        }\n        return this;\n    }\n    /**\n     * @description Returns the Human representation for this type\n     */\n    toHuman(_isExtended, disableAscii) {\n        return this.__internal__args.length\n            ? this.__internal__args.map((a) => a.toHuman(undefined, disableAscii))\n            : super.toHuman(undefined, disableAscii);\n    }\n    /**\n     * @description Returns the raw type for this\n     */\n    toRawType() {\n        return 'StorageKey';\n    }\n}\n","const META_V1_TO_V2 = {\n    metadata: {\n        description: 'Returns the metadata of a runtime',\n        params: [],\n        type: 'OpaqueMetadata'\n    }\n};\nexport const runtime = {\n    Metadata: [\n        {\n            methods: {\n                metadata_at_version: {\n                    description: 'Returns the metadata at a given version.',\n                    params: [\n                        {\n                            name: 'version',\n                            type: 'u32'\n                        }\n                    ],\n                    type: 'Option<OpaqueMetadata>'\n                },\n                metadata_versions: {\n                    description: 'Returns the supported metadata versions.',\n                    params: [],\n                    type: 'Vec<u32>'\n                },\n                ...META_V1_TO_V2\n            },\n            version: 2\n        },\n        {\n            methods: {\n                ...META_V1_TO_V2\n            },\n            version: 1\n        }\n    ]\n};\n","/* eslint-disable sort-keys */\nexport const Si1Variant = {\n    name: 'Text',\n    fields: 'Vec<Si1Field>',\n    index: 'u8',\n    docs: 'Vec<Text>'\n};\nexport const v1 = {\n    Si1Field: {\n        name: 'Option<Text>',\n        type: 'Si1LookupTypeId',\n        typeName: 'Option<Text>',\n        docs: 'Vec<Text>'\n    },\n    Si1LookupTypeId: 'Compact<u32>',\n    Si1Path: 'Si0Path',\n    Si1Type: {\n        path: 'Si1Path',\n        params: 'Vec<Si1TypeParameter>',\n        def: 'Si1TypeDef',\n        docs: 'Vec<Text>'\n    },\n    Si1TypeDef: {\n        _enum: {\n            Composite: 'Si1TypeDefComposite',\n            Variant: 'Si1TypeDefVariant',\n            Sequence: 'Si1TypeDefSequence',\n            Array: 'Si1TypeDefArray',\n            Tuple: 'Si1TypeDefTuple',\n            Primitive: 'Si1TypeDefPrimitive',\n            Compact: 'Si1TypeDefCompact',\n            BitSequence: 'Si1TypeDefBitSequence',\n            // NOTE: This is specific to the implementation for pre-v14 metadata\n            // compatibility (always keep this as the last entry in the enum)\n            HistoricMetaCompat: 'Type'\n        }\n    },\n    Si1TypeDefArray: {\n        len: 'u32',\n        type: 'Si1LookupTypeId'\n    },\n    Si1TypeDefBitSequence: {\n        bitStoreType: 'Si1LookupTypeId',\n        bitOrderType: 'Si1LookupTypeId'\n    },\n    Si1TypeDefCompact: {\n        type: 'Si1LookupTypeId'\n    },\n    Si1TypeDefComposite: {\n        fields: 'Vec<Si1Field>'\n    },\n    Si1TypeDefPrimitive: 'Si0TypeDefPrimitive',\n    Si1TypeDefSequence: {\n        type: 'Si1LookupTypeId'\n    },\n    Si1TypeDefTuple: 'Vec<Si1LookupTypeId>',\n    Si1TypeParameter: {\n        name: 'Text',\n        type: 'Option<Si1LookupTypeId>'\n    },\n    Si1TypeDefVariant: {\n        variants: 'Vec<Si1Variant>'\n    },\n    Si1Variant\n};\n","import { AllHashers } from './hashers.js';\nimport { runtime } from './runtime.js';\nimport { v9 } from './v9.js';\nimport { v10 } from './v10.js';\nimport { v11 } from './v11.js';\nimport { v12 } from './v12.js';\nimport { v13 } from './v13.js';\nimport { v14 } from './v14.js';\nimport { v15 } from './v15.js';\nexport { AllHashers };\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        // all known\n        ...v9,\n        ...v10,\n        ...v11,\n        ...v12,\n        ...v13,\n        ...v14,\n        ...v15,\n        // latest mappings\n        // NOTE: For v15, we only added the runtime defintions,\n        // hence latest for most pointing to the previous V14\n        ErrorMetadataLatest: 'ErrorMetadataV14',\n        EventMetadataLatest: 'EventMetadataV14',\n        ExtrinsicMetadataLatest: 'ExtrinsicMetadataV15',\n        FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV14',\n        FunctionMetadataLatest: 'FunctionMetadataV14',\n        MetadataLatest: 'MetadataV15',\n        PalletCallMetadataLatest: 'PalletCallMetadataV14',\n        PalletConstantMetadataLatest: 'PalletConstantMetadataV14',\n        PalletErrorMetadataLatest: 'PalletErrorMetadataV14',\n        PalletEventMetadataLatest: 'PalletEventMetadataV14',\n        PalletMetadataLatest: 'PalletMetadataV15',\n        PalletStorageMetadataLatest: 'PalletStorageMetadataV14',\n        PortableType: 'PortableTypeV14',\n        RuntimeApiMetadataLatest: 'RuntimeApiMetadataV15',\n        SignedExtensionMetadataLatest: 'SignedExtensionMetadataV14',\n        StorageEntryMetadataLatest: 'StorageEntryMetadataV14',\n        StorageEntryModifierLatest: 'StorageEntryModifierV14',\n        StorageEntryTypeLatest: 'StorageEntryTypeV14',\n        StorageHasher: 'StorageHasherV14',\n        // additional types\n        OpaqueMetadata: 'Opaque<Bytes>',\n        // the enum containing all the mappings\n        MetadataAll: {\n            _enum: {\n                V0: 'DoNotConstruct<MetadataV0>',\n                V1: 'DoNotConstruct<MetadataV1>',\n                V2: 'DoNotConstruct<MetadataV2>',\n                V3: 'DoNotConstruct<MetadataV3>',\n                V4: 'DoNotConstruct<MetadataV4>',\n                V5: 'DoNotConstruct<MetadataV5>',\n                V6: 'DoNotConstruct<MetadataV6>',\n                V7: 'DoNotConstruct<MetadataV7>',\n                V8: 'DoNotConstruct<MetadataV8>',\n                // First version on Kusama in V9, dropping will be problematic\n                V9: 'MetadataV9',\n                V10: 'MetadataV10',\n                V11: 'MetadataV11',\n                V12: 'MetadataV12',\n                V13: 'MetadataV13',\n                V14: 'MetadataV14',\n                V15: 'MetadataV15'\n            }\n        }\n    }\n};\n","export const v9 = {\n    // v9\n    ErrorMetadataV9: {\n        name: 'Text',\n        docs: 'Vec<Text>'\n    },\n    EventMetadataV9: {\n        name: 'Text',\n        args: 'Vec<Type>',\n        docs: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV9: {\n        name: 'Text',\n        type: 'Type'\n    },\n    FunctionMetadataV9: {\n        name: 'Text',\n        args: 'Vec<FunctionArgumentMetadataV9>',\n        docs: 'Vec<Text>'\n    },\n    MetadataV9: {\n        modules: 'Vec<ModuleMetadataV9>'\n    },\n    ModuleConstantMetadataV9: {\n        name: 'Text',\n        type: 'Type',\n        value: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    ModuleMetadataV9: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV9>',\n        calls: 'Option<Vec<FunctionMetadataV9>>',\n        events: 'Option<Vec<EventMetadataV9>>',\n        constants: 'Vec<ModuleConstantMetadataV9>',\n        errors: 'Vec<ErrorMetadataV9>'\n    },\n    StorageEntryMetadataV9: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV9',\n        type: 'StorageEntryTypeV9',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryModifierV9: {\n        _enum: ['Optional', 'Default', 'Required']\n    },\n    StorageEntryTypeV9: {\n        _enum: {\n            Plain: 'Type',\n            Map: {\n                hasher: 'StorageHasherV9',\n                key: 'Type',\n                value: 'Type',\n                linked: 'bool'\n            },\n            DoubleMap: {\n                hasher: 'StorageHasherV9',\n                key1: 'Type',\n                key2: 'Type',\n                value: 'Type',\n                key2Hasher: 'StorageHasherV9'\n            }\n        }\n    },\n    StorageHasherV9: {\n        _enum: {\n            Blake2_128: null, // eslint-disable-line camelcase\n            Blake2_256: null, // eslint-disable-line camelcase\n            Twox128: null,\n            Twox256: null,\n            Twox64Concat: null\n        }\n    },\n    StorageMetadataV9: {\n        prefix: 'Text',\n        items: 'Vec<StorageEntryMetadataV9>'\n    }\n};\n","export const v10 = {\n    // v10\n    ErrorMetadataV10: 'ErrorMetadataV9',\n    EventMetadataV10: 'EventMetadataV9',\n    FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',\n    FunctionMetadataV10: 'FunctionMetadataV9',\n    MetadataV10: {\n        modules: 'Vec<ModuleMetadataV10>'\n    },\n    ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',\n    ModuleMetadataV10: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV10>',\n        calls: 'Option<Vec<FunctionMetadataV10>>',\n        events: 'Option<Vec<EventMetadataV10>>',\n        constants: 'Vec<ModuleConstantMetadataV10>',\n        errors: 'Vec<ErrorMetadataV10>'\n    },\n    StorageEntryModifierV10: 'StorageEntryModifierV9',\n    StorageEntryMetadataV10: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV10',\n        type: 'StorageEntryTypeV10',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryTypeV10: {\n        _enum: {\n            Plain: 'Type',\n            Map: {\n                hasher: 'StorageHasherV10',\n                key: 'Type',\n                value: 'Type',\n                linked: 'bool'\n            },\n            DoubleMap: {\n                hasher: 'StorageHasherV10',\n                key1: 'Type',\n                key2: 'Type',\n                value: 'Type',\n                key2Hasher: 'StorageHasherV10'\n            }\n        }\n    },\n    StorageMetadataV10: {\n        prefix: 'Text',\n        items: 'Vec<StorageEntryMetadataV10>'\n    },\n    StorageHasherV10: {\n        _enum: {\n            Blake2_128: null, // eslint-disable-line camelcase\n            Blake2_256: null, // eslint-disable-line camelcase\n            Blake2_128Concat: null, // eslint-disable-line camelcase\n            Twox128: null,\n            Twox256: null,\n            Twox64Concat: null\n        }\n    }\n};\n","import { AllHashers } from './hashers.js';\nexport const v11 = {\n    // v11\n    ErrorMetadataV11: 'ErrorMetadataV10',\n    EventMetadataV11: 'EventMetadataV10',\n    ExtrinsicMetadataV11: {\n        version: 'u8',\n        signedExtensions: 'Vec<Text>'\n    },\n    FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',\n    FunctionMetadataV11: 'FunctionMetadataV10',\n    MetadataV11: {\n        modules: 'Vec<ModuleMetadataV11>',\n        extrinsic: 'ExtrinsicMetadataV11'\n    },\n    ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',\n    ModuleMetadataV11: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV11>',\n        calls: 'Option<Vec<FunctionMetadataV11>>',\n        events: 'Option<Vec<EventMetadataV11>>',\n        constants: 'Vec<ModuleConstantMetadataV11>',\n        errors: 'Vec<ErrorMetadataV11>'\n    },\n    StorageEntryModifierV11: 'StorageEntryModifierV10',\n    StorageEntryMetadataV11: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV11',\n        type: 'StorageEntryTypeV11',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryTypeV11: {\n        _enum: {\n            Plain: 'Type',\n            Map: {\n                hasher: 'StorageHasherV11',\n                key: 'Type',\n                value: 'Type',\n                linked: 'bool'\n            },\n            DoubleMap: {\n                hasher: 'StorageHasherV11',\n                key1: 'Type',\n                key2: 'Type',\n                value: 'Type',\n                key2Hasher: 'StorageHasherV11'\n            }\n        }\n    },\n    StorageMetadataV11: {\n        prefix: 'Text',\n        items: 'Vec<StorageEntryMetadataV11>'\n    },\n    StorageHasherV11: {\n        _enum: AllHashers\n    }\n};\n","/* eslint-disable sort-keys */\nexport const AllHashers = {\n    Blake2_128: null, // eslint-disable-line camelcase\n    Blake2_256: null, // eslint-disable-line camelcase\n    Blake2_128Concat: null, // eslint-disable-line camelcase\n    Twox128: null,\n    Twox256: null,\n    Twox64Concat: null,\n    // new in v11\n    Identity: null\n};\n","export const v12 = {\n    // v12\n    ErrorMetadataV12: 'ErrorMetadataV11',\n    EventMetadataV12: 'EventMetadataV11',\n    ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',\n    FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',\n    FunctionMetadataV12: 'FunctionMetadataV11',\n    MetadataV12: {\n        modules: 'Vec<ModuleMetadataV12>',\n        extrinsic: 'ExtrinsicMetadataV12'\n    },\n    ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',\n    ModuleMetadataV12: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV12>',\n        calls: 'Option<Vec<FunctionMetadataV12>>',\n        events: 'Option<Vec<EventMetadataV12>>',\n        constants: 'Vec<ModuleConstantMetadataV12>',\n        errors: 'Vec<ErrorMetadataV12>',\n        index: 'u8'\n    },\n    StorageEntryModifierV12: 'StorageEntryModifierV11',\n    StorageEntryMetadataV12: 'StorageEntryMetadataV11',\n    StorageEntryTypeV12: 'StorageEntryTypeV11',\n    StorageMetadataV12: 'StorageMetadataV11',\n    StorageHasherV12: 'StorageHasherV11'\n};\n","export const v13 = {\n    // v13\n    ErrorMetadataV13: 'ErrorMetadataV12',\n    EventMetadataV13: 'EventMetadataV12',\n    ExtrinsicMetadataV13: 'ExtrinsicMetadataV12',\n    FunctionArgumentMetadataV13: 'FunctionArgumentMetadataV12',\n    FunctionMetadataV13: 'FunctionMetadataV12',\n    MetadataV13: {\n        modules: 'Vec<ModuleMetadataV13>',\n        extrinsic: 'ExtrinsicMetadataV13'\n    },\n    ModuleConstantMetadataV13: 'ModuleConstantMetadataV12',\n    ModuleMetadataV13: {\n        name: 'Text',\n        storage: 'Option<StorageMetadataV13>',\n        calls: 'Option<Vec<FunctionMetadataV13>>',\n        events: 'Option<Vec<EventMetadataV13>>',\n        constants: 'Vec<ModuleConstantMetadataV13>',\n        errors: 'Vec<ErrorMetadataV13>',\n        index: 'u8'\n    },\n    StorageEntryModifierV13: 'StorageEntryModifierV12',\n    StorageEntryMetadataV13: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV13',\n        type: 'StorageEntryTypeV13',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryTypeV13: {\n        _enum: {\n            Plain: 'Type',\n            Map: {\n                hasher: 'StorageHasherV13',\n                key: 'Type',\n                value: 'Type',\n                linked: 'bool'\n            },\n            DoubleMap: {\n                hasher: 'StorageHasherV13',\n                key1: 'Type',\n                key2: 'Type',\n                value: 'Type',\n                key2Hasher: 'StorageHasherV13'\n            },\n            NMap: {\n                keyVec: 'Vec<Type>',\n                hashers: 'Vec<StorageHasherV13>',\n                value: 'Type'\n            }\n        }\n    },\n    StorageMetadataV13: {\n        prefix: 'Text',\n        items: 'Vec<StorageEntryMetadataV13>'\n    },\n    StorageHasherV13: 'StorageHasherV12'\n};\n","import { Si1Variant } from '../scaleInfo/v1.js';\nexport const v14 = {\n    // registry\n    PortableTypeV14: {\n        id: 'Si1LookupTypeId',\n        type: 'Si1Type'\n    },\n    // compatibility with earlier layouts, i.e. don't break previous users\n    ErrorMetadataV14: {\n        ...Si1Variant,\n        args: 'Vec<Type>'\n    },\n    EventMetadataV14: {\n        ...Si1Variant,\n        args: 'Vec<Type>'\n    },\n    FunctionArgumentMetadataV14: {\n        name: 'Text',\n        type: 'Type',\n        typeName: 'Option<Type>'\n    },\n    FunctionMetadataV14: {\n        ...Si1Variant,\n        args: 'Vec<FunctionArgumentMetadataV14>'\n    },\n    // V14\n    ExtrinsicMetadataV14: {\n        type: 'SiLookupTypeId',\n        version: 'u8',\n        signedExtensions: 'Vec<SignedExtensionMetadataV14>'\n    },\n    MetadataV14: {\n        lookup: 'PortableRegistry',\n        pallets: 'Vec<PalletMetadataV14>',\n        extrinsic: 'ExtrinsicMetadataV14',\n        type: 'SiLookupTypeId'\n    },\n    PalletCallMetadataV14: {\n        type: 'SiLookupTypeId'\n    },\n    PalletConstantMetadataV14: {\n        name: 'Text',\n        type: 'SiLookupTypeId',\n        value: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    PalletErrorMetadataV14: {\n        type: 'SiLookupTypeId'\n    },\n    PalletEventMetadataV14: {\n        type: 'SiLookupTypeId'\n    },\n    PalletMetadataV14: {\n        name: 'Text',\n        storage: 'Option<PalletStorageMetadataV14>',\n        calls: 'Option<PalletCallMetadataV14>',\n        events: 'Option<PalletEventMetadataV14>',\n        constants: 'Vec<PalletConstantMetadataV14>',\n        errors: 'Option<PalletErrorMetadataV14>',\n        index: 'u8'\n    },\n    PalletStorageMetadataV14: {\n        prefix: 'Text',\n        // NOTE: Renamed from entries\n        items: 'Vec<StorageEntryMetadataV14>'\n    },\n    SignedExtensionMetadataV14: {\n        identifier: 'Text',\n        type: 'SiLookupTypeId',\n        additionalSigned: 'SiLookupTypeId'\n    },\n    StorageEntryMetadataV14: {\n        name: 'Text',\n        modifier: 'StorageEntryModifierV14',\n        type: 'StorageEntryTypeV14',\n        fallback: 'Bytes',\n        docs: 'Vec<Text>'\n    },\n    StorageEntryModifierV14: 'StorageEntryModifierV13',\n    StorageEntryTypeV14: {\n        _enum: {\n            Plain: 'SiLookupTypeId',\n            Map: {\n                hashers: 'Vec<StorageHasherV14>',\n                key: 'SiLookupTypeId', // NOTE: Renamed from \"keys\"\n                value: 'SiLookupTypeId'\n            }\n        }\n    },\n    StorageHasherV14: 'StorageHasherV13'\n};\n","export const v15 = {\n    // new/adjusted in v15\n    CustomMetadata15: {\n        map: 'BTreeMap<Text, CustomValueMetadata15>'\n    },\n    CustomValueMetadata15: {\n        type: 'SiLookupTypeId',\n        value: 'Bytes'\n    },\n    ExtrinsicMetadataV15: {\n        version: 'u8',\n        addressType: 'SiLookupTypeId',\n        callType: 'SiLookupTypeId',\n        signatureType: 'SiLookupTypeId',\n        extraType: 'SiLookupTypeId',\n        signedExtensions: 'Vec<SignedExtensionMetadataV14>'\n    },\n    OuterEnums15: {\n        callType: 'SiLookupTypeId',\n        eventType: 'SiLookupTypeId',\n        errorType: 'SiLookupTypeId'\n    },\n    PalletMetadataV15: {\n        name: 'Text',\n        storage: 'Option<PalletStorageMetadataV14>',\n        calls: 'Option<PalletCallMetadataV14>',\n        events: 'Option<PalletEventMetadataV14>',\n        constants: 'Vec<PalletConstantMetadataV14>',\n        errors: 'Option<PalletErrorMetadataV14>',\n        index: 'u8',\n        docs: 'Vec<Text>'\n    },\n    RuntimeApiMetadataV15: {\n        name: 'Text',\n        methods: 'Vec<RuntimeApiMethodMetadataV15>',\n        docs: 'Vec<Text>'\n    },\n    RuntimeApiMethodMetadataV15: {\n        name: 'Text',\n        inputs: 'Vec<RuntimeApiMethodParamMetadataV15>',\n        output: 'SiLookupTypeId',\n        docs: 'Vec<Text>'\n    },\n    RuntimeApiMethodParamMetadataV15: {\n        name: 'Text',\n        type: 'SiLookupTypeId'\n    },\n    // actual v15 definition\n    MetadataV15: {\n        lookup: 'PortableRegistry',\n        pallets: 'Vec<PalletMetadataV15>',\n        extrinsic: 'ExtrinsicMetadataV15',\n        type: 'SiLookupTypeId',\n        apis: 'Vec<RuntimeApiMetadataV15>',\n        outerEnums: 'OuterEnums15',\n        custom: 'CustomMetadata15'\n    }\n};\n","/* eslint-disable sort-keys */\nexport const v0 = {\n    Si0Field: {\n        name: 'Option<Text>',\n        type: 'Si0LookupTypeId',\n        typeName: 'Option<Text>',\n        docs: 'Vec<Text>'\n    },\n    Si0LookupTypeId: 'u32',\n    Si0Path: 'Vec<Text>',\n    Si0Type: {\n        path: 'Si0Path',\n        params: 'Vec<Si0LookupTypeId>',\n        def: 'Si0TypeDef'\n    },\n    Si0TypeDef: {\n        _enum: {\n            Composite: 'Si0TypeDefComposite',\n            Variant: 'Si0TypeDefVariant',\n            Sequence: 'Si0TypeDefSequence',\n            Array: 'Si0TypeDefArray',\n            Tuple: 'Si0TypeDefTuple',\n            Primitive: 'Si0TypeDefPrimitive',\n            Compact: 'Si0TypeDefCompact',\n            Phantom: 'Si0TypeDefPhantom',\n            BitSequence: 'Si0TypeDefBitSequence'\n        }\n    },\n    Si0TypeDefArray: {\n        len: 'u32',\n        type: 'Si0LookupTypeId'\n    },\n    Si0TypeDefBitSequence: {\n        bitStoreType: 'Si0LookupTypeId',\n        bitOrderType: 'Si0LookupTypeId'\n    },\n    Si0TypeDefCompact: {\n        type: 'Si0LookupTypeId'\n    },\n    Si0TypeDefComposite: {\n        fields: 'Vec<Si0Field>'\n    },\n    Si0TypeDefPhantom: 'Null',\n    Si0TypeDefVariant: {\n        variants: 'Vec<Si0Variant>'\n    },\n    Si0TypeDefPrimitive: {\n        _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'U256', 'I8', 'I16', 'I32', 'I64', 'I128', 'I256']\n    },\n    Si0TypeDefSequence: {\n        type: 'Si0LookupTypeId'\n    },\n    Si0TypeDefTuple: 'Vec<Si0LookupTypeId>',\n    Si0TypeParameter: {\n        name: 'Text',\n        type: 'Option<Si0LookupTypeId>'\n    },\n    Si0Variant: {\n        name: 'Text',\n        fields: 'Vec<Si0Field>',\n        index: 'Option<u8>',\n        discriminant: 'Option<u64>',\n        docs: 'Vec<Text>'\n    }\n};\n","import { v0 } from './v0.js';\nimport { v1 } from './v1.js';\n/* eslint-disable sort-keys */\nexport default {\n    rpc: {},\n    types: {\n        ...v0,\n        ...v1,\n        // latest mappings\n        SiField: 'Si1Field',\n        SiLookupTypeId: 'Si1LookupTypeId',\n        SiPath: 'Si1Path',\n        SiType: 'Si1Type',\n        SiTypeDef: 'Si1TypeDef',\n        SiTypeDefArray: 'Si1TypeDefArray',\n        SiTypeDefBitSequence: 'Si1TypeDefBitSequence',\n        SiTypeDefCompact: 'Si1TypeDefCompact',\n        SiTypeDefComposite: 'Si1TypeDefComposite',\n        SiTypeDefPrimitive: 'Si1TypeDefPrimitive',\n        SiTypeDefSequence: 'Si1TypeDefSequence',\n        SiTypeDefTuple: 'Si1TypeDefTuple',\n        SiTypeParameter: 'Si1TypeParameter',\n        SiTypeDefVariant: 'Si1TypeDefVariant',\n        SiVariant: 'Si1Variant'\n    }\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        TAssetConversion: 'Option<MultiLocation>'\n    }\n};\n","export const runtime = {\n    AssetConversionApi: [\n        {\n            methods: {\n                get_reserves: {\n                    description: 'Get pool reserves',\n                    params: [\n                        {\n                            name: 'asset1',\n                            type: 'StagingXcmV3MultiLocation'\n                        },\n                        {\n                            name: 'asset2',\n                            type: 'StagingXcmV3MultiLocation'\n                        }\n                    ],\n                    type: 'Option<(Balance,Balance)>'\n                },\n                quote_price_exact_tokens_for_tokens: {\n                    description: 'Quote price: exact tokens for tokens',\n                    params: [\n                        {\n                            name: 'asset1',\n                            type: 'StagingXcmV3MultiLocation'\n                        },\n                        {\n                            name: 'asset2',\n                            type: 'StagingXcmV3MultiLocation'\n                        },\n                        {\n                            name: 'amount',\n                            type: 'u128'\n                        },\n                        {\n                            name: 'include_fee',\n                            type: 'bool'\n                        }\n                    ],\n                    type: 'Option<(Balance)>'\n                },\n                quote_price_tokens_for_exact_tokens: {\n                    description: 'Quote price: tokens for exact tokens',\n                    params: [\n                        {\n                            name: 'asset1',\n                            type: 'StagingXcmV3MultiLocation'\n                        },\n                        {\n                            name: 'asset2',\n                            type: 'StagingXcmV3MultiLocation'\n                        },\n                        {\n                            name: 'amount',\n                            type: 'u128'\n                        },\n                        {\n                            name: 'include_fee',\n                            type: 'bool'\n                        }\n                    ],\n                    type: 'Option<(Balance)>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        AssetApprovalKey: {\n            owner: 'AccountId',\n            delegate: 'AccountId'\n        },\n        AssetApproval: {\n            amount: 'TAssetBalance',\n            deposit: 'TAssetDepositBalance'\n        },\n        AssetBalance: {\n            balance: 'TAssetBalance',\n            isFrozen: 'bool',\n            isSufficient: 'bool'\n        },\n        AssetDestroyWitness: {\n            accounts: 'Compact<u32>',\n            sufficients: 'Compact<u32>',\n            approvals: 'Compact<u32>'\n        },\n        AssetDetails: {\n            owner: 'AccountId',\n            issuer: 'AccountId',\n            admin: 'AccountId',\n            freezer: 'AccountId',\n            supply: 'TAssetBalance',\n            deposit: 'TAssetDepositBalance',\n            minBalance: 'TAssetBalance',\n            isSufficient: 'bool',\n            accounts: 'u32',\n            sufficients: 'u32',\n            approvals: 'u32',\n            isFrozen: 'bool'\n        },\n        AssetMetadata: {\n            deposit: 'TAssetDepositBalance',\n            name: 'Vec<u8>',\n            symbol: 'Vec<u8>',\n            decimals: 'u8',\n            isFrozen: 'bool'\n        },\n        TAssetBalance: 'u64',\n        TAssetDepositBalance: 'BalanceOf'\n    }\n};\n","export const runtime = {\n    AssetsApi: [\n        {\n            methods: {\n                account_balances: {\n                    description: 'Return the current set of authorities.',\n                    params: [\n                        {\n                            name: 'account',\n                            type: 'AccountId'\n                        }\n                    ],\n                    type: 'Vec<(u32, TAssetBalance)>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        RawAuraPreDigest: {\n            slotNumber: 'u64'\n        }\n    }\n};\n","export const runtime = {\n    AuraApi: [\n        {\n            methods: {\n                authorities: {\n                    description: 'Return the current set of authorities.',\n                    params: [],\n                    type: 'Vec<AuthorityId>'\n                },\n                slot_duration: {\n                    description: 'Returns the slot duration for Aura.',\n                    params: [],\n                    type: 'SlotDuration'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        UncleEntryItem: {\n            _enum: {\n                InclusionHeight: 'BlockNumber',\n                Uncle: '(Hash, Option<AccountId>)'\n            }\n        }\n    }\n};\n","const V1_V2_SHARED = {\n    current_epoch: {\n        description: 'Returns information regarding the current epoch.',\n        params: [],\n        type: 'Epoch'\n    },\n    current_epoch_start: {\n        description: 'Returns the slot that started the current epoch.',\n        params: [],\n        type: 'Slot'\n    },\n    generate_key_ownership_proof: {\n        description: 'Generates a proof of key ownership for the given authority in the current epoch.',\n        params: [\n            {\n                name: 'slot',\n                type: 'Slot'\n            },\n            {\n                name: 'authorityId',\n                type: 'AuthorityId'\n            }\n        ],\n        type: 'Option<OpaqueKeyOwnershipProof>'\n    },\n    next_epoch: {\n        description: 'Returns information regarding the next epoch (which was already previously announced).',\n        params: [],\n        type: 'Epoch'\n    },\n    submit_report_equivocation_unsigned_extrinsic: {\n        description: 'Submits an unsigned extrinsic to report an equivocation.',\n        params: [\n            {\n                name: 'equivocationProof',\n                type: 'BabeEquivocationProof'\n            },\n            {\n                name: 'keyOwnerProof',\n                type: 'OpaqueKeyOwnershipProof'\n            }\n        ],\n        type: 'Option<Null>'\n    }\n};\nexport const runtime = {\n    BabeApi: [\n        {\n            methods: {\n                configuration: {\n                    description: 'Return the genesis configuration for BABE. The configuration is only read on genesis.',\n                    params: [],\n                    type: 'BabeGenesisConfiguration'\n                },\n                ...V1_V2_SHARED\n            },\n            version: 2\n        },\n        {\n            methods: {\n                configuration: {\n                    description: 'Return the configuration for BABE. Version 1.',\n                    params: [],\n                    type: 'BabeGenesisConfigurationV1'\n                },\n                ...V1_V2_SHARED\n            },\n            version: 1\n        }\n    ]\n};\n","import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AllowedSlots: {\n            _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']\n        },\n        BabeAuthorityWeight: 'u64',\n        BabeEpochConfiguration: {\n            c: '(u64, u64)',\n            allowedSlots: 'AllowedSlots'\n        },\n        BabeBlockWeight: 'u32',\n        BabeEquivocationProof: {\n            offender: 'AuthorityId',\n            slotNumber: 'SlotNumber',\n            firstHeader: 'Header',\n            secondHeader: 'Header'\n        },\n        BabeGenesisConfiguration: {\n            slotDuration: 'u64',\n            epochLength: 'u64',\n            c: '(u64, u64)',\n            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n            randomness: 'Randomness',\n            allowedSlots: 'AllowedSlots'\n        },\n        BabeGenesisConfigurationV1: {\n            slotDuration: 'u64',\n            epochLength: 'u64',\n            c: '(u64, u64)',\n            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n            randomness: 'Randomness',\n            secondarySlots: 'bool'\n        },\n        BabeWeight: 'u64',\n        MaybeRandomness: 'Option<Randomness>',\n        MaybeVrf: 'Option<VrfData>',\n        Epoch: {\n            epochIndex: 'u64',\n            startSlot: 'Slot',\n            duration: 'u64',\n            authorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n            randomness: 'Hash', // [u8; VRF_OUTPUT_LENGTH],\n            config: 'BabeEpochConfiguration'\n        },\n        EpochAuthorship: {\n            primary: 'Vec<u64>',\n            secondary: 'Vec<u64>',\n            secondary_vrf: 'Vec<u64>'\n        },\n        NextConfigDescriptor: {\n            _enum: {\n                V0: 'Null',\n                V1: 'NextConfigDescriptorV1'\n            }\n        },\n        NextConfigDescriptorV1: {\n            c: '(u64, u64)',\n            allowedSlots: 'AllowedSlots'\n        },\n        OpaqueKeyOwnershipProof: 'Bytes',\n        Randomness: 'Hash', // [u8; RANDOMNESS_LENGTH],\n        RawBabePreDigest: {\n            _enum: {\n                Phantom: 'Null', // index starts at 1... empty slot at 0\n                Primary: 'RawBabePreDigestPrimary',\n                SecondaryPlain: 'RawBabePreDigestSecondaryPlain',\n                SecondaryVRF: 'RawBabePreDigestSecondaryVRF'\n            }\n        },\n        RawBabePreDigestPrimary: {\n            authorityIndex: 'u32', // AuthorityIndex (also in aura)\n            slotNumber: 'SlotNumber',\n            vrfOutput: 'VrfOutput',\n            vrfProof: 'VrfProof'\n        },\n        RawBabePreDigestSecondaryPlain: {\n            authorityIndex: 'u32', // AuthorityIndex (also in aura)\n            slotNumber: 'SlotNumber'\n        },\n        RawBabePreDigestSecondaryVRF: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            vrfOutput: 'VrfOutput',\n            vrfProof: 'VrfProof'\n        },\n        RawBabePreDigestTo159: {\n            _enum: {\n                Primary: 'RawBabePreDigestPrimaryTo159',\n                Secondary: 'RawBabePreDigestSecondaryTo159'\n            }\n        },\n        RawBabePreDigestPrimaryTo159: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            weight: 'BabeBlockWeight',\n            vrfOutput: 'VrfOutput',\n            vrfProof: 'VrfProof'\n        },\n        RawBabePreDigestSecondaryTo159: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            weight: 'BabeBlockWeight'\n        },\n        // a cross old/new compatible version of the digest, that is _only_ useful\n        // for partial parsing and extraction of the author. This assumes that all\n        // entries has the authorityIndex in the first position - and that it is all\n        // we are interested in\n        RawBabePreDigestCompat: {\n            _enum: {\n                Zero: 'u32',\n                One: 'u32',\n                Two: 'u32',\n                Three: 'u32'\n            }\n        },\n        SlotNumber: 'u64',\n        VrfData: '[u8; 32]',\n        VrfOutput: '[u8; 32]',\n        VrfProof: '[u8; 64]'\n    }\n};\n","export const rpc = {\n    epochAuthorship: {\n        description: 'Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore',\n        isUnsafe: true,\n        params: [],\n        type: 'HashMap<AuthorityId, EpochAuthorship>'\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        AccountData: {\n            free: 'Balance',\n            reserved: 'Balance',\n            miscFrozen: 'Balance',\n            feeFrozen: 'Balance'\n        },\n        BalanceLockTo212: {\n            id: 'LockIdentifier',\n            amount: 'Balance',\n            until: 'BlockNumber',\n            reasons: 'WithdrawReasons'\n        },\n        BalanceLock: {\n            id: 'LockIdentifier',\n            amount: 'Balance',\n            reasons: 'Reasons'\n        },\n        BalanceStatus: {\n            _enum: ['Free', 'Reserved']\n        },\n        Reasons: {\n            _enum: ['Fee', 'Misc', 'All']\n        },\n        ReserveData: {\n            id: 'ReserveIdentifier',\n            amount: 'Balance'\n        },\n        ReserveIdentifier: '[u8; 8]',\n        VestingSchedule: {\n            offset: 'Balance',\n            perBlock: 'Balance',\n            startingBlock: 'BlockNumber'\n        },\n        WithdrawReasons: {\n            _set: {\n                TransactionPayment: 1,\n                Transfer: 2,\n                Reserve: 4,\n                Fee: 8,\n                Tip: 16\n            }\n        }\n    }\n};\n","const BEEFY_V1_V3 = {\n    beefy_genesis: {\n        description: 'Return the block number where BEEFY consensus is enabled/started',\n        params: [],\n        type: 'Option<BlockNumber>'\n    },\n    generate_key_ownership_proof: {\n        description: 'Generates a proof of key ownership for the given authority in the given set.',\n        params: [\n            {\n                name: 'setId',\n                type: 'ValidatorSetId'\n            },\n            {\n                name: 'authorityId',\n                type: 'AuthorityId'\n            }\n        ],\n        type: 'Option<OpaqueKeyOwnershipProof>'\n    },\n    submit_report_equivocation_unsigned_extrinsic: {\n        description: 'Submits an unsigned extrinsic to report an equivocation.',\n        params: [\n            {\n                name: 'equivocationProof',\n                type: 'BeefyEquivocationProof'\n            },\n            {\n                name: 'keyOwnerProof',\n                type: 'OpaqueKeyOwnershipProof'\n            }\n        ],\n        type: 'Option<Null>'\n    },\n    validator_set: {\n        description: 'Return the current active BEEFY validator set',\n        params: [],\n        type: 'Option<ValidatorSet>'\n    }\n};\nconst BEEFY_MMR_V1 = {\n    authority_set_proof: {\n        description: 'Return the currently active BEEFY authority set proof.',\n        params: [],\n        type: 'BeefyAuthoritySet'\n    },\n    next_authority_set_proof: {\n        description: 'Return the next/queued BEEFY authority set proof.',\n        params: [],\n        type: 'BeefyNextAuthoritySet'\n    }\n};\nexport const runtime = {\n    BeefyApi: [\n        {\n            methods: BEEFY_V1_V3,\n            version: 3\n        },\n        {\n            methods: BEEFY_V1_V3,\n            version: 2\n        },\n        {\n            methods: BEEFY_V1_V3,\n            version: 1\n        }\n    ],\n    BeefyMmrApi: [\n        {\n            methods: BEEFY_MMR_V1,\n            version: 1\n        }\n    ]\n};\n","import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        BeefyAuthoritySet: {\n            id: 'u64',\n            len: 'u32',\n            root: 'H256'\n        },\n        BeefyCommitment: {\n            payload: 'BeefyPayload',\n            blockNumber: 'BlockNumber',\n            validatorSetId: 'ValidatorSetId'\n        },\n        BeefyId: '[u8; 33]',\n        BeefyEquivocationProof: {\n            first: 'BeefyVoteMessage',\n            second: 'BeefyVoteMessage'\n        },\n        BeefyCompactSignedCommitment: {\n            commitment: 'BeefyCommitment',\n            signaturesFrom: 'Vec<u8>',\n            validatorSetLen: 'u32',\n            signaturesCompact: 'Vec<EcdsaSignature>'\n        },\n        BeefySignedCommitment: {\n            commitment: 'BeefyCommitment',\n            signatures: 'Vec<Option<EcdsaSignature>>'\n        },\n        BeefyVersionedFinalityProof: {\n            _enum: {\n                V0: 'Null',\n                V1: 'BeefyCompactSignedCommitment'\n            }\n        },\n        BeefyNextAuthoritySet: {\n            id: 'u64',\n            len: 'u32',\n            root: 'H256'\n        },\n        BeefyPayload: 'Vec<(BeefyPayloadId, Bytes)>',\n        BeefyPayloadId: '[u8;2]',\n        BeefyVoteMessage: {\n            commitment: 'BeefyCommitment',\n            id: 'AuthorityId',\n            signature: 'Signature'\n        },\n        MmrRootHash: 'H256',\n        ValidatorSetId: 'u64',\n        ValidatorSet: {\n            validators: 'Vec<AuthorityId>',\n            id: 'ValidatorSetId'\n        }\n    }\n};\n","export const rpc = {\n    getFinalizedHead: {\n        description: 'Returns hash of the latest BEEFY finalized block as seen by this client.',\n        params: [],\n        type: 'H256'\n    },\n    subscribeJustifications: {\n        description: 'Returns the block most recently finalized by BEEFY, alongside its justification.',\n        params: [],\n        pubsub: [\n            'justifications',\n            'subscribeJustifications',\n            'unsubscribeJustifications'\n        ],\n        type: 'BeefyVersionedFinalityProof'\n    }\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        BenchmarkBatch: {\n            pallet: 'Text',\n            instance: 'Text',\n            benchmark: 'Text',\n            results: 'Vec<BenchmarkResult>'\n        },\n        BenchmarkConfig: {\n            pallet: 'Bytes',\n            benchmark: 'Bytes',\n            selectedComponents: 'Vec<(BenchmarkParameter, u32)>',\n            verify: 'bool',\n            internalRepeats: 'u32'\n        },\n        BenchmarkList: {\n            pallet: 'Bytes',\n            instance: 'Bytes',\n            benchmarks: 'Vec<BenchmarkMetadata>'\n        },\n        BenchmarkMetadata: {\n            name: 'Bytes',\n            components: 'Vec<(BenchmarkParameter, u32, u32)>'\n        },\n        BenchmarkParameter: {\n            _enum: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n        },\n        BenchmarkResult: {\n            components: 'Vec<(BenchmarkParameter, u32)>',\n            extrinsicTime: 'u128',\n            storageRootTime: 'u128',\n            reads: 'u32',\n            repeatReads: 'u32',\n            writes: 'u32',\n            repeatWrites: 'u32',\n            proofSize: 'u32',\n            benchKeys: 'Vec<(Vec<u8>, u32, u32, bool)>'\n        }\n    }\n};\n","export const runtime = {\n    Benchmark: [\n        {\n            methods: {\n                benchmark_metadata: {\n                    description: 'Get the benchmark metadata available for this runtime.',\n                    params: [\n                        {\n                            name: 'extra',\n                            type: 'bool'\n                        }\n                    ],\n                    type: '(Vec<BenchmarkList>, Vec<StorageInfo>)'\n                },\n                dispatch_benchmark: {\n                    description: 'Dispatch the given benchmark.',\n                    params: [\n                        {\n                            name: 'config',\n                            type: 'BenchmarkConfig'\n                        }\n                    ],\n                    type: 'Result<Vec<BenchmarkBatch>, Text>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","const BB_V2_TO_V4 = {\n    // this was removed after V4\n    random_seed: {\n        description: 'Generate a random seed.',\n        params: [],\n        type: 'Hash'\n    }\n};\nconst BB_V2_TO_V5 = {\n    apply_extrinsic: {\n        description: 'Apply the given extrinsic.',\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Extrinsic'\n            }\n        ],\n        type: 'ApplyExtrinsicResultPre6'\n    }\n};\nconst BB_V2_TO_V6 = {\n    check_inherents: {\n        description: 'Check that the inherents are valid.',\n        params: [\n            {\n                name: 'block',\n                type: 'Block'\n            },\n            {\n                name: 'data',\n                type: 'InherentData'\n            }\n        ],\n        type: 'CheckInherentsResult'\n    },\n    inherent_extrinsics: {\n        description: 'Generate inherent extrinsics.',\n        params: [\n            {\n                name: 'inherent',\n                type: 'InherentData'\n            }\n        ],\n        type: 'Vec<Extrinsic>'\n    }\n};\nconst BB_V3_TO_V6 = {\n    // renamed in v3 from finalize_block\n    finalize_block: {\n        description: 'Finish the current block.',\n        params: [],\n        type: 'Header'\n    }\n};\nexport const runtime = {\n    BlockBuilder: [\n        {\n            methods: {\n                apply_extrinsic: {\n                    description: 'Apply the given extrinsic.',\n                    params: [\n                        {\n                            name: 'extrinsic',\n                            type: 'Extrinsic'\n                        }\n                    ],\n                    type: 'ApplyExtrinsicResult'\n                },\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 6\n        },\n        {\n            methods: {\n                // apply_extrinsic result changed in 6\n                ...BB_V2_TO_V5,\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 5\n        },\n        {\n            methods: {\n                // random_seed removed\n                ...BB_V2_TO_V4,\n                ...BB_V2_TO_V5,\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 4\n        },\n        {\n            methods: {\n                // finalize_block renamed\n                ...BB_V2_TO_V4,\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 3\n        },\n        {\n            methods: {\n                finalise_block: {\n                    description: 'Finish the current block.',\n                    params: [],\n                    type: 'Header'\n                },\n                ...BB_V2_TO_V4,\n                ...BB_V2_TO_V6\n            },\n            version: 2\n        }\n    ]\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        CheckInherentsResult: {\n            okay: 'bool',\n            fatalError: 'bool',\n            errors: 'InherentData'\n        },\n        InherentData: {\n            data: 'BTreeMap<InherentIdentifier, Bytes>'\n        },\n        InherentIdentifier: '[u8; 8]'\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        CollectiveOrigin: {\n            _enum: {\n                Members: '(MemberCount, MemberCount)',\n                Member: 'AccountId'\n            }\n        },\n        MemberCount: 'u32',\n        ProposalIndex: 'u32',\n        VotesTo230: {\n            index: 'ProposalIndex',\n            threshold: 'MemberCount',\n            ayes: 'Vec<AccountId>',\n            nays: 'Vec<AccountId>'\n        },\n        Votes: {\n            index: 'ProposalIndex',\n            threshold: 'MemberCount',\n            ayes: 'Vec<AccountId>',\n            nays: 'Vec<AccountId>',\n            end: 'BlockNumber'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        AuthorityId: 'AccountId',\n        RawVRFOutput: '[u8; 32]'\n    }\n};\n","const SHARED_V1_V2 = {\n    get_storage: {\n        description: 'Query a given storage key in a given contract.',\n        params: [\n            {\n                name: 'address',\n                type: 'AccountId'\n            },\n            {\n                name: 'key',\n                type: 'Bytes'\n            }\n        ],\n        type: 'Option<Bytes>'\n    },\n    upload_code: {\n        description: 'Upload new code without instantiating a contract from it.',\n        params: [\n            {\n                name: 'origin',\n                type: 'AccountId'\n            },\n            {\n                name: 'code',\n                type: 'Bytes'\n            },\n            {\n                name: 'storageDepositLimit',\n                type: 'Option<Balance>'\n            }\n        ],\n        type: 'CodeUploadResult'\n    }\n};\nexport const runtime = {\n    ContractsApi: [\n        {\n            methods: {\n                call: {\n                    description: 'Perform a call from a specified account to a given contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'dest',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'Option<WeightV2>'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'inputData',\n                            type: 'Vec<u8>'\n                        }\n                    ],\n                    type: 'ContractExecResult'\n                },\n                instantiate: {\n                    description: 'Instantiate a new contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'Option<WeightV2>'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'code',\n                            type: 'CodeSource'\n                        },\n                        {\n                            name: 'data',\n                            type: 'Bytes'\n                        },\n                        {\n                            name: 'salt',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'ContractInstantiateResult'\n                },\n                ...SHARED_V1_V2\n            },\n            version: 2\n        },\n        {\n            methods: {\n                call: {\n                    description: 'Perform a call from a specified account to a given contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'dest',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'u64'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'inputData',\n                            type: 'Vec<u8>'\n                        }\n                    ],\n                    type: 'ContractExecResultU64'\n                },\n                instantiate: {\n                    description: 'Instantiate a new contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'u64'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'code',\n                            type: 'CodeSource'\n                        },\n                        {\n                            name: 'data',\n                            type: 'Bytes'\n                        },\n                        {\n                            name: 'salt',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'ContractInstantiateResultU64'\n                },\n                ...SHARED_V1_V2\n            },\n            version: 1\n        }\n    ]\n};\n","import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AliveContractInfo: {\n            trieId: 'TrieId',\n            storageSize: 'u32',\n            pairCount: 'u32',\n            codeHash: 'CodeHash',\n            rentAllowance: 'Balance',\n            rentPaid: 'Balance',\n            deductBlock: 'BlockNumber',\n            lastWrite: 'Option<BlockNumber>',\n            _reserved: 'Option<Null>'\n        },\n        CodeHash: 'Hash',\n        CodeSource: {\n            _enum: {\n                Upload: 'Bytes',\n                Existing: 'Hash'\n            }\n        },\n        CodeUploadRequest: {\n            origin: 'AccountId',\n            code: 'Bytes',\n            storageDepositLimit: 'Option<Balance>'\n        },\n        CodeUploadResult: 'Result<CodeUploadResultValue, DispatchError>',\n        CodeUploadResultValue: {\n            codeHash: 'CodeHash',\n            deposit: 'Balance'\n        },\n        ContractCallRequest: {\n            origin: 'AccountId',\n            dest: 'AccountId',\n            value: 'Balance',\n            gasLimit: 'u64',\n            storageDepositLimit: 'Option<Balance>',\n            inputData: 'Bytes'\n        },\n        ContractExecResultSuccessTo255: {\n            status: 'u8',\n            data: 'Raw'\n        },\n        ContractExecResultTo255: {\n            _enum: {\n                Success: 'ContractExecResultSuccessTo255',\n                Error: 'Null'\n            }\n        },\n        ContractExecResultSuccessTo260: {\n            flags: 'ContractReturnFlags',\n            data: 'Bytes',\n            gasConsumed: 'u64'\n        },\n        ContractExecResultTo260: {\n            _enum: {\n                Success: 'ContractExecResultSuccessTo260',\n                Error: 'Null'\n            }\n        },\n        ContractExecResultOk: {\n            flags: 'ContractReturnFlags',\n            data: 'Bytes'\n        },\n        ContractExecResultResult: 'Result<ContractExecResultOk, DispatchError>',\n        ContractExecResultTo267: {\n            gasConsumed: 'u64',\n            debugMessage: 'Text',\n            result: 'ContractExecResultResult'\n        },\n        ContractExecResult: {\n            gasConsumed: 'Weight',\n            gasRequired: 'Weight',\n            storageDeposit: 'StorageDeposit',\n            debugMessage: 'Text',\n            result: 'ContractExecResultResult'\n        },\n        ContractExecResultU64: {\n            gasConsumed: 'u64',\n            gasRequired: 'u64',\n            storageDeposit: 'StorageDeposit',\n            debugMessage: 'Text',\n            result: 'ContractExecResultResult'\n        },\n        ContractInfo: {\n            _enum: {\n                Alive: 'AliveContractInfo',\n                Tombstone: 'TombstoneContractInfo'\n            }\n        },\n        ContractCallFlags: {\n            _set: {\n                _bitLength: 32,\n                ForwardInput: 1,\n                CloneInput: 2,\n                TailCall: 4,\n                AllowReentry: 8\n            }\n        },\n        ContractReturnFlags: {\n            _set: {\n                _bitLength: 32,\n                Revert: 1\n            }\n        },\n        ContractStorageKey: '[u8; 32]',\n        DeletedContract: {\n            pairCount: 'u32',\n            trieId: 'TrieId'\n        },\n        ExecReturnValue: {\n            flags: 'ContractReturnFlags',\n            data: 'Bytes'\n        },\n        Gas: 'u64',\n        HostFnWeightsTo264: {\n            caller: 'Weight',\n            address: 'Weight',\n            gasLeft: 'Weight',\n            balance: 'Weight',\n            valueTransferred: 'Weight',\n            minimumBalance: 'Weight',\n            tombstoneDeposit: 'Weight',\n            rentAllowance: 'Weight',\n            blockNumber: 'Weight',\n            now: 'Weight',\n            weightToFee: 'Weight',\n            gas: 'Weight',\n            input: 'Weight',\n            inputPerByte: 'Weight',\n            return: 'Weight',\n            returnPerByte: 'Weight',\n            terminate: 'Weight',\n            restoreTo: 'Weight',\n            restoreToPerDelta: 'Weight',\n            random: 'Weight',\n            depositEvent: 'Weight',\n            depositEventPerTopic: 'Weight',\n            depositEventPerByte: 'Weight',\n            setRentAllowance: 'Weight',\n            setStorage: 'Weight',\n            setStoragePerByte: 'Weight',\n            clearStorage: 'Weight',\n            getStorage: 'Weight',\n            getStoragePerByte: 'Weight',\n            transfer: 'Weight',\n            call: 'Weight',\n            callTransferSurcharge: 'Weight',\n            callPerInputByte: 'Weight',\n            callPerOutputByte: 'Weight',\n            instantiate: 'Weight',\n            instantiatePerInputByte: 'Weight',\n            instantiatePerOutputByte: 'Weight',\n            hashSha2256: 'Weight',\n            hashSha2256PerByte: 'Weight',\n            hashKeccak256: 'Weight',\n            hashKeccak256PerByte: 'Weight',\n            hashBlake2256: 'Weight',\n            hashBlake2256PerByte: 'Weight',\n            hashBlake2128: 'Weight',\n            hashBlake2128PerByte: 'Weight'\n        },\n        HostFnWeights: {\n            caller: 'Weight',\n            address: 'Weight',\n            gasLeft: 'Weight',\n            balance: 'Weight',\n            valueTransferred: 'Weight',\n            minimumBalance: 'Weight',\n            tombstoneDeposit: 'Weight',\n            rentAllowance: 'Weight',\n            blockNumber: 'Weight',\n            now: 'Weight',\n            weightToFee: 'Weight',\n            gas: 'Weight',\n            input: 'Weight',\n            inputPerByte: 'Weight',\n            return: 'Weight',\n            returnPerByte: 'Weight',\n            terminate: 'Weight',\n            terminatePerCodeByte: 'Weight',\n            restoreTo: 'Weight',\n            restoreToPerCallerCodeByte: 'Weight',\n            restoreToPerTombstoneCodeByte: 'Weight',\n            restoreToPerDelta: 'Weight',\n            random: 'Weight',\n            depositEvent: 'Weight',\n            depositEventPerTopic: 'Weight',\n            depositEventPerByte: 'Weight',\n            setRentAllowance: 'Weight',\n            setStorage: 'Weight',\n            setStoragePerByte: 'Weight',\n            clearStorage: 'Weight',\n            getStorage: 'Weight',\n            getStoragePerByte: 'Weight',\n            transfer: 'Weight',\n            call: 'Weight',\n            callPerCodeByte: 'Weight',\n            callTransferSurcharge: 'Weight',\n            callPerInputByte: 'Weight',\n            callPerOutputByte: 'Weight',\n            instantiate: 'Weight',\n            instantiatePerCodeByte: 'Weight',\n            instantiatePerInputByte: 'Weight',\n            instantiatePerOutputByte: 'Weight',\n            instantiatePerSaltByte: 'Weight',\n            hashSha2256: 'Weight',\n            hashSha2256PerByte: 'Weight',\n            hashKeccak256: 'Weight',\n            hashKeccak256PerByte: 'Weight',\n            hashBlake2256: 'Weight',\n            hashBlake2256PerByte: 'Weight',\n            hashBlake2128: 'Weight',\n            hashBlake2128PerByte: 'Weight',\n            rentParams: 'Weight'\n        },\n        InstantiateRequestV1: {\n            origin: 'AccountId',\n            value: 'Balance',\n            gasLimit: 'Gas',\n            code: 'Bytes',\n            data: 'Bytes',\n            salt: 'Bytes'\n        },\n        InstantiateRequestV2: {\n            _fallback: 'InstantiateRequestV1',\n            origin: 'AccountId',\n            value: 'Balance',\n            gasLimit: 'Gas',\n            storageDepositLimit: 'Option<Balance>',\n            code: 'Bytes',\n            data: 'Bytes',\n            salt: 'Bytes'\n        },\n        InstantiateRequest: {\n            _fallback: 'InstantiateRequestV2',\n            origin: 'AccountId',\n            value: 'Balance',\n            gasLimit: 'Gas',\n            storageDepositLimit: 'Option<Balance>',\n            code: 'CodeSource',\n            data: 'Bytes',\n            salt: 'Bytes'\n        },\n        ContractInstantiateResultTo267: 'Result<InstantiateReturnValueTo267, Null>',\n        ContractInstantiateResultTo299: 'Result<InstantiateReturnValueOk, Null>',\n        ContractInstantiateResult: {\n            gasConsumed: 'WeightV2',\n            gasRequired: 'WeightV2',\n            storageDeposit: 'StorageDeposit',\n            debugMessage: 'Text',\n            result: 'InstantiateReturnValue'\n        },\n        ContractInstantiateResultU64: {\n            // only this one can fail, the current version (above) _should_ be correctly\n            // versioned now, aka no more deprecated RPCs involved, only runtime calls\n            _fallback: 'ContractInstantiateResultTo299',\n            gasConsumed: 'u64',\n            gasRequired: 'u64',\n            storageDeposit: 'StorageDeposit',\n            debugMessage: 'Text',\n            result: 'InstantiateReturnValue'\n        },\n        InstantiateReturnValueTo267: {\n            result: 'ExecReturnValue',\n            accountId: 'AccountId',\n            rentProjection: 'Option<RentProjection>'\n        },\n        InstantiateReturnValueOk: {\n            result: 'ExecReturnValue',\n            accountId: 'AccountId'\n        },\n        InstantiateReturnValue: 'Result<InstantiateReturnValueOk, DispatchError>',\n        InstructionWeights: {\n            i64const: 'u32',\n            i64load: 'u32',\n            i64store: 'u32',\n            select: 'u32',\n            rIf: 'u32',\n            br: 'u32',\n            brIf: 'u32',\n            brIable: 'u32',\n            brIablePerEntry: 'u32',\n            call: 'u32',\n            callIndirect: 'u32',\n            callIndirectPerParam: 'u32',\n            localGet: 'u32',\n            localSet: 'u32',\n            local_tee: 'u32',\n            globalGet: 'u32',\n            globalSet: 'u32',\n            memoryCurrent: 'u32',\n            memoryGrow: 'u32',\n            i64clz: 'u32',\n            i64ctz: 'u32',\n            i64popcnt: 'u32',\n            i64eqz: 'u32',\n            i64extendsi32: 'u32',\n            i64extendui32: 'u32',\n            i32wrapi64: 'u32',\n            i64eq: 'u32',\n            i64ne: 'u32',\n            i64lts: 'u32',\n            i64ltu: 'u32',\n            i64gts: 'u32',\n            i64gtu: 'u32',\n            i64les: 'u32',\n            i64leu: 'u32',\n            i64ges: 'u32',\n            i64geu: 'u32',\n            i64add: 'u32',\n            i64sub: 'u32',\n            i64mul: 'u32',\n            i64divs: 'u32',\n            i64divu: 'u32',\n            i64rems: 'u32',\n            i64remu: 'u32',\n            i64and: 'u32',\n            i64or: 'u32',\n            i64xor: 'u32',\n            i64shl: 'u32',\n            i64shrs: 'u32',\n            i64shru: 'u32',\n            i64rotl: 'u32',\n            i64rotr: 'u32'\n        },\n        LimitsTo264: {\n            eventTopics: 'u32',\n            stackHeight: 'u32',\n            globals: 'u32',\n            parameters: 'u32',\n            memoryPages: 'u32',\n            tableSize: 'u32',\n            brTableSize: 'u32',\n            subjectLen: 'u32',\n            codeSize: 'u32'\n        },\n        Limits: {\n            eventTopics: 'u32',\n            stackHeight: 'u32',\n            globals: 'u32',\n            parameters: 'u32',\n            memoryPages: 'u32',\n            tableSize: 'u32',\n            brTableSize: 'u32',\n            subjectLen: 'u32'\n        },\n        PrefabWasmModule: {\n            scheduleVersion: 'Compact<u32>',\n            initial: 'Compact<u32>',\n            maximum: 'Compact<u32>',\n            refcount: 'Compact<u64>',\n            _reserved: 'Option<Null>',\n            code: 'Bytes',\n            originalCodeLen: 'u32'\n        },\n        RentProjection: {\n            _enum: {\n                EvictionAt: 'BlockNumber',\n                NoEviction: 'Null'\n            }\n        },\n        ScheduleTo212: {\n            version: 'u32',\n            putCodePerByteCost: 'Gas',\n            growMemCost: 'Gas',\n            regularOpCost: 'Gas',\n            returnDataPerByteCost: 'Gas',\n            eventDataPerByteCost: 'Gas',\n            eventPerTopicCost: 'Gas',\n            eventBaseCost: 'Gas',\n            sandboxDataReadCost: 'Gas',\n            sandboxDataWriteCost: 'Gas',\n            maxEventTopics: 'u32',\n            maxStackHeight: 'u32',\n            maxMemoryPages: 'u32',\n            enablePrintln: 'bool',\n            maxSubjectLen: 'u32'\n        },\n        ScheduleTo258: {\n            version: 'u32',\n            putCodePerByteCost: 'Gas',\n            growMemCost: 'Gas',\n            regularOpCost: 'Gas',\n            returnDataPerByteCost: 'Gas',\n            eventDataPerByteCost: 'Gas',\n            eventPerTopicCost: 'Gas',\n            eventBaseCost: 'Gas',\n            sandboxDataReadCost: 'Gas',\n            sandboxDataWriteCost: 'Gas',\n            transferCost: 'Gas',\n            maxEventTopics: 'u32',\n            maxStackHeight: 'u32',\n            maxMemoryPages: 'u32',\n            enablePrintln: 'bool',\n            maxSubjectLen: 'u32'\n        },\n        ScheduleTo264: {\n            version: 'u32',\n            enablePrintln: 'bool',\n            limits: 'LimitsTo264',\n            instructionWeights: 'InstructionWeights',\n            hostFnWeights: 'HostFnWeightsTo264'\n        },\n        Schedule: {\n            version: 'u32',\n            enablePrintln: 'bool',\n            limits: 'Limits',\n            instructionWeights: 'InstructionWeights',\n            hostFnWeights: 'HostFnWeights'\n        },\n        SeedOf: 'Hash',\n        StorageDeposit: {\n            _enum: {\n                Refund: 'Balance',\n                Charge: 'Balance'\n            }\n        },\n        TombstoneContractInfo: 'Hash',\n        TrieId: 'Bytes'\n    }\n};\n","export const rpc = {\n    call: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.call` instead',\n        description: 'Executes a call to a contract',\n        params: [\n            {\n                name: 'callRequest',\n                type: 'ContractCallRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ContractExecResult'\n    },\n    getStorage: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.getStorage` instead',\n        description: 'Returns the value under a specified storage key in a contract',\n        params: [\n            {\n                name: 'address',\n                type: 'AccountId'\n            },\n            {\n                name: 'key',\n                type: 'H256'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Option<Bytes>'\n    },\n    instantiate: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.instantiate` instead',\n        description: 'Instantiate a new contract',\n        params: [\n            {\n                name: 'request',\n                type: 'InstantiateRequestV1'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ContractInstantiateResult'\n    },\n    rentProjection: {\n        deprecated: 'Not available in newer versions of the contracts interfaces',\n        description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n        params: [\n            {\n                name: 'address',\n                type: 'AccountId'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Option<BlockNumber>'\n    },\n    uploadCode: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.uploadCode` instead',\n        description: 'Upload new code without instantiating a contract from it',\n        // The RPC here is terribly misnamed - somebody forgot how the RPCs\n        // are actually done, ie. <module>_<camelCasedMethod>\n        endpoint: 'contracts_upload_code',\n        params: [\n            {\n                name: 'uploadRequest',\n                type: 'CodeUploadRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'CodeUploadResult'\n    }\n};\n","export const AllConvictions = [\n    // 0.1x votes, unlocked.\n    'None',\n    // 1x votes, locked for an enactment period following a successful vote.\n    'Locked1x',\n    // 2x votes, locked for 2x enactment periods following a successful vote.\n    'Locked2x',\n    // 3x votes, locked for 4x...\n    'Locked3x',\n    // 4x votes, locked for 8x...\n    'Locked4x',\n    // 5x votes, locked for 16x...\n    'Locked5x',\n    // 6x votes, locked for 32x...\n    'Locked6x'\n];\nexport default {\n    rpc: {},\n    types: {\n        AccountVote: {\n            _enum: {\n                Standard: 'AccountVoteStandard',\n                Split: 'AccountVoteSplit'\n            }\n        },\n        AccountVoteSplit: {\n            aye: 'Balance',\n            nay: 'Balance'\n        },\n        AccountVoteStandard: {\n            vote: 'Vote',\n            balance: 'Balance'\n        },\n        Conviction: {\n            _enum: AllConvictions\n        },\n        Delegations: {\n            votes: 'Balance',\n            capital: 'Balance'\n        },\n        PreimageStatus: {\n            _enum: {\n                Missing: 'BlockNumber',\n                Available: 'PreimageStatusAvailable'\n            }\n        },\n        PreimageStatusAvailable: {\n            data: 'Bytes',\n            provider: 'AccountId',\n            deposit: 'Balance',\n            since: 'BlockNumber',\n            expiry: 'Option<BlockNumber>'\n        },\n        PriorLock: '(BlockNumber, Balance)',\n        PropIndex: 'u32',\n        Proposal: 'Call',\n        ProxyState: {\n            _enum: {\n                Open: 'AccountId',\n                Active: 'AccountId'\n            }\n        },\n        ReferendumIndex: 'u32',\n        ReferendumInfoTo239: {\n            end: 'BlockNumber',\n            proposalHash: 'Hash',\n            threshold: 'VoteThreshold',\n            delay: 'BlockNumber'\n        },\n        ReferendumInfo: {\n            _enum: {\n                Ongoing: 'ReferendumStatus',\n                Finished: 'ReferendumInfoFinished'\n            }\n        },\n        ReferendumInfoFinished: {\n            approved: 'bool',\n            end: 'BlockNumber'\n        },\n        ReferendumStatus: {\n            end: 'BlockNumber',\n            proposalHash: 'Hash',\n            threshold: 'VoteThreshold',\n            delay: 'BlockNumber',\n            tally: 'Tally'\n        },\n        Tally: {\n            ayes: 'Balance',\n            nays: 'Balance',\n            turnout: 'Balance'\n        },\n        Voting: {\n            _enum: {\n                Direct: 'VotingDirect',\n                Delegating: 'VotingDelegating'\n            }\n        },\n        VotingDirect: {\n            votes: 'Vec<VotingDirectVote>',\n            delegations: 'Delegations',\n            prior: 'PriorLock'\n        },\n        VotingDirectVote: '(ReferendumIndex, AccountVote)',\n        VotingDelegating: {\n            balance: 'Balance',\n            target: 'AccountId',\n            conviction: 'Conviction',\n            delegations: 'Delegations',\n            prior: 'PriorLock'\n        }\n    }\n};\n","import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        BlockStats: {\n            witnessLen: 'u64',\n            witnessCompactLen: 'u64',\n            blockLen: 'u64',\n            blockNumExtrinsics: 'u64'\n        }\n    }\n};\n","export const rpc = {\n    getBlockStats: {\n        description: 'Reexecute the specified `block_hash` and gather statistics while doing so',\n        isUnsafe: true,\n        params: [\n            {\n                isHistoric: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<BlockStats>'\n    }\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n","export const runtime = {\n    AuthorityDiscoveryApi: [\n        {\n            methods: {\n                authorities: {\n                    description: 'Retrieve authority identifiers of the current and next authority set.',\n                    params: [],\n                    type: 'Vec<AuthorityId>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        ApprovalFlag: 'u32',\n        DefunctVoter: {\n            who: 'AccountId',\n            voteCount: 'Compact<u32>',\n            candidateCount: 'Compact<u32>'\n        },\n        Renouncing: {\n            _enum: {\n                Member: 'Null',\n                RunnerUp: 'Null',\n                Candidate: 'Compact<u32>'\n            }\n        },\n        SetIndex: 'u32',\n        Vote: 'GenericVote',\n        VoteIndex: 'u32',\n        VoterInfo: {\n            lastActive: 'VoteIndex',\n            lastWin: 'VoteIndex',\n            pot: 'Balance',\n            stake: 'Balance'\n        },\n        VoteThreshold: {\n            _enum: [\n                'Super Majority Approve',\n                'Super Majority Against',\n                'Simple Majority'\n            ]\n        }\n    }\n};\n","import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        CreatedBlock: {\n            _alias: {\n                blockHash: 'hash'\n            },\n            blockHash: 'BlockHash',\n            aux: 'ImportedAux'\n        },\n        ImportedAux: {\n            headerOnly: 'bool',\n            clearJustificationRequests: 'bool',\n            needsJustification: 'bool',\n            badJustification: 'bool',\n            needsFinalityProof: 'bool',\n            isNewBest: 'bool'\n        }\n    }\n};\n","export const rpc = {\n    createBlock: {\n        description: 'Instructs the manual-seal authorship task to create a new block',\n        params: [\n            {\n                name: 'createEmpty',\n                type: 'bool'\n            },\n            {\n                name: 'finalize',\n                type: 'bool'\n            },\n            {\n                isOptional: true,\n                name: 'parentHash',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'CreatedBlock'\n    },\n    finalizeBlock: {\n        description: 'Instructs the manual-seal authorship task to finalize a block',\n        params: [\n            {\n                name: 'hash',\n                type: 'BlockHash'\n            },\n            {\n                isOptional: true,\n                name: 'justification',\n                type: 'Justification'\n            }\n        ],\n        type: 'bool'\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        EvmAccount: {\n            nonce: 'u256',\n            balance: 'u256'\n        },\n        EvmCallInfo: {\n            exitReason: 'ExitReason',\n            value: 'Bytes',\n            usedGas: 'U256',\n            logs: 'Vec<EvmLog>'\n        },\n        EvmCreateInfo: {\n            exitReason: 'ExitReason',\n            value: 'H160',\n            usedGas: 'U256',\n            logs: 'Vec<EvmLog>'\n        },\n        EvmCallInfoV2: {\n            exitReason: 'ExitReason',\n            value: 'Bytes',\n            usedGas: 'U256',\n            weightInfo: 'Option<EvmWeightInfo>',\n            logs: 'Vec<EvmLog>'\n        },\n        EvmCreateInfoV2: {\n            exitReason: 'ExitReason',\n            value: 'H160',\n            usedGas: 'U256',\n            weightInfo: 'Option<EvmWeightInfo>',\n            logs: 'Vec<EvmLog>'\n        },\n        EvmLog: {\n            address: 'H160',\n            topics: 'Vec<H256>',\n            data: 'Bytes'\n        },\n        EvmVicinity: {\n            gasPrice: 'u256',\n            origin: 'H160'\n        },\n        EvmWeightInfo: {\n            refTimeLimit: 'Option<u64>',\n            proofSizeLimit: 'Option<u64>',\n            refTimeUsage: 'Option<u64>',\n            proofSizeUsage: 'Option<u64>'\n        },\n        ExitError: {\n            _enum: {\n                StackUnderflow: 'Null',\n                StackOverflow: 'Null',\n                InvalidJump: 'Null',\n                InvalidRange: 'Null',\n                DesignatedInvalid: 'Null',\n                CallTooDeep: 'Null',\n                CreateCollision: 'Null',\n                CreateContractLimit: 'Null',\n                OutOfOffset: 'Null',\n                OutOfGas: 'Null',\n                OutOfFund: 'Null',\n                PCUnderflow: 'Null',\n                CreateEmpty: 'Null',\n                Other: 'Text'\n            }\n        },\n        ExitFatal: {\n            _enum: {\n                NotSupported: 'Null',\n                UnhandledInterrupt: 'Null',\n                CallErrorAsFatal: 'ExitError',\n                Other: 'Text'\n            }\n        },\n        ExitReason: {\n            _enum: {\n                Succeed: 'ExitSucceed',\n                Error: 'ExitError',\n                Revert: 'ExitRevert',\n                Fatal: 'ExitFatal'\n            }\n        },\n        ExitRevert: {\n            _enum: ['Reverted']\n        },\n        ExitSucceed: {\n            _enum: ['Stopped', 'Returned', 'Suicided']\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        Extrinsic: 'GenericExtrinsic',\n        ExtrinsicEra: 'GenericExtrinsicEra',\n        ExtrinsicPayload: 'GenericExtrinsicPayload',\n        ExtrinsicSignature: 'MultiSignature',\n        ExtrinsicV4: 'GenericExtrinsicV4',\n        ExtrinsicPayloadV4: 'GenericExtrinsicPayloadV4',\n        ExtrinsicSignatureV4: 'GenericExtrinsicSignatureV4',\n        ExtrinsicUnknown: 'GenericExtrinsicUnknown',\n        ExtrinsicPayloadUnknown: 'GenericExtrinsicPayloadUnknown',\n        // eras\n        Era: 'ExtrinsicEra',\n        ImmortalEra: 'GenericImmortalEra',\n        MortalEra: 'GenericMortalEra',\n        // signatures & signer\n        AnySignature: 'H512',\n        MultiSignature: {\n            _enum: {\n                Ed25519: 'Ed25519Signature',\n                Sr25519: 'Sr25519Signature',\n                Ecdsa: 'EcdsaSignature'\n            }\n        },\n        Signature: 'H512',\n        SignerPayload: 'GenericSignerPayload',\n        EcdsaSignature: '[u8; 65]',\n        Ed25519Signature: 'H512',\n        Sr25519Signature: 'H512'\n    }\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        FungiblesAccessError: {\n            _enum: ['AssetIdConversionFailed', 'AmountToBalanceConversionFailed']\n        }\n    }\n};\n","export const runtime = {\n    FungiblesApi: [\n        {\n            methods: {\n                query_account_balances: {\n                    description: 'Returns the list of all `MultiAsset` that an `AccountId` has',\n                    params: [\n                        {\n                            name: 'account',\n                            type: 'AccountId'\n                        }\n                    ],\n                    type: 'Result<Vec<XcmV3MultiAsset>, FungiblesAccessError>'\n                }\n            },\n            version: 1\n        },\n        {\n            methods: {\n                query_account_balances: {\n                    description: 'Returns the list of all `MultiAsset` that an `AccountId` has',\n                    params: [\n                        {\n                            name: 'account',\n                            type: 'AccountId'\n                        }\n                    ],\n                    type: 'Result<XcmVersionedMultiAssets, FungiblesAccessError>'\n                }\n            },\n            version: 2\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        AssetOptions: {\n            initalIssuance: 'Compact<Balance>',\n            permissions: 'PermissionLatest'\n        },\n        Owner: {\n            _enum: {\n                None: 'Null',\n                Address: 'AccountId'\n            }\n        },\n        PermissionsV1: {\n            update: 'Owner',\n            mint: 'Owner',\n            burn: 'Owner'\n        },\n        PermissionVersions: {\n            _enum: {\n                V1: 'PermissionsV1'\n            }\n        },\n        PermissionLatest: 'PermissionsV1'\n    }\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        GenesisBuildErr: 'Text'\n    }\n};\n","export const runtime = {\n    GenesisBuilder: [\n        {\n            methods: {\n                build_config: {\n                    description: 'Build `RuntimeGenesisConfig` from a JSON blob not using any defaults and store it in the storage.',\n                    params: [\n                        {\n                            name: 'json',\n                            type: 'Vec<u8>'\n                        }\n                    ],\n                    type: 'Result<(), GenesisBuildErr>'\n                },\n                create_default_config: {\n                    description: 'Creates the default `RuntimeGenesisConfig` and returns it as a JSON blob.',\n                    params: [],\n                    type: 'Vec<u8>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        ActiveGilt: {\n            proportion: 'Perquintill',\n            amount: 'Balance',\n            who: 'AccountId',\n            expiry: 'BlockNumber'\n        },\n        ActiveGiltsTotal: {\n            frozen: 'Balance',\n            proportion: 'Perquintill',\n            index: 'ActiveIndex',\n            target: 'Perquintill'\n        },\n        ActiveIndex: 'u32',\n        GiltBid: {\n            amount: 'Balance',\n            who: 'AccountId'\n        }\n    }\n};\n","const GRANDPA_V2_V3 = {\n    generate_key_ownership_proof: {\n        description: 'Generates a proof of key ownership for the given authority in the given set.',\n        params: [\n            {\n                name: 'setId',\n                type: 'SetId'\n            },\n            {\n                name: 'authorityId',\n                type: 'AuthorityId'\n            }\n        ],\n        type: 'Option<OpaqueKeyOwnershipProof>'\n    },\n    grandpa_authorities: {\n        description: 'Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.',\n        params: [],\n        type: 'AuthorityList'\n    },\n    submit_report_equivocation_unsigned_extrinsic: {\n        description: 'Submits an unsigned extrinsic to report an equivocation.',\n        params: [\n            {\n                name: 'equivocationProof',\n                type: 'GrandpaEquivocationProof'\n            },\n            {\n                name: 'keyOwnerProof',\n                type: 'OpaqueKeyOwnershipProof'\n            }\n        ],\n        type: 'Option<Null>'\n    }\n};\nexport const runtime = {\n    GrandpaApi: [\n        {\n            methods: {\n                current_set_id: {\n                    description: 'Get current GRANDPA authority set id.',\n                    params: [],\n                    type: 'SetId'\n                },\n                ...GRANDPA_V2_V3\n            },\n            version: 3\n        },\n        {\n            methods: GRANDPA_V2_V3,\n            version: 2\n        }\n    ]\n};\n","import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AuthorityIndex: 'u64',\n        AuthorityList: 'Vec<NextAuthority>',\n        AuthoritySet: {\n            currentAuthorities: 'AuthorityList',\n            setId: 'u64',\n            pendingStandardChanges: 'ForkTreePendingChange',\n            pendingForcedChanges: 'Vec<PendingChange>',\n            authoritySetChanges: 'AuthoritySetChanges'\n        },\n        ForkTreePendingChange: {\n            roots: 'Vec<ForkTreePendingChangeNode>',\n            bestFinalizedNumber: 'Option<BlockNumber>'\n        },\n        ForkTreePendingChangeNode: {\n            hash: 'BlockHash',\n            number: 'BlockNumber',\n            data: 'PendingChange', // actual data, here PendingChange\n            children: 'Vec<ForkTreePendingChangeNode>'\n        },\n        AuthoritySetChange: '(U64, BlockNumber)',\n        AuthoritySetChanges: 'Vec<AuthoritySetChange>',\n        AuthorityWeight: 'u64',\n        DelayKind: {\n            _enum: {\n                Finalized: 'Null',\n                Best: 'DelayKindBest'\n            }\n        },\n        DelayKindBest: {\n            medianLastFinalized: 'BlockNumber'\n        },\n        EncodedFinalityProofs: 'Bytes',\n        GrandpaEquivocation: {\n            _enum: {\n                Prevote: 'GrandpaEquivocationValue',\n                Precommit: 'GrandpaEquivocationValue'\n            }\n        },\n        GrandpaEquivocationProof: {\n            setId: 'SetId',\n            equivocation: 'GrandpaEquivocation'\n        },\n        GrandpaEquivocationValue: {\n            roundNumber: 'u64',\n            identity: 'AuthorityId',\n            first: '(GrandpaPrevote, AuthoritySignature)',\n            second: '(GrandpaPrevote, AuthoritySignature)'\n        },\n        GrandpaPrevote: {\n            targetHash: 'Hash',\n            targetNumber: 'BlockNumber'\n        },\n        GrandpaCommit: {\n            targetHash: 'BlockHash',\n            targetNumber: 'BlockNumber',\n            precommits: 'Vec<GrandpaSignedPrecommit>'\n        },\n        GrandpaPrecommit: {\n            targetHash: 'BlockHash',\n            targetNumber: 'BlockNumber'\n        },\n        GrandpaSignedPrecommit: {\n            precommit: 'GrandpaPrecommit',\n            signature: 'AuthoritySignature',\n            id: 'AuthorityId'\n        },\n        GrandpaJustification: {\n            round: 'u64',\n            commit: 'GrandpaCommit',\n            votesAncestries: 'Vec<Header>'\n        },\n        JustificationNotification: 'Bytes',\n        KeyOwnerProof: 'MembershipProof',\n        NextAuthority: '(AuthorityId, AuthorityWeight)',\n        PendingChange: {\n            nextAuthorities: 'AuthorityList',\n            delay: 'BlockNumber',\n            canonHeight: 'BlockNumber',\n            canonHash: 'BlockHash',\n            delayKind: 'DelayKind'\n        },\n        PendingPause: {\n            scheduledAt: 'BlockNumber',\n            delay: 'BlockNumber'\n        },\n        PendingResume: {\n            scheduledAt: 'BlockNumber',\n            delay: 'BlockNumber'\n        },\n        Precommits: {\n            currentWeight: 'u32',\n            missing: 'BTreeSet<AuthorityId>'\n        },\n        Prevotes: {\n            currentWeight: 'u32',\n            missing: 'BTreeSet<AuthorityId>'\n        },\n        ReportedRoundStates: {\n            setId: 'u32',\n            best: 'RoundState',\n            background: 'Vec<RoundState>'\n        },\n        RoundState: {\n            round: 'u32',\n            totalWeight: 'u32',\n            thresholdWeight: 'u32',\n            prevotes: 'Prevotes',\n            precommits: 'Precommits'\n        },\n        SetId: 'u64',\n        StoredPendingChange: {\n            scheduledAt: 'BlockNumber',\n            delay: 'BlockNumber',\n            nextAuthorities: 'AuthorityList'\n        },\n        StoredState: {\n            _enum: {\n                Live: 'Null',\n                PendingPause: 'PendingPause',\n                Paused: 'Null',\n                PendingResume: 'PendingResume'\n            }\n        }\n    }\n};\n","export const rpc = {\n    proveFinality: {\n        description: 'Prove finality for the given block number, returning the Justification for the last block in the set.',\n        params: [\n            {\n                name: 'blockNumber',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'Option<EncodedFinalityProofs>'\n    },\n    roundState: {\n        description: 'Returns the state of the current best round state as well as the ongoing background rounds',\n        params: [],\n        type: 'ReportedRoundStates'\n    },\n    subscribeJustifications: {\n        description: 'Subscribes to grandpa justifications',\n        params: [],\n        pubsub: [\n            'justifications',\n            'subscribeJustifications',\n            'unsubscribeJustifications'\n        ],\n        type: 'JustificationNotification'\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        IdentityFields: {\n            _set: {\n                _bitLength: 64,\n                // Mapped here to 32 bits, in Rust these are 64-bit values\n                Display: 1,\n                Legal: 2,\n                Web: 4,\n                Riot: 8,\n                Email: 16,\n                PgpFingerprint: 32,\n                Image: 64,\n                Twitter: 128\n            }\n        },\n        IdentityInfoAdditional: '(Data, Data)',\n        IdentityInfoTo198: {\n            additional: 'Vec<IdentityInfoAdditional>',\n            display: 'Data',\n            legal: 'Data',\n            web: 'Data',\n            riot: 'Data',\n            email: 'Data',\n            pgpFingerprint: 'Option<H160>',\n            image: 'Data'\n        },\n        IdentityInfo: {\n            _fallback: 'IdentityInfoTo198',\n            additional: 'Vec<IdentityInfoAdditional>',\n            display: 'Data',\n            legal: 'Data',\n            web: 'Data',\n            riot: 'Data',\n            email: 'Data',\n            pgpFingerprint: 'Option<H160>',\n            image: 'Data',\n            twitter: 'Data'\n        },\n        IdentityJudgement: {\n            _enum: {\n                Unknown: 'Null',\n                FeePaid: 'Balance',\n                Reasonable: 'Null',\n                KnownGood: 'Null',\n                OutOfDate: 'Null',\n                LowQuality: 'Null',\n                Erroneous: 'Null'\n            }\n        },\n        RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',\n        RegistrationTo198: {\n            judgements: 'Vec<RegistrationJudgement>',\n            deposit: 'Balance',\n            info: 'IdentityInfoTo198'\n        },\n        Registration: {\n            _fallback: 'RegistrationTo198',\n            judgements: 'Vec<RegistrationJudgement>',\n            deposit: 'Balance',\n            info: 'IdentityInfo'\n        },\n        RegistrarIndex: 'u32',\n        RegistrarInfo: {\n            account: 'AccountId',\n            fee: 'Balance',\n            fields: 'IdentityFields'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        AuthIndex: 'u32',\n        AuthoritySignature: 'Signature',\n        Heartbeat: {\n            blockNumber: 'BlockNumber',\n            networkState: 'OpaqueNetworkState',\n            sessionIndex: 'SessionIndex',\n            authorityIndex: 'AuthIndex',\n            validatorsLen: 'u32'\n        },\n        HeartbeatTo244: {\n            blockNumber: 'BlockNumber',\n            networkState: 'OpaqueNetworkState',\n            sessionIndex: 'SessionIndex',\n            authorityIndex: 'AuthIndex'\n        },\n        OpaqueMultiaddr: 'Opaque<Bytes>',\n        OpaquePeerId: 'Opaque<Bytes>',\n        OpaqueNetworkState: {\n            peerId: 'OpaquePeerId',\n            externalAddresses: 'Vec<OpaqueMultiaddr>'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        CallIndex: '(u8, u8)',\n        LotteryConfig: {\n            price: 'Balance',\n            start: 'BlockNumber',\n            length: 'BlockNumber',\n            delay: 'BlockNumber',\n            repeat: 'bool'\n        }\n    }\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        Mixnode: {\n            externalAddresses: 'Vec<Bytes>',\n            kxPublic: '[u8; 32]',\n            peerId: '[u8; 32]'\n        },\n        MixnodesErr: {\n            _enum: {\n                InsufficientRegistrations: {\n                    min: 'u32',\n                    num: 'u32'\n                }\n            }\n        },\n        SessionPhase: {\n            _enum: ['CoverToCurrent', 'RequestsToCurrent', 'CoverToPrev', 'DisconnectFromPrev']\n        },\n        SessionStatus: {\n            currentIndex: 'u32',\n            phase: 'SessionPhase'\n        }\n    }\n};\n","export const runtime = {\n    MixnetApi: [\n        {\n            methods: {\n                current_mixnodes: {\n                    description: 'Get the index and phase of the current session.',\n                    params: [],\n                    type: 'Result<Mixnode, MixnodesErr>'\n                },\n                maybe_register: {\n                    description: 'Try to register a mixnode for the next session.',\n                    params: [\n                        {\n                            name: 'session_index',\n                            type: 'u32'\n                        },\n                        {\n                            name: 'mixnode',\n                            type: 'Mixnode'\n                        }\n                    ],\n                    type: 'bool'\n                },\n                prev_mixnodes: {\n                    description: 'Get the index and phase of the current session.',\n                    params: [],\n                    type: 'Result<Mixnode, MixnodesErr>'\n                },\n                session_status: {\n                    description: 'Get the index and phase of the current session.',\n                    params: [],\n                    type: 'SessionStatus'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        MmrBatchProof: {\n            leafIndices: 'Vec<MmrLeafIndex>',\n            leafCount: 'MmrNodeIndex',\n            items: 'Vec<Hash>'\n        },\n        MmrEncodableOpaqueLeaf: 'Bytes',\n        MmrError: {\n            _enum: ['InvalidNumericOp', 'Push', 'GetRoot', 'Commit', 'GenerateProof', 'Verify', 'LeafNotFound', ' PalletNotIncluded', 'InvalidLeafIndex', 'InvalidBestKnownBlock']\n        },\n        MmrHash: 'Hash',\n        MmrLeafBatchProof: {\n            blockHash: 'BlockHash',\n            leaves: 'Bytes',\n            proof: 'Bytes'\n        },\n        MmrLeafIndex: 'u64',\n        MmrLeafProof: {\n            blockHash: 'BlockHash',\n            leaf: 'Bytes',\n            proof: 'Bytes'\n        },\n        MmrNodeIndex: 'u64',\n        MmrProof: {\n            leafIndex: 'MmrLeafIndex',\n            leafCount: 'MmrNodeIndex',\n            items: 'Vec<Hash>'\n        }\n    }\n};\n","export const rpc = {\n    generateProof: {\n        description: 'Generate MMR proof for the given block numbers.',\n        params: [\n            {\n                name: 'blockNumbers',\n                type: 'Vec<u64>'\n            },\n            {\n                isOptional: true,\n                name: 'bestKnownBlockNumber',\n                type: 'u64'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'MmrLeafBatchProof'\n    },\n    root: {\n        description: 'Get the MMR root hash for the current best block.',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'MmrHash'\n    },\n    verifyProof: {\n        description: 'Verify an MMR proof',\n        params: [\n            {\n                name: 'proof',\n                type: 'MmrLeafBatchProof'\n            }\n        ],\n        type: 'bool'\n    },\n    verifyProofStateless: {\n        description: 'Verify an MMR proof statelessly given an mmr_root',\n        params: [\n            {\n                name: 'root',\n                type: 'MmrHash'\n            },\n            {\n                name: 'proof',\n                type: 'MmrLeafBatchProof'\n            }\n        ],\n        type: 'bool'\n    }\n};\n","const MMR_V2 = {\n    generate_proof: {\n        description: 'Generate MMR proof for the given block numbers.',\n        params: [\n            {\n                name: 'blockNumbers',\n                type: 'Vec<BlockNumber>'\n            },\n            {\n                name: 'bestKnownBlockNumber',\n                type: 'Option<BlockNumber>'\n            }\n        ],\n        type: 'Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>'\n    },\n    mmr_leaf_count: {\n        description: 'Return the number of MMR blocks in the chain.',\n        params: [],\n        type: 'Result<U64, MmrError>'\n    },\n    mmr_root: {\n        description: 'Return the on-chain MMR root hash.',\n        params: [],\n        type: 'Result<Hash, MmrError>'\n    },\n    verify_proof: {\n        description: 'Verify MMR proof against on-chain MMR.',\n        params: [\n            {\n                name: 'leaves',\n                type: 'Vec<MmrEncodableOpaqueLeaf>'\n            },\n            {\n                name: 'proof',\n                type: 'MmrBatchProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    },\n    verify_proof_stateless: {\n        description: 'Verify MMR proof against given root hash.',\n        params: [\n            {\n                name: 'root',\n                type: 'Hash'\n            },\n            {\n                name: 'leaves',\n                type: 'Vec<MmrEncodableOpaqueLeaf>'\n            },\n            {\n                name: 'proof',\n                type: 'MmrBatchProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    }\n};\nconst MMR_V1 = {\n    generate_batch_proof: {\n        description: 'Generate MMR proof for a series of leaves under given indices.',\n        params: [\n            {\n                name: 'leafIndices',\n                type: 'Vec<MmrLeafIndex>'\n            }\n        ],\n        type: 'Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>'\n    },\n    generate_proof: {\n        description: 'Generate MMR proof for a leaf under given index.',\n        params: [\n            {\n                name: 'leafIndex',\n                type: 'MmrLeafIndex'\n            }\n        ],\n        type: 'Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>'\n    },\n    mmr_root: {\n        description: 'Return the on-chain MMR root hash.',\n        params: [],\n        type: 'Result<Hash, MmrError>'\n    },\n    verify_batch_proof: {\n        description: 'Verify MMR proof against on-chain MMR for a batch of leaves.',\n        params: [\n            {\n                name: 'leaves',\n                type: 'Vec<MmrEncodableOpaqueLeaf>'\n            },\n            {\n                name: 'proof',\n                type: 'MmrBatchProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    },\n    verify_batch_proof_stateless: {\n        description: 'Verify MMR proof against given root hash or a batch of leaves.',\n        params: [\n            {\n                name: 'root',\n                type: 'Hash'\n            },\n            {\n                name: 'leaves',\n                type: 'Vec<MmrEncodableOpaqueLeaf>'\n            },\n            {\n                name: 'proof',\n                type: 'MmrBatchProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    },\n    verify_proof: {\n        description: 'Verify MMR proof against on-chain MMR.',\n        params: [\n            {\n                name: 'leaf',\n                type: 'MmrEncodableOpaqueLeaf'\n            },\n            {\n                name: 'proof',\n                type: 'MmrProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    },\n    verify_proof_stateless: {\n        description: 'Verify MMR proof against given root hash.',\n        params: [\n            {\n                name: 'root',\n                type: 'Hash'\n            },\n            {\n                name: 'leaf',\n                type: 'MmrEncodableOpaqueLeaf'\n            },\n            {\n                name: 'proof',\n                type: 'MmrProof'\n            }\n        ],\n        type: 'Result<(), MmrError>'\n    }\n};\nexport const runtime = {\n    MmrApi: [\n        {\n            methods: MMR_V2,\n            version: 2\n        },\n        {\n            methods: MMR_V1,\n            version: 1\n        }\n    ]\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        NftCollectionId: 'u32',\n        NftItemId: 'u32'\n    }\n};\n","export const runtime = {\n    NftsApi: [\n        {\n            methods: {\n                attribute: {\n                    description: 'An attribute',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'item',\n                            type: 'NftItemId'\n                        },\n                        {\n                            name: 'key',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Bytes>'\n                },\n                collection_attribute: {\n                    description: 'A collection attribute',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'key',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Bytes>'\n                },\n                collection_owner: {\n                    description: 'A collection owner',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        }\n                    ],\n                    type: 'Option<AccountId>'\n                },\n                custom_attribute: {\n                    description: 'A custom attribute',\n                    params: [\n                        {\n                            name: 'account',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'item',\n                            type: 'NftItemId'\n                        },\n                        {\n                            name: 'key',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Bytes>'\n                },\n                owner: {\n                    description: 'Collection owner',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'item',\n                            type: 'NftItemId'\n                        }\n                    ],\n                    type: 'Option<AccountId>'\n                },\n                system_attribute: {\n                    description: 'System attribute',\n                    params: [\n                        {\n                            name: 'collection',\n                            type: 'NftCollectionId'\n                        },\n                        {\n                            name: 'item',\n                            type: 'NftItemId'\n                        },\n                        {\n                            name: 'key',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Bytes>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        NpApiError: {\n            _enum: ['MemberNotFound', 'OverflowInPendingRewards']\n        },\n        NpPoolId: 'u32'\n    }\n};\n","export const runtime = {\n    NominationPoolsApi: [\n        {\n            methods: {\n                balance_to_points: {\n                    description: 'Returns the equivalent points of `new_funds` for a given pool.',\n                    params: [\n                        {\n                            name: 'poolId',\n                            type: 'NpPoolId'\n                        },\n                        {\n                            name: 'newFunds',\n                            type: 'Balance'\n                        }\n                    ],\n                    type: 'Balance'\n                },\n                pending_rewards: {\n                    description: 'Returns the pending rewards for the given member.',\n                    params: [\n                        {\n                            name: 'member',\n                            type: 'AccountId'\n                        }\n                    ],\n                    type: 'Balance'\n                },\n                points_to_balance: {\n                    description: 'Returns the equivalent balance of `points` for a given pool.',\n                    params: [\n                        {\n                            name: 'poolId',\n                            type: 'NpPoolId'\n                        },\n                        {\n                            name: 'points',\n                            type: 'Balance'\n                        }\n                    ],\n                    type: 'Balance'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        DeferredOffenceOf: '(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)',\n        Kind: '[u8; 16]',\n        OffenceDetails: {\n            offender: 'Offender',\n            reporters: 'Vec<Reporter>'\n        },\n        Offender: 'IdentificationTuple',\n        OpaqueTimeSlot: 'Bytes',\n        ReportIdOf: 'Hash',\n        Reporter: 'AccountId'\n    }\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n","export const runtime = {\n    DifficultyApi: [\n        {\n            methods: {\n                difficulty: {\n                    description: 'Return the target difficulty of the next block.',\n                    params: [],\n                    // This is Difficulty in the original, however this is chain-specific\n                    type: 'Raw'\n                }\n            },\n            version: 1\n        }\n    ],\n    TimestampApi: [\n        {\n            methods: {\n                timestamp: {\n                    description: 'API necessary for timestamp-based difficulty adjustment algorithms.',\n                    params: [],\n                    type: 'Moment'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        ProxyDefinition: {\n            delegate: 'AccountId',\n            proxyType: 'ProxyType',\n            delay: 'BlockNumber'\n        },\n        ProxyType: {\n            _enum: ['Any', 'NonTransfer', 'Governance', 'Staking']\n        },\n        ProxyAnnouncement: {\n            real: 'AccountId',\n            callHash: 'Hash',\n            height: 'BlockNumber'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        ActiveRecovery: {\n            created: 'BlockNumber',\n            deposit: 'Balance',\n            friends: 'Vec<AccountId>'\n        },\n        RecoveryConfig: {\n            delayPeriod: 'BlockNumber',\n            deposit: 'Balance',\n            friends: 'Vec<AccountId>',\n            threshold: 'u16'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        Period: '(BlockNumber, u32)',\n        Priority: 'u8',\n        SchedulePeriod: 'Period',\n        SchedulePriority: 'Priority',\n        Scheduled: {\n            maybeId: 'Option<Bytes>',\n            priority: 'SchedulePriority',\n            call: 'Call',\n            maybePeriodic: 'Option<SchedulePeriod>',\n            origin: 'PalletsOrigin'\n        },\n        ScheduledTo254: {\n            maybeId: 'Option<Bytes>',\n            priority: 'SchedulePriority',\n            call: 'Call',\n            maybePeriodic: 'Option<SchedulePeriod>'\n        },\n        TaskAddress: '(BlockNumber, u32)'\n    }\n};\n","import { runtime } from './runtime.js';\nconst keyTypes = {\n    // key for beefy\n    BeefyKey: '[u8; 33]',\n    // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)\n    Keys: 'SessionKeys4',\n    SessionKeys1: '(AccountId)',\n    SessionKeys2: '(AccountId, AccountId)',\n    SessionKeys3: '(AccountId, AccountId, AccountId)',\n    SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys6B: '(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n    SessionKeys7: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys7B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n    SessionKeys8: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys8B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n    SessionKeys9: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys9B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',\n    SessionKeys10: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',\n    SessionKeys10B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)'\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        ...keyTypes,\n        FullIdentification: 'Exposure',\n        IdentificationTuple: '(ValidatorId, FullIdentification)',\n        MembershipProof: {\n            session: 'SessionIndex',\n            trieNodes: 'Vec<Bytes>',\n            validatorCount: 'ValidatorCount'\n        },\n        SessionIndex: 'u32',\n        ValidatorCount: 'u32'\n    }\n};\n","export const runtime = {\n    SessionKeys: [\n        {\n            methods: {\n                decode_session_keys: {\n                    description: 'Decode the given public session keys.',\n                    params: [\n                        {\n                            name: 'encoded',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'Option<Vec<(Bytes, KeyTypeId)>>'\n                },\n                generate_session_keys: {\n                    description: 'Generate a set of session keys with optionally using the given seed.',\n                    params: [\n                        {\n                            name: 'seed',\n                            type: 'Option<Bytes>'\n                        }\n                    ],\n                    type: 'Bytes'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        Bid: {\n            who: 'AccountId',\n            kind: 'BidKind',\n            value: 'Balance'\n        },\n        BidKind: {\n            _enum: {\n                Deposit: 'Balance',\n                Vouch: '(AccountId, Balance)'\n            }\n        },\n        // a society-specific Judgement (not the same as identity Judgement)\n        SocietyJudgement: {\n            _enum: ['Rebid', 'Reject', 'Approve']\n        },\n        // a society-specific Vote\n        SocietyVote: {\n            _enum: ['Skeptic', 'Reject', 'Approve']\n        },\n        StrikeCount: 'u32',\n        VouchingStatus: {\n            _enum: ['Vouching', 'Banned']\n        }\n    }\n};\n","import { runtime } from './runtime.js';\nconst deprecated = {\n    Points: 'u32',\n    EraPoints: {\n        total: 'Points',\n        individual: 'Vec<Points>'\n    }\n};\nconst phragmen = {\n    CompactAssignments: 'CompactAssignmentsWith16',\n    CompactAssignmentsWith16: {\n        votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n        votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n        votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n        votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n        votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n        votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n        votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n        votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n        votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n        votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n        votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n        votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n        votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n        votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n        votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n        votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'\n    },\n    CompactAssignmentsWith24: {\n        votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',\n        votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',\n        votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',\n        votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',\n        votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',\n        votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',\n        votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',\n        votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',\n        votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',\n        votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',\n        votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',\n        votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',\n        votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',\n        votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',\n        votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',\n        votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',\n        votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',\n        votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',\n        votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',\n        votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',\n        votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',\n        votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',\n        votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',\n        votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'\n    },\n    CompactAssignmentsTo265: 'CompactAssignmentsWith16',\n    CompactAssignmentsTo257: {\n        votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',\n        votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',\n        votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',\n        votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',\n        votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',\n        votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',\n        votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',\n        votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',\n        votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',\n        votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',\n        votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',\n        votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',\n        votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',\n        votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',\n        votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',\n        votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'\n    },\n    CompactScore: '(ValidatorIndex, OffchainAccuracy)',\n    CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',\n    ElectionCompute: {\n        // in previous versions the last entry was \"AuthorityId\"\n        // (since no data attached, and it is via SCALE can rename)\n        _enum: ['OnChain', 'Signed', 'Unsigned']\n    },\n    ElectionPhase: {\n        _enum: {\n            Off: null,\n            Signed: null,\n            Unsigned: '(bool, BlockNumber)',\n            Emergency: null\n        }\n    },\n    ElectionResult: {\n        compute: 'ElectionCompute',\n        slotStake: 'Balance',\n        electedStashes: 'Vec<AccountId>',\n        exposures: 'Vec<(AccountId, Exposure)>'\n    },\n    ElectionScore: '[u128; 3]',\n    ElectionSize: {\n        validators: 'Compact<ValidatorIndex>',\n        nominators: 'Compact<NominatorIndex>'\n    },\n    ElectionStatus: {\n        _enum: {\n            Close: 'Null',\n            Open: 'BlockNumber'\n        }\n    },\n    ExtendedBalance: 'u128',\n    RawSolution: 'RawSolutionWith16',\n    RawSolutionWith16: {\n        compact: 'CompactAssignmentsWith16',\n        score: 'ElectionScore',\n        round: 'u32'\n    },\n    RawSolutionWith24: {\n        compact: 'CompactAssignmentsWith24',\n        score: 'ElectionScore',\n        round: 'u32'\n    },\n    RawSolutionTo265: 'RawSolutionWith16',\n    ReadySolution: {\n        supports: 'SolutionSupports',\n        score: 'ElectionScore',\n        compute: 'ElectionCompute'\n    },\n    RoundSnapshot: {\n        voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',\n        targets: 'Vec<AccountId>'\n    },\n    SeatHolder: {\n        who: 'AccountId',\n        stake: 'Balance',\n        deposit: 'Balance'\n    },\n    SignedSubmission: {\n        _fallback: 'SignedSubmissionTo276',\n        who: 'AccountId',\n        deposit: 'Balance',\n        solution: 'RawSolution',\n        reward: 'Balance'\n    },\n    SignedSubmissionTo276: {\n        who: 'AccountId',\n        deposit: 'Balance',\n        solution: 'RawSolution'\n    },\n    SignedSubmissionOf: 'SignedSubmission',\n    SolutionOrSnapshotSize: {\n        voters: 'Compact<u32>',\n        targets: 'Compact<u32>'\n    },\n    SolutionSupport: {\n        total: 'ExtendedBalance',\n        voters: 'Vec<(AccountId, ExtendedBalance)>'\n    },\n    SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',\n    Supports: 'SolutionSupports',\n    SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',\n    Voter: {\n        votes: 'Vec<AccountId>',\n        stake: 'Balance',\n        deposit: 'Balance'\n    },\n    VoteWeight: 'u64'\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        ...deprecated,\n        ...phragmen,\n        ActiveEraInfo: {\n            index: 'EraIndex',\n            start: 'Option<Moment>'\n        },\n        EraIndex: 'u32',\n        EraRewardPoints: {\n            total: 'RewardPoint',\n            individual: 'BTreeMap<AccountId, RewardPoint>'\n        },\n        EraRewards: {\n            total: 'u32',\n            rewards: 'Vec<u32>'\n        },\n        Exposure: {\n            total: 'Compact<Balance>',\n            own: 'Compact<Balance>',\n            others: 'Vec<IndividualExposure>'\n        },\n        Forcing: {\n            _enum: [\n                'NotForcing',\n                'ForceNew',\n                'ForceNone',\n                'ForceAlways'\n            ]\n        },\n        IndividualExposure: {\n            who: 'AccountId',\n            value: 'Compact<Balance>'\n        },\n        KeyType: 'AccountId',\n        MomentOf: 'Moment',\n        Nominations: {\n            targets: 'Vec<AccountId>',\n            submittedIn: 'EraIndex',\n            suppressed: 'bool'\n        },\n        NominatorIndex: 'u32',\n        NominatorIndexCompact: 'Compact<NominatorIndex>',\n        OffchainAccuracy: 'PerU16',\n        OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',\n        PhragmenScore: '[u128; 3]',\n        Points: 'u32',\n        RewardDestination: {\n            _enum: {\n                Staked: 'Null',\n                Stash: 'Null',\n                Controller: 'Null',\n                Account: 'AccountId',\n                None: 'Null'\n            }\n        },\n        RewardPoint: 'u32',\n        SlashJournalEntry: {\n            who: 'AccountId',\n            amount: 'Balance',\n            ownSlash: 'Balance'\n        },\n        SlashingSpansTo204: {\n            spanIndex: 'SpanIndex',\n            lastStart: 'EraIndex',\n            prior: 'Vec<EraIndex>'\n        },\n        SlashingSpans: {\n            spanIndex: 'SpanIndex',\n            lastStart: 'EraIndex',\n            lastNonzeroSlash: 'EraIndex',\n            prior: 'Vec<EraIndex>'\n        },\n        SpanIndex: 'u32',\n        SpanRecord: {\n            slashed: 'Balance',\n            paidOut: 'Balance'\n        },\n        StakingLedgerTo223: {\n            stash: 'AccountId',\n            total: 'Compact<Balance>',\n            active: 'Compact<Balance>',\n            unlocking: 'Vec<UnlockChunk>'\n        },\n        StakingLedgerTo240: {\n            _fallback: 'StakingLedgerTo223',\n            stash: 'AccountId',\n            total: 'Compact<Balance>',\n            active: 'Compact<Balance>',\n            unlocking: 'Vec<UnlockChunk>',\n            lastReward: 'Option<EraIndex>'\n        },\n        StakingLedger: {\n            stash: 'AccountId',\n            total: 'Compact<Balance>',\n            active: 'Compact<Balance>',\n            unlocking: 'Vec<UnlockChunk>',\n            claimedRewards: 'Vec<EraIndex>'\n        },\n        UnappliedSlashOther: '(AccountId, Balance)',\n        UnappliedSlash: {\n            validator: 'AccountId',\n            own: 'Balance',\n            others: 'Vec<UnappliedSlashOther>',\n            reporters: 'Vec<AccountId>',\n            payout: 'Balance'\n        },\n        UnlockChunk: {\n            value: 'Compact<Balance>',\n            era: 'Compact<BlockNumber>'\n        },\n        ValidatorIndex: 'u16',\n        ValidatorIndexCompact: 'Compact<ValidatorIndex>',\n        ValidatorPrefs: 'ValidatorPrefsWithBlocked',\n        ValidatorPrefsWithCommission: {\n            commission: 'Compact<Perbill>'\n        },\n        ValidatorPrefsWithBlocked: {\n            commission: 'Compact<Perbill>',\n            blocked: 'bool'\n        },\n        ValidatorPrefsTo196: {\n            validatorPayment: 'Compact<Balance>'\n        },\n        ValidatorPrefsTo145: {\n            unstakeThreshold: 'Compact<u32>',\n            validatorPayment: 'Compact<Balance>'\n        }\n    }\n};\n","export const runtime = {\n    StakingApi: [\n        {\n            methods: {\n                nominations_quota: {\n                    description: 'Returns the nominations quota for a nominator with a given balance.',\n                    params: [\n                        {\n                            name: 'balance',\n                            type: 'Balance'\n                        }\n                    ],\n                    type: 'u32'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        StatementStoreStatementSource: {\n            _enum: ['Chain', 'Network', 'Local']\n        },\n        StatementStoreValidStatement: {\n            maxCount: 'u32',\n            maxSize: 'u32'\n        },\n        StatementStoreInvalidStatement: {\n            _enum: ['BadProof', 'NoProof', 'InternalError']\n        }\n    }\n};\n","export const runtime = {\n    ValidateStatement: [\n        {\n            methods: {\n                valdate_statement: {\n                    description: 'Validate the statement.',\n                    params: [\n                        {\n                            name: 'source',\n                            type: 'StatementStoreStatementSource'\n                        },\n                        {\n                            name: 'statement',\n                            type: 'SpStatementStoreStatement'\n                        }\n                    ],\n                    type: 'Result<StatementStoreValidStatement, StatementStoreInvalidStatement>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        WeightToFeeCoefficient: {\n            coeffInteger: 'Balance',\n            coeffFrac: 'Perbill',\n            negative: 'bool',\n            degree: 'u8'\n        }\n    }\n};\n","import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {}\n};\n","export const rpc = {\n    genSyncSpec: {\n        description: 'Returns the json-serialized chainspec running the node, with a sync state.',\n        endpoint: 'sync_state_genSyncSpec',\n        params: [\n            {\n                name: 'raw',\n                type: 'bool'\n            }\n        ],\n        type: 'Json'\n    }\n};\n","import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AccountInfo: 'AccountInfoWithTripleRefCount',\n        AccountInfoWithRefCountU8: {\n            nonce: 'Index',\n            refcount: 'u8',\n            data: 'AccountData'\n        },\n        AccountInfoWithRefCount: {\n            _fallback: 'AccountInfoWithRefCountU8',\n            nonce: 'Index',\n            refcount: 'RefCount',\n            data: 'AccountData'\n        },\n        AccountInfoWithDualRefCount: {\n            _fallback: 'AccountInfoWithRefCount',\n            nonce: 'Index',\n            consumers: 'RefCount',\n            providers: 'RefCount',\n            data: 'AccountData'\n        },\n        // original naming\n        AccountInfoWithProviders: 'AccountInfoWithDualRefCount',\n        AccountInfoWithTripleRefCount: {\n            _fallback: 'AccountInfoWithDualRefCount',\n            nonce: 'Index',\n            consumers: 'RefCount',\n            providers: 'RefCount',\n            sufficients: 'RefCount',\n            data: 'AccountData'\n        },\n        ApplyExtrinsicResult: 'Result<DispatchOutcome, TransactionValidityError>',\n        ApplyExtrinsicResultPre6: 'Result<DispatchOutcomePre6, TransactionValidityError>',\n        ArithmeticError: {\n            _enum: [\n                'Underflow',\n                'Overflow',\n                'DivisionByZero'\n            ]\n        },\n        BlockLength: {\n            max: 'PerDispatchClassU32'\n        },\n        BlockWeights: {\n            baseBlock: 'Weight',\n            maxBlock: 'Weight',\n            perClass: 'PerDispatchClassWeightsPerClass'\n        },\n        ChainProperties: 'GenericChainProperties',\n        ChainType: {\n            _enum: {\n                Development: 'Null',\n                Local: 'Null',\n                Live: 'Null',\n                Custom: 'Text'\n            }\n        },\n        ConsumedWeight: 'PerDispatchClassWeight',\n        DigestOf: 'Digest',\n        DispatchClass: {\n            _enum: ['Normal', 'Operational', 'Mandatory']\n        },\n        DispatchError: {\n            _enum: {\n                Other: 'Null',\n                CannotLookup: 'Null',\n                BadOrigin: 'Null',\n                Module: 'DispatchErrorModule',\n                ConsumerRemaining: 'Null',\n                NoProviders: 'Null',\n                TooManyConsumers: 'Null',\n                Token: 'TokenError',\n                Arithmetic: 'ArithmeticError',\n                Transactional: 'TransactionalError',\n                Exhausted: 'Null',\n                Corruption: 'Null',\n                Unavailable: 'Null'\n            }\n        },\n        DispatchErrorPre6: {\n            _enum: {\n                Other: 'Null',\n                CannotLookup: 'Null',\n                BadOrigin: 'Null',\n                Module: 'DispatchErrorModulePre6',\n                ConsumerRemaining: 'Null',\n                NoProviders: 'Null',\n                TooManyConsumers: 'Null',\n                Token: 'TokenError',\n                Arithmetic: 'ArithmeticError',\n                Transactional: 'TransactionalError'\n            }\n        },\n        DispatchErrorPre6First: {\n            // The enum was modified mid-flight, affecting asset chains -\n            // https://github.com/paritytech/substrate/pull/10382/files#diff-e4e016b33a82268b6208dc974eea841bad47597865a749fee2f937eb6fdf67b4R498\n            _enum: {\n                Other: 'Null',\n                CannotLookup: 'Null',\n                BadOrigin: 'Null',\n                Module: 'DispatchErrorModulePre6',\n                ConsumerRemaining: 'Null',\n                NoProviders: 'Null',\n                Token: 'TokenError',\n                Arithmetic: 'ArithmeticError',\n                Transactional: 'TransactionalError'\n            }\n        },\n        DispatchErrorModuleU8: {\n            index: 'u8',\n            error: 'u8'\n        },\n        DispatchErrorModuleU8a: {\n            index: 'u8',\n            error: '[u8; 4]'\n        },\n        DispatchErrorModule: 'DispatchErrorModuleU8a',\n        DispatchErrorModulePre6: 'DispatchErrorModuleU8',\n        DispatchErrorTo198: {\n            module: 'Option<u8>',\n            error: 'u8'\n        },\n        DispatchInfo: {\n            weight: 'Weight',\n            class: 'DispatchClass',\n            paysFee: 'Pays'\n        },\n        DispatchInfoTo190: {\n            weight: 'Weight',\n            class: 'DispatchClass'\n        },\n        DispatchInfoTo244: {\n            weight: 'Weight',\n            class: 'DispatchClass',\n            paysFee: 'bool'\n        },\n        DispatchOutcome: 'Result<(), DispatchError>',\n        DispatchOutcomePre6: 'Result<(), DispatchErrorPre6>',\n        DispatchResult: 'Result<(), DispatchError>',\n        DispatchResultOf: 'DispatchResult',\n        DispatchResultTo198: 'Result<(), Text>',\n        Event: 'GenericEvent',\n        EventId: '[u8; 2]',\n        EventIndex: 'u32',\n        EventRecord: {\n            phase: 'Phase',\n            event: 'Event',\n            topics: 'Vec<Hash>'\n        },\n        Health: {\n            peers: 'u64',\n            isSyncing: 'bool',\n            shouldHavePeers: 'bool'\n        },\n        InvalidTransaction: {\n            _enum: {\n                Call: 'Null',\n                Payment: 'Null',\n                Future: 'Null',\n                Stale: 'Null',\n                BadProof: 'Null',\n                AncientBirthBlock: 'Null',\n                ExhaustsResources: 'Null',\n                Custom: 'u8',\n                BadMandatory: 'Null',\n                MandatoryDispatch: 'Null',\n                BadSigner: 'Null'\n            }\n        },\n        Key: 'Bytes',\n        LastRuntimeUpgradeInfo: {\n            specVersion: 'Compact<u32>',\n            specName: 'Text'\n        },\n        NetworkState: {\n            peerId: 'Text',\n            listenedAddresses: 'Vec<Text>',\n            externalAddresses: 'Vec<Text>',\n            connectedPeers: 'HashMap<Text, Peer>',\n            notConnectedPeers: 'HashMap<Text, NotConnectedPeer>',\n            averageDownloadPerSec: 'u64',\n            averageUploadPerSec: 'u64',\n            peerset: 'NetworkStatePeerset'\n        },\n        NetworkStatePeerset: {\n            messageQueue: 'u64',\n            nodes: 'HashMap<Text, NetworkStatePeersetInfo>'\n        },\n        NetworkStatePeersetInfo: {\n            connected: 'bool',\n            reputation: 'i32'\n        },\n        NodeRole: {\n            _enum: {\n                Full: 'Null',\n                LightClient: 'Null',\n                Authority: 'Null',\n                UnknownRole: 'u8'\n            }\n        },\n        NotConnectedPeer: {\n            knownAddresses: 'Vec<Text>',\n            latestPingTime: 'Option<PeerPing>',\n            versionString: 'Option<Text>'\n        },\n        Peer: {\n            enabled: 'bool',\n            endpoint: 'PeerEndpoint',\n            knownAddresses: 'Vec<Text>',\n            latestPingTime: 'PeerPing',\n            open: 'bool',\n            versionString: 'Text'\n        },\n        PeerEndpoint: {\n            listening: 'PeerEndpointAddr'\n        },\n        PeerEndpointAddr: {\n            _alias: {\n                localAddr: 'local_addr',\n                sendBackAddr: 'send_back_addr'\n            },\n            localAddr: 'Text',\n            sendBackAddr: 'Text'\n        },\n        PeerPing: {\n            nanos: 'u64',\n            secs: 'u64'\n        },\n        PeerInfo: {\n            peerId: 'Text',\n            roles: 'Text',\n            protocolVersion: 'u32',\n            bestHash: 'Hash',\n            bestNumber: 'BlockNumber'\n        },\n        PerDispatchClassU32: {\n            normal: 'u32',\n            operational: 'u32',\n            mandatory: 'u32'\n        },\n        PerDispatchClassWeight: {\n            normal: 'Weight',\n            operational: 'Weight',\n            mandatory: 'Weight'\n        },\n        PerDispatchClassWeightsPerClass: {\n            normal: 'WeightPerClass',\n            operational: 'WeightPerClass',\n            mandatory: 'WeightPerClass'\n        },\n        Phase: {\n            _enum: {\n                ApplyExtrinsic: 'u32',\n                Finalization: 'Null',\n                Initialization: 'Null'\n            }\n        },\n        RawOrigin: {\n            _enum: {\n                Root: 'Null',\n                Signed: 'AccountId',\n                None: 'Null'\n            }\n        },\n        RefCount: 'u32',\n        RefCountTo259: 'u8',\n        SyncState: {\n            startingBlock: 'BlockNumber',\n            currentBlock: 'BlockNumber',\n            highestBlock: 'Option<BlockNumber>'\n        },\n        SystemOrigin: 'RawOrigin',\n        TokenError: {\n            _enum: [\n                'NoFunds',\n                'WouldDie',\n                'BelowMinimum',\n                'CannotCreate',\n                'UnknownAsset',\n                'Frozen',\n                'Unsupported',\n                // these are dropped, but still in older versions\n                // (if this adjusts, will need to take a re-look)\n                'Underflow',\n                'Overflow'\n            ]\n        },\n        TransactionValidityError: {\n            _enum: {\n                Invalid: 'InvalidTransaction',\n                Unknown: 'UnknownTransaction'\n            }\n        },\n        TransactionalError: {\n            _enum: [\n                'LimitReached',\n                'NoLayer'\n            ]\n        },\n        UnknownTransaction: {\n            _enum: {\n                CannotLookup: 'Null',\n                NoUnsignedValidator: 'Null',\n                Custom: 'u8'\n            }\n        },\n        WeightPerClass: {\n            baseExtrinsic: 'Weight',\n            maxExtrinsic: 'Option<Weight>',\n            maxTotal: 'Option<Weight>',\n            reserved: 'Option<Weight>'\n        }\n    }\n};\n","export const rpc = {\n    accountNextIndex: {\n        alias: ['account_nextIndex'],\n        description: 'Retrieves the next accountIndex as available on the node',\n        params: [\n            {\n                name: 'accountId',\n                type: 'AccountId'\n            }\n        ],\n        type: 'Index'\n    },\n    addLogFilter: {\n        description: 'Adds the supplied directives to the current log filter',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'directives',\n                type: 'Text'\n            }\n        ],\n        type: 'Null'\n    },\n    addReservedPeer: {\n        description: 'Adds a reserved peer',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'peer',\n                type: 'Text'\n            }\n        ],\n        type: 'Text'\n    },\n    chain: {\n        description: 'Retrieves the chain',\n        params: [],\n        type: 'Text'\n    },\n    chainType: {\n        description: 'Retrieves the chain type',\n        params: [],\n        type: 'ChainType'\n    },\n    dryRun: {\n        alias: ['system_dryRunAt'],\n        description: 'Dry run an extrinsic at a given block',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Bytes'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ApplyExtrinsicResult'\n    },\n    health: {\n        description: 'Return health status of the node',\n        noErrorLog: true,\n        params: [],\n        type: 'Health'\n    },\n    localListenAddresses: {\n        description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',\n        params: [],\n        type: 'Vec<Text>'\n    },\n    localPeerId: {\n        description: 'Returns the base58-encoded PeerId of the node',\n        params: [],\n        type: 'Text'\n    },\n    name: {\n        description: 'Retrieves the node name',\n        params: [],\n        type: 'Text'\n    },\n    networkState: {\n        alias: ['system_unstable_networkState'],\n        description: 'Returns current state of the network',\n        isUnsafe: true,\n        params: [],\n        type: 'NetworkState'\n    },\n    nodeRoles: {\n        description: 'Returns the roles the node is running as',\n        params: [],\n        type: 'Vec<NodeRole>'\n    },\n    peers: {\n        description: 'Returns the currently connected peers',\n        isUnsafe: true,\n        params: [],\n        type: 'Vec<PeerInfo>'\n    },\n    properties: {\n        description: 'Get a custom set of properties as a JSON object, defined in the chain spec',\n        params: [],\n        type: 'ChainProperties'\n    },\n    removeReservedPeer: {\n        description: 'Remove a reserved peer',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'peerId',\n                type: 'Text'\n            }\n        ],\n        type: 'Text'\n    },\n    reservedPeers: {\n        description: 'Returns the list of reserved peers',\n        params: [],\n        type: 'Vec<Text>'\n    },\n    resetLogFilter: {\n        description: 'Resets the log filter to Substrate defaults',\n        isUnsafe: true,\n        params: [],\n        type: 'Null'\n    },\n    syncState: {\n        description: 'Returns the state of the syncing of the node',\n        params: [],\n        type: 'SyncState'\n    },\n    version: {\n        description: 'Retrieves the version of the node',\n        params: [],\n        type: 'Text'\n    }\n};\n","export const runtime = {\n    AccountNonceApi: [\n        {\n            methods: {\n                account_nonce: {\n                    description: 'The API to query account nonce (aka transaction index)',\n                    params: [\n                        {\n                            name: 'accountId',\n                            type: 'AccountId'\n                        }\n                    ],\n                    type: 'Index'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        Bounty: {\n            proposer: 'AccountId',\n            value: 'Balance',\n            fee: 'Balance',\n            curatorDeposit: 'Balance',\n            bond: 'Balance',\n            status: 'BountyStatus'\n        },\n        BountyIndex: 'u32',\n        BountyStatus: {\n            _enum: {\n                Proposed: 'Null',\n                Approved: 'Null',\n                Funded: 'Null',\n                CuratorProposed: 'BountyStatusCuratorProposed',\n                Active: 'BountyStatusActive',\n                PendingPayout: 'BountyStatusPendingPayout'\n            }\n        },\n        BountyStatusActive: {\n            curator: 'AccountId',\n            updateDue: 'BlockNumber'\n        },\n        BountyStatusCuratorProposed: {\n            curator: 'AccountId'\n        },\n        BountyStatusPendingPayout: {\n            curator: 'AccountId',\n            beneficiary: 'AccountId',\n            unlockAt: 'BlockNumber'\n        },\n        OpenTip: {\n            reason: 'Hash',\n            who: 'AccountId',\n            finder: 'AccountId',\n            deposit: 'Balance',\n            closes: 'Option<BlockNumber>',\n            tips: 'Vec<OpenTipTip>',\n            findersFee: 'bool'\n        },\n        OpenTipTo225: {\n            reason: 'Hash',\n            who: 'AccountId',\n            finder: 'Option<OpenTipFinderTo225>',\n            closes: 'Option<BlockNumber>',\n            tips: 'Vec<OpenTipTip>'\n        },\n        OpenTipFinderTo225: '(AccountId, Balance)',\n        OpenTipTip: '(AccountId, Balance)',\n        TreasuryProposal: {\n            proposer: 'AccountId',\n            value: 'Balance',\n            beneficiary: 'AccountId',\n            bond: 'Balance'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        Multiplier: 'Fixed128'\n    }\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        TransactionSource: {\n            _enum: ['InBlock', 'Local', 'External']\n        },\n        TransactionValidity: 'Result<ValidTransaction, TransactionValidityError>',\n        ValidTransaction: {\n            priority: 'TransactionPriority',\n            requires: 'Vec<TransactionTag>',\n            provides: 'Vec<TransactionTag>',\n            longevity: 'TransactionLongevity',\n            propagate: 'bool'\n        }\n    }\n};\n","export const runtime = {\n    TaggedTransactionQueue: [\n        {\n            methods: {\n                validate_transaction: {\n                    description: 'Validate the transaction.',\n                    params: [\n                        {\n                            name: 'source',\n                            type: 'TransactionSource'\n                        },\n                        {\n                            name: 'tx',\n                            type: 'Extrinsic'\n                        },\n                        {\n                            name: 'blockHash',\n                            type: 'BlockHash'\n                        }\n                    ],\n                    type: 'TransactionValidity'\n                }\n            },\n            version: 3\n        },\n        {\n            methods: {\n                validate_transaction: {\n                    description: 'Validate the transaction.',\n                    params: [\n                        {\n                            name: 'source',\n                            type: 'TransactionSource'\n                        },\n                        {\n                            name: 'tx',\n                            type: 'Extrinsic'\n                        }\n                    ],\n                    type: 'TransactionValidity'\n                }\n            },\n            version: 2\n        },\n        {\n            methods: {\n                validate_transaction: {\n                    description: 'Validate the transaction.',\n                    params: [\n                        {\n                            name: 'tx',\n                            type: 'Extrinsic'\n                        }\n                    ],\n                    type: 'TransactionValidity'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","export default {\n    rpc: {},\n    types: {\n        ClassId: 'u32',\n        InstanceId: 'u32',\n        DepositBalance: 'Balance',\n        DepositBalanceOf: 'Balance',\n        ClassDetails: {\n            owner: 'AccountId',\n            issuer: 'AccountId',\n            admin: 'AccountId',\n            freezer: 'AccountId',\n            totalDeposit: 'DepositBalance',\n            freeHolding: 'bool',\n            instances: 'u32',\n            instanceMetadatas: 'u32',\n            attributes: 'u32',\n            isFrozen: 'bool'\n        },\n        DestroyWitness: {\n            instances: 'Compact<u32>',\n            instanceMetadatas: 'Compact<u32>',\n            attributes: 'Compact<u32>'\n        },\n        InstanceDetails: {\n            owner: 'AccountId',\n            approved: 'Option<AccountId>',\n            isFrozen: 'bool',\n            deposit: 'DepositBalance'\n        },\n        ClassMetadata: {\n            deposit: 'DepositBalance',\n            data: 'Vec<u8>',\n            isFrozen: 'bool'\n        },\n        InstanceMetadata: {\n            deposit: 'DepositBalance',\n            data: 'Vec<u8>',\n            isFrozen: 'bool'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        Multisig: {\n            when: 'Timepoint',\n            deposit: 'Balance',\n            depositor: 'AccountId',\n            approvals: 'Vec<AccountId>'\n        },\n        Timepoint: {\n            height: 'BlockNumber',\n            index: 'u32'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        VestingInfo: {\n            locked: 'Balance',\n            perBlock: 'Balance',\n            startingBlock: 'BlockNumber'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        BlockAttestations: {\n            receipt: 'CandidateReceipt',\n            valid: 'Vec<AccountId>',\n            invalid: 'Vec<AccountId>'\n        },\n        IncludedBlocks: {\n            actualNumber: 'BlockNumber',\n            session: 'SessionIndex',\n            randomSeed: 'H256',\n            activeParachains: 'Vec<ParaId>',\n            paraBlocks: 'Vec<Hash>'\n        },\n        MoreAttestations: {}\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        BridgedBlockHash: 'H256',\n        BridgedBlockNumber: 'BlockNumber',\n        BridgedHeader: 'Header',\n        BridgeMessageId: '(LaneId, MessageNonce)',\n        CallOrigin: {\n            _enum: {\n                SourceRoot: 'Null',\n                TargetAccount: '(AccountId, MultiSigner, MultiSignature)',\n                SourceAccount: 'AccountId'\n            }\n        },\n        ChainId: '[u8; 4]',\n        DeliveredMessages: {\n            begin: 'MessageNonce',\n            end: 'MessageNonce',\n            // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;\n            dispatchResults: 'BitVec'\n        },\n        DispatchFeePayment: {\n            _enum: ['AtSourceChain', 'AtTargetChain']\n        },\n        InboundLaneData: {\n            relayers: 'Vec<UnrewardedRelayer>',\n            lastConfirmedNonce: 'MessageNonce'\n        },\n        InboundRelayer: 'AccountId',\n        InitializationData: {\n            header: 'Header',\n            authorityList: 'AuthorityList',\n            setId: 'SetId',\n            isHalted: 'bool'\n        },\n        LaneId: '[u8; 4]',\n        MessageData: {\n            payload: 'Bytes',\n            fee: 'Balance'\n        },\n        MessagesDeliveryProofOf: {\n            bridgedHeaderHash: 'BlockHash',\n            storageProof: 'Vec<Bytes>',\n            lane: 'LaneId'\n        },\n        MessageKey: {\n            laneId: 'LaneId',\n            nonce: 'MessageNonce'\n        },\n        MessageNonce: 'u64',\n        MessagesProofOf: {\n            bridgedHeaderHash: 'BridgedBlockHash',\n            storageProof: 'Vec<Bytes>',\n            lane: 'LaneId',\n            noncesStart: 'MessageNonce',\n            noncesEnd: 'MessageNonce'\n        },\n        OperatingMode: {\n            _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']\n        },\n        OutboundLaneData: {\n            oldestUnprunedNonce: 'MessageNonce',\n            latestReceivedNonce: 'MessageNonce',\n            latestGeneratedNonce: 'MessageNonce'\n        },\n        OutboundMessageFee: 'Balance',\n        OutboundPayload: {\n            specVersion: 'u32',\n            weight: 'Weight',\n            origin: 'CallOrigin',\n            dispatchFeePayment: 'DispatchFeePayment',\n            call: 'Bytes'\n        },\n        Parameter: 'Null',\n        RelayerId: 'AccountId',\n        UnrewardedRelayer: {\n            relayer: 'RelayerId',\n            messages: 'DeliveredMessages'\n        },\n        UnrewardedRelayersState: {\n            unrewardedRelayer_Entries: 'MessageNonce',\n            messagesInOldestEntry: 'MessageNonce',\n            totalMessages: 'MessageNonce'\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        StatementKind: {\n            _enum: ['Regular', 'Saft']\n        }\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        FundIndex: 'u32',\n        LastContribution: {\n            _enum: {\n                Never: 'Null',\n                PreEnding: 'u32',\n                Ending: 'BlockNumber'\n            }\n        },\n        FundInfo: {\n            depositor: 'AccountId',\n            verifier: 'Option<MultiSigner>',\n            deposit: 'Balance',\n            raised: 'Balance',\n            end: 'BlockNumber',\n            cap: 'Balance',\n            lastContribution: 'LastContribution',\n            firstPeriod: 'LeasePeriod',\n            lastPeriod: 'LeasePeriod',\n            trieIndex: 'TrieIndex'\n        },\n        TrieIndex: 'u32'\n    }\n};\n","import { runtime } from './runtime.js';\nconst dmpQueue = {\n    CollationInfo: {\n        upwardMessages: 'Vec<UpwardMessage>',\n        horizontalMessages: 'Vec<OutboundHrmpMessage>',\n        newValidationCode: 'Option<ValidationCode>',\n        processedDownwardMessages: 'u32',\n        hrmpWatermark: 'RelayBlockNumber',\n        headData: 'HeadData'\n    },\n    CollationInfoV1: {\n        upwardMessages: 'Vec<UpwardMessage>',\n        horizontalMessages: 'Vec<OutboundHrmpMessage>',\n        newValidationCode: 'Option<ValidationCode>',\n        processedDownwardMessages: 'u32',\n        hrmpWatermark: 'RelayBlockNumber'\n    },\n    ConfigData: {\n        maxIndividual: 'Weight'\n    },\n    MessageId: '[u8; 32]',\n    OverweightIndex: 'u64',\n    PageCounter: 'u32',\n    PageIndexData: {\n        beginUsed: 'PageCounter',\n        endUsed: 'PageCounter',\n        overweightCount: 'OverweightIndex'\n    }\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: dmpQueue\n};\n","export const runtime = {\n    AuraUnincludedSegmentApi: [\n        {\n            methods: {\n                can_build_upon: {\n                    description: 'Whether it is legal to extend the chain',\n                    params: [\n                        {\n                            name: 'includedHash',\n                            type: 'BlockHash'\n                        },\n                        {\n                            name: 'slot',\n                            type: 'Slot'\n                        }\n                    ],\n                    type: 'bool'\n                }\n            },\n            version: 1\n        }\n    ],\n    CollectCollationInfo: [\n        {\n            methods: {\n                collect_collation_info: {\n                    description: 'Collect information about a collation.',\n                    params: [\n                        {\n                            name: 'header',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'CollationInfo'\n                }\n            },\n            version: 2\n        },\n        {\n            methods: {\n                collect_collation_info: {\n                    description: 'Collect information about a collation.',\n                    params: [],\n                    type: 'CollationInfoV1'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","const finalityV1 = {\n    methods: {\n        best_finalized: {\n            description: 'Returns number and hash of the best finalized header known to the bridge module.',\n            params: [],\n            type: '(BlockNumber, Hash)'\n        }\n    },\n    version: 1\n};\nexport const runtime = {\n    KusamaFinalityApi: [finalityV1],\n    PolkadotFinalityApi: [finalityV1],\n    RococoFinalityApi: [finalityV1],\n    WestendFinalityApi: [finalityV1]\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n","const PH_V1_TO_V2 = {\n    assumed_validation_data: {\n        description: 'Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'hash',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<(PersistedValidationData, ValidationCodeHash)>'\n    },\n    availability_cores: {\n        description: 'Yields information on all availability cores as relevant to the child block.',\n        params: [],\n        type: 'Vec<CoreState>'\n    },\n    candidate_events: {\n        description: 'Get a vector of events concerning candidates that occurred within a block.',\n        params: [],\n        type: 'Vec<CandidateEvent>'\n    },\n    candidate_pending_availability: {\n        description: 'Get the receipt of a candidate pending availability.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            }\n        ],\n        type: 'Option<CommittedCandidateReceipt>'\n    },\n    check_validation_outputs: {\n        description: 'Checks if the given validation outputs pass the acceptance criteria.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'outputs',\n                type: 'CandidateCommitments'\n            }\n        ],\n        type: 'bool'\n    },\n    dmq_contents: {\n        description: 'Get all the pending inbound messages in the downward message queue for a para.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            }\n        ],\n        type: 'Vec<InboundDownwardMessage>'\n    },\n    inbound_hrmp_channels_contents: {\n        description: 'Get the contents of all channels addressed to the given recipient.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            }\n        ],\n        type: 'Vec<InboundHrmpMessage>'\n    },\n    on_chain_votes: {\n        description: 'Scrape dispute relevant from on-chain, backing votes and resolved disputes.',\n        params: [],\n        type: 'Option<ScrapedOnChainVotes>'\n    },\n    persisted_validation_data: {\n        description: 'Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'assumption',\n                type: 'OccupiedCoreAssumption'\n            }\n        ],\n        type: 'Option<PersistedValidationData>'\n    },\n    session_index_for_child: {\n        description: 'Returns the session index expected at a child of the block.',\n        params: [],\n        type: 'SessionIndex'\n    },\n    validation_code: {\n        description: 'Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'assumption',\n                type: 'OccupiedCoreAssumption'\n            }\n        ],\n        type: 'Option<ValidationCode>'\n    },\n    validation_code_by_hash: {\n        description: 'Get the validation code from its hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'ValidationCodeHash'\n            }\n        ],\n        type: 'Option<ValidationCode>'\n    },\n    validator_groups: {\n        description: 'Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on',\n        params: [],\n        type: '(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)'\n    },\n    validators: {\n        description: 'Get the current validators.',\n        params: [],\n        type: 'Vec<ValidatorId>'\n    }\n};\nconst PH_V2_TO_V3 = {\n    pvfs_require_precheck: {\n        description: 'Returns code hashes of PVFs that require pre-checking by validators in the active set.',\n        params: [],\n        type: 'Vec<ValidationCodeHash>'\n    },\n    session_info: {\n        description: 'Get the session info for the given session, if stored.',\n        params: [\n            {\n                name: 'index',\n                type: 'SessionIndex'\n            }\n        ],\n        type: 'Option<SessionInfo>'\n    },\n    submit_pvf_check_statement: {\n        description: 'Submits a PVF pre-checking statement into the transaction pool.',\n        params: [\n            {\n                name: 'stmt',\n                type: 'PvfCheckStatement'\n            },\n            {\n                name: 'signature',\n                type: 'ValidatorSignature'\n            }\n        ],\n        type: 'Null'\n    },\n    validation_code_hash: {\n        description: 'Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            },\n            {\n                name: 'assumption',\n                type: 'OccupiedCoreAssumption'\n            }\n        ],\n        type: 'Option<ValidationCodeHash>'\n    }\n};\nconst PH_V3 = {\n    disputes: {\n        description: 'Returns all onchain disputes.',\n        params: [],\n        type: 'Vec<(SessionIndex, CandidateHash, DisputeState)>'\n    }\n};\nconst PH_V4 = {\n    session_executor_params: {\n        description: 'Returns execution parameters for the session.',\n        params: [\n            {\n                name: 'sessionIndex',\n                type: 'SessionIndex'\n            }\n        ],\n        type: 'Option<ExecutorParams>'\n    }\n};\nconst PH_V5 = {\n    key_ownership_proof: {\n        description: 'Returns a merkle proof of a validator session key',\n        params: [\n            {\n                name: 'validatorId',\n                type: 'ValidatorId'\n            }\n        ],\n        type: 'Option<OpaqueKeyOwnershipProof>'\n    },\n    submit_report_dispute_lost: {\n        description: 'Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session',\n        params: [\n            {\n                name: 'disputeProof',\n                type: 'DisputeProof'\n            },\n            {\n                name: 'keyOwnershipProof',\n                type: 'OpaqueKeyOwnershipProof'\n            }\n        ],\n        type: 'Option<Null>'\n    },\n    unapplied_slashes: {\n        description: 'Returns a list of validators that lost a past session dispute and need to be slashed',\n        params: [],\n        type: 'Vec<(SessionIndex, CandidateHash, PendingSlashes)>'\n    }\n};\nconst PH_V6 = {\n    minimum_backing_votes: {\n        description: 'Get the minimum number of backing votes for a parachain candidate. This is a staging method! Do not use on production runtimes!',\n        params: [],\n        type: 'u32'\n    }\n};\nconst PH_V7 = {\n    async_backing_params: {\n        description: 'Returns candidate\\'s acceptance limitations for asynchronous backing for a relay parent',\n        params: [],\n        type: 'AsyncBackingParams'\n    },\n    para_backing_state: {\n        description: 'Returns the state of parachain backing for a given para',\n        params: [\n            {\n                name: 'paraId',\n                type: 'ParaId'\n            }\n        ],\n        type: 'Option<BackingState>'\n    }\n};\nconst PH_V8 = {\n    disabled_validators: {\n        description: 'Returns a list of all disabled validators at the given block',\n        params: [],\n        type: 'ValidatorIndex'\n    }\n};\nconst PH_V9 = {\n    node_features: {\n        description: 'Get node features. This is a staging method! Do not use on production runtimes!',\n        params: [],\n        type: 'NodeFeatures'\n    }\n};\nconst PH_V10 = {\n    approval_voting_params: {\n        description: 'Approval voting configuration parameters',\n        params: [],\n        type: 'ApprovalVotingParams'\n    }\n};\nconst PH_V11 = {\n    claim_queue: {\n        description: 'Claim queue',\n        params: [],\n        type: 'BTreeMap<CoreIndex, Vec<u32>>'\n    }\n};\nexport const runtime = {\n    ParachainHost: [\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3,\n                ...PH_V4,\n                ...PH_V5,\n                ...PH_V6,\n                ...PH_V7,\n                ...PH_V8,\n                ...PH_V9,\n                ...PH_V10,\n                ...PH_V11\n            },\n            version: 11\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3,\n                ...PH_V4,\n                ...PH_V5,\n                ...PH_V6,\n                ...PH_V7,\n                ...PH_V8,\n                ...PH_V9,\n                ...PH_V10\n            },\n            version: 10\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3,\n                ...PH_V4,\n                ...PH_V5,\n                ...PH_V6,\n                ...PH_V7,\n                ...PH_V8,\n                ...PH_V9\n            },\n            version: 9\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3,\n                ...PH_V4,\n                ...PH_V5,\n                ...PH_V6,\n                ...PH_V7,\n                ...PH_V8\n            },\n            version: 8\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3,\n                ...PH_V4,\n                ...PH_V5,\n                ...PH_V6,\n                ...PH_V7\n            },\n            version: 7\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3,\n                ...PH_V4,\n                ...PH_V5,\n                ...PH_V6\n            },\n            version: 6\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3,\n                ...PH_V4,\n                ...PH_V5\n            },\n            version: 5\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3,\n                ...PH_V4\n            },\n            version: 4\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3,\n                ...PH_V3\n            },\n            version: 3\n        },\n        {\n            methods: {\n                ...PH_V1_TO_V2,\n                ...PH_V2_TO_V3\n            },\n            version: 2\n        },\n        {\n            methods: {\n                session_info: {\n                    description: 'Get the session info for the given session, if stored.',\n                    params: [\n                        {\n                            name: 'index',\n                            type: 'SessionIndex'\n                        }\n                    ],\n                    type: 'Option<OldV1SessionInfo>'\n                },\n                ...PH_V1_TO_V2\n            },\n            version: 1\n        }\n    ]\n};\n","/* eslint-disable sort-keys */\nconst SlotRange10 = {\n    _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']\n};\nconst SlotRange = {\n    _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'ZeroFour', 'ZeroFive', 'ZeroSix', 'ZeroSeven', 'OneOne', 'OneTwo', 'OneThree', 'OneFour', 'OneFive', 'OneSix', 'OneSeven', 'TwoTwo', 'TwoThree', 'TwoFour', 'TwoFive', 'TwoSix', 'TwoSeven', 'ThreeThree', 'ThreeFour', 'ThreeFive', 'ThreeSix', 'ThreeSeven', 'FourFour', 'FourFive', 'FourSix', 'FourSeven', 'FiveFive', 'FiveSix', 'FiveSeven', 'SixSix', 'SixSeven', 'SevenSeven']\n};\nconst oldTypes = {\n    Bidder: {\n        _enum: {\n            New: 'NewBidder',\n            Existing: 'ParaId'\n        }\n    },\n    IncomingParachain: {\n        _enum: {\n            Unset: 'NewBidder',\n            Fixed: 'IncomingParachainFixed',\n            Deploy: 'IncomingParachainDeploy'\n        }\n    },\n    IncomingParachainDeploy: {\n        code: 'ValidationCode',\n        initialHeadData: 'HeadData'\n    },\n    IncomingParachainFixed: {\n        codeHash: 'Hash',\n        codeSize: 'u32',\n        initialHeadData: 'HeadData'\n    },\n    NewBidder: {\n        who: 'AccountId',\n        sub: 'SubId'\n    },\n    SubId: 'u32'\n};\nexport default {\n    ...oldTypes,\n    AuctionIndex: 'u32',\n    LeasePeriod: 'BlockNumber',\n    LeasePeriodOf: 'BlockNumber',\n    SlotRange10,\n    SlotRange,\n    WinningData10: `[WinningDataEntry; ${SlotRange10._enum.length}]`,\n    WinningData: `[WinningDataEntry; ${SlotRange._enum.length}]`,\n    WinningDataEntry: 'Option<(AccountId, ParaId, BalanceOf)>',\n    WinnersData10: 'Vec<WinnersDataTuple10>',\n    WinnersData: 'Vec<WinnersDataTuple>',\n    WinnersDataTuple10: '(AccountId, ParaId, BalanceOf, SlotRange10)',\n    WinnersDataTuple: '(AccountId, ParaId, BalanceOf, SlotRange)'\n};\n","import hrmpTypes from './hrmp.js';\nimport { runtime } from './runtime.js';\nimport slotTypes from './slots.js';\nconst proposeTypes = {\n    ParachainProposal: {\n        proposer: 'AccountId',\n        genesisHead: 'HeadData',\n        validators: 'Vec<ValidatorId>',\n        name: 'Bytes',\n        balance: 'Balance'\n    },\n    RegisteredParachainInfo: {\n        validators: 'Vec<ValidatorId>',\n        proposer: 'AccountId'\n    }\n};\nconst cumulusTypes = {\n    ServiceQuality: {\n        _enum: ['Ordered', 'Fast']\n    }\n};\nconst disputeTypes = {\n    DisputeLocation: {\n        _enum: ['Local', 'Remote']\n    },\n    DisputeResult: {\n        _enum: ['Valid', 'Invalid']\n    },\n    DisputeState: {\n        validatorsFor: 'BitVec',\n        validatorsAgainst: 'BitVec',\n        start: 'BlockNumber',\n        concludedAt: 'Option<BlockNumber>'\n    },\n    DisputeStatement: {\n        _enum: {\n            Valid: 'ValidDisputeStatementKind',\n            Invalid: 'InvalidDisputeStatementKind'\n        }\n    },\n    DisputeStatementSet: {\n        candidateHash: 'CandidateHash',\n        session: 'SessionIndex',\n        statements: 'Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>'\n    },\n    ExecutorParam: {\n        _enum: {\n            Phantom: 'Null', // index starts at 1... empty slot at 0\n            MaxMemoryPages: 'u32',\n            StackLogicalMax: 'u32',\n            StackNativeMax: 'u32',\n            PrecheckingMaxMemory: 'u64',\n            PvfPrepTimeout: '(PvfPrepTimeoutKind, u64)',\n            PvfExecTimeout: '(PvfExecTimeoutKind, u64)'\n        }\n    },\n    ExecutorParamsHash: 'Hash',\n    ExecutorParams: 'Vec<ExecutorParam>',\n    ExplicitDisputeStatement: {\n        valid: 'bool',\n        candidateHash: 'CandidateHash',\n        session: 'SessionIndex'\n    },\n    InvalidDisputeStatementKind: {\n        _enum: ['Explicit']\n    },\n    MultiDisputeStatementSet: 'Vec<DisputeStatementSet>',\n    PvfExecTimeoutKind: {\n        _enum: ['Backing', 'Approval']\n    },\n    PvfPrepTimeoutKind: {\n        _enum: ['Precheck', 'Lenient']\n    },\n    ValidDisputeStatementKind: {\n        _enum: {\n            Explicit: 'Null',\n            BackingSeconded: 'Hash',\n            BackingValid: 'Hash',\n            ApprovalChecking: 'Null'\n        }\n    }\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        ...cumulusTypes,\n        ...disputeTypes,\n        ...hrmpTypes,\n        ...proposeTypes,\n        ...slotTypes,\n        AbridgedCandidateReceipt: {\n            parachainIndex: 'ParaId',\n            relayParent: 'Hash',\n            headData: 'HeadData',\n            collator: 'CollatorId',\n            signature: 'CollatorSignature',\n            povBlockHash: 'Hash',\n            commitments: 'CandidateCommitments'\n        },\n        AbridgedHostConfiguration: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            maxUpwardQueueCount: 'u32',\n            maxUpwardQueueSize: 'u32',\n            maxUpwardMessageSize: 'u32',\n            maxUpwardMessageNumPerCandidate: 'u32',\n            hrmpMaxMessageNumPerCandidate: 'u32',\n            validationUpgradeFrequency: 'BlockNumber',\n            validationUpgradeDelay: 'BlockNumber'\n        },\n        AbridgedHrmpChannel: {\n            maxCapacity: 'u32',\n            maxTotalSize: 'u32',\n            maxMessageSize: 'u32',\n            msgCount: 'u32',\n            totalSize: 'u32',\n            mqcHead: 'Option<Hash>'\n        },\n        ApprovalVotingParams: {\n            maxApprovalCoalesceCount: 'u32'\n        },\n        AssignmentId: 'AccountId',\n        AssignmentKind: {\n            _enum: {\n                Parachain: 'Null',\n                Parathread: '(CollatorId, u32)'\n            }\n        },\n        AsyncBackingParams: {\n            maxCandidateDepth: 'u32',\n            allowedAncestryLen: 'u32'\n        },\n        AttestedCandidate: {\n            candidate: 'AbridgedCandidateReceipt',\n            validityVotes: 'Vec<ValidityAttestation>',\n            validatorIndices: 'BitVec'\n        },\n        AuthorityDiscoveryId: 'AccountId',\n        AvailabilityBitfield: 'BitVec',\n        AvailabilityBitfieldRecord: {\n            bitfield: 'AvailabilityBitfield',\n            submittedTt: 'BlockNumber'\n        },\n        BackedCandidate: {\n            candidate: 'CommittedCandidateReceipt',\n            validityVotes: 'Vec<ValidityAttestation>',\n            validatorIndices: 'BitVec'\n        },\n        BackingState: {\n            constraints: 'Constraints',\n            pendingAvailability: 'Vec<CandidatePendingAvailability>'\n        },\n        BufferedSessionChange: {\n            applyAt: 'BlockNumber',\n            validators: 'Vec<ValidatorId>',\n            queued: 'Vec<ValidatorId>',\n            sessionIndex: 'SessionIndex'\n        },\n        CandidateCommitments: {\n            upwardMessages: 'Vec<UpwardMessage>',\n            horizontalMessages: 'Vec<OutboundHrmpMessage>',\n            newValidationCode: 'Option<ValidationCode>',\n            headData: 'HeadData',\n            processedDownwardMessages: 'u32',\n            hrmpWatermark: 'BlockNumber'\n        },\n        CandidateDescriptor: {\n            paraId: 'ParaId',\n            relayParent: 'RelayChainHash',\n            collatorId: 'CollatorId',\n            persistedValidationDataHash: 'Hash',\n            povHash: 'Hash',\n            erasureRoot: 'Hash',\n            signature: 'CollatorSignature',\n            paraHead: 'Hash',\n            validationCodeHash: 'ValidationCodeHash'\n        },\n        CandidateEvent: {\n            _enum: {\n                CandidateBacked: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',\n                CandidateIncluded: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',\n                CandidateTimedOut: '(CandidateReceipt, HeadData, CoreIndex)'\n            }\n        },\n        CandidateHash: 'Hash',\n        CandidateInfo: {\n            who: 'AccountId',\n            deposit: 'Balance'\n        },\n        CandidatePendingAvailability: {\n            core: 'CoreIndex',\n            hash: 'CandidateHash',\n            descriptor: 'CandidateDescriptor',\n            availabilityVotes: 'BitVec',\n            backers: 'BitVec',\n            relayParentNumber: 'BlockNumber',\n            backedInNumber: 'BlockNumber',\n            backingGroup: 'GroupIndex'\n        },\n        CandidateReceipt: {\n            descriptor: 'CandidateDescriptor',\n            commitmentsHash: 'Hash'\n        },\n        GlobalValidationData: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            blockNumber: 'BlockNumber'\n        },\n        CollatorId: 'H256',\n        CollatorSignature: 'Signature',\n        CommittedCandidateReceipt: {\n            descriptor: 'CandidateDescriptor',\n            commitments: 'CandidateCommitments'\n        },\n        Constraints: {\n            minRelayParentNumber: 'BlockNumber',\n            maxPovSize: 'u32',\n            maxCodeSize: 'u32',\n            umpRemaining: 'u32',\n            umpRemainingBytes: 'u32',\n            maxUmpNumPerCandidate: 'u32',\n            dmpRemainingMessages: 'Vec<BlockNumber>',\n            hrmpInbound: 'InboundHrmpLimitations',\n            hrmpChannelsOut: 'HashMap<ParaId, OutboundHrmpChannelLimitations>',\n            maxHrmpNumPerCandidate: 'u32',\n            requiredParent: 'HeadData',\n            validationCodeHash: 'ValidationCodeHash',\n            upgradeRestriction: 'Option<UpgradeRestriction>',\n            futureValidationCode: 'Option<(BlockNumber, ValidationCodeHash)>'\n        },\n        CoreAssignment: {\n            core: 'CoreIndex',\n            paraId: 'ParaId',\n            kind: 'AssignmentKind',\n            groupIdx: 'GroupIndex'\n        },\n        CoreIndex: 'u32',\n        CoreOccupied: {\n            _enum: {\n                Parathread: 'ParathreadEntry',\n                Parachain: 'Null'\n            }\n        },\n        CoreState: {\n            _enum: {\n                Occupied: 'OccupiedCore',\n                Scheduled: 'ScheduledCore',\n                Free: 'Null'\n            }\n        },\n        DisputeProof: {\n            timeSlot: 'DisputesTimeSlot',\n            kind: 'SlashingOffenceKind',\n            validatorIndex: 'ValidatorIndex',\n            validatorId: 'ValidatorId'\n        },\n        DisputesTimeSlot: {\n            sessionIndex: 'SessionIndex',\n            candidateHash: 'CandidateHash'\n        },\n        DoubleVoteReport: {\n            identity: 'ValidatorId',\n            first: '(Statement, ValidatorSignature)',\n            second: '(Statement, ValidatorSignature)',\n            proof: 'MembershipProof',\n            signingContext: 'SigningContext'\n        },\n        DownwardMessage: 'Bytes',\n        GroupIndex: 'u32',\n        GroupRotationInfo: {\n            sessionStartBlock: 'BlockNumber',\n            groupRotationFrequency: 'BlockNumber',\n            now: 'BlockNumber'\n        },\n        GlobalValidationSchedule: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            blockNumber: 'BlockNumber'\n        },\n        HeadData: 'Bytes',\n        HostConfiguration: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            maxUpwardQueueCount: 'u32',\n            maxUpwardQueueSize: 'u32',\n            maxUpwardMessageSize: 'u32',\n            maxUpwardMessageNumPerCandidate: 'u32',\n            hrmpMaxMessageNumPerCandidate: 'u32',\n            validationUpgradeFrequency: 'BlockNumber',\n            validationUpgradeDelay: 'BlockNumber',\n            maxPovSize: 'u32',\n            maxDownwardMessageSize: 'u32',\n            preferredDispatchableUpwardMessagesStepWeight: 'Weight',\n            hrmpMaxParachainOutboundChannels: 'u32',\n            hrmpMaxParathreadOutboundChannels: 'u32',\n            hrmpOpenRequestTtl: 'u32',\n            hrmpSenderDeposit: 'Balance',\n            hrmpRecipientDeposit: 'Balance',\n            hrmpChannelMaxCapacity: 'u32',\n            hrmpChannelMaxTotalSize: 'u32',\n            hrmpMaxParachainInboundChannels: 'u32',\n            hrmpMaxParathreadInboundChannels: 'u32',\n            hrmpChannelMaxMessageSize: 'u32',\n            codeRetentionPeriod: 'BlockNumber',\n            parathreadCores: 'u32',\n            parathreadRetries: 'u32',\n            groupRotationFrequency: 'BlockNumber',\n            chainAvailabilityPeriod: 'BlockNumber',\n            threadAvailabilityPeriod: 'BlockNumber',\n            schedulingLookahead: 'u32',\n            maxValidatorsPerCore: 'Option<u32>',\n            maxValidators: 'Option<u32>',\n            disputePeriod: 'SessionIndex',\n            disputePostConclusionAcceptancePeriod: 'BlockNumber',\n            disputeMaxSpamSlots: 'u32',\n            disputeConclusionByTimeOutPeriod: 'BlockNumber',\n            noShowSlots: 'u32',\n            nDelayTranches: 'u32',\n            zerothDelayTrancheWidth: 'u32',\n            neededApprovals: 'u32',\n            relayVrfModuloSamples: 'u32'\n        },\n        InboundDownwardMessage: {\n            pubSentAt: 'BlockNumber',\n            pubMsg: 'DownwardMessage'\n        },\n        InboundHrmpMessage: {\n            sentAt: 'BlockNumber',\n            data: 'Bytes'\n        },\n        InboundHrmpLimitations: {\n            validWatermarks: 'Vec<BlockNumber>'\n        },\n        InboundHrmpMessages: 'Vec<InboundHrmpMessage>',\n        LocalValidationData: {\n            parentHead: 'HeadData',\n            balance: 'Balance',\n            codeUpgradeAllowed: 'Option<BlockNumber>'\n        },\n        MessageIngestionType: {\n            downwardMessages: 'Vec<InboundDownwardMessage>',\n            horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'\n        },\n        MessageQueueChain: 'RelayChainHash',\n        NodeFeatures: 'BitVec',\n        OccupiedCore: {\n            nextUpOnAvailable: 'Option<ScheduledCore>',\n            occupiedSince: 'BlockNumber',\n            timeOutAt: 'BlockNumber',\n            nextUpOnTimeOut: 'Option<ScheduledCore>',\n            availability: 'BitVec',\n            groupResponsible: 'GroupIndex',\n            candidateHash: 'CandidateHash',\n            candidateDescriptor: 'CandidateDescriptor'\n        },\n        OccupiedCoreAssumption: {\n            _enum: ['Included,', 'TimedOut', 'Free']\n        },\n        OutboundHrmpChannelLimitations: {\n            bytesRemaining: 'u32',\n            messagesRemaining: 'u32'\n        },\n        OutboundHrmpMessage: {\n            recipient: 'u32',\n            data: 'Bytes'\n        },\n        PendingSlashes: {\n            _alias: {\n                slashKeys: 'keys'\n            },\n            slashKeys: 'BTreeMap<ValidatorIndex, ValidatorId>',\n            kind: 'SlashingOffenceKind'\n        },\n        ParachainDispatchOrigin: {\n            _enum: ['Signed', 'Parachain', 'Root']\n        },\n        ParachainInherentData: {\n            validationData: 'PersistedValidationData',\n            relayChainState: 'StorageProof',\n            downwardMessages: 'Vec<InboundDownwardMessage>',\n            horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'\n        },\n        ParachainsInherentData: {\n            bitfields: 'SignedAvailabilityBitfields',\n            backedCandidates: 'Vec<BackedCandidate>',\n            disputes: 'MultiDisputeStatementSet',\n            parentHeader: 'Header'\n        },\n        ParaGenesisArgs: {\n            genesisHead: 'Bytes',\n            validationCode: 'Bytes',\n            parachain: 'bool'\n        },\n        ParaId: 'u32',\n        ParaInfo: {\n            manager: 'AccountId',\n            deposit: 'Balance',\n            locked: 'bool'\n        },\n        ParaLifecycle: {\n            _enum: ['Onboarding', 'Parathread', 'Parachain', 'UpgradingToParachain', 'DowngradingToParathread', 'OutgoingParathread', 'OutgoingParachain']\n        },\n        ParaPastCodeMeta: {\n            upgradeTimes: 'Vec<ReplacementTimes>',\n            lastPruned: 'Option<BlockNumber>'\n        },\n        ParaScheduling: {\n            _enum: ['Always', 'Dynamic']\n        },\n        ParathreadClaim: '(ParaId, CollatorId)',\n        ParathreadClaimQueue: {\n            queue: 'Vec<QueuedParathread>',\n            nextCoreOffset: 'u32'\n        },\n        ParathreadEntry: {\n            claim: 'ParathreadClaim',\n            retries: 'u32'\n        },\n        ParaValidatorIndex: 'u32',\n        PersistedValidationData: {\n            parentHead: 'HeadData',\n            relayParentNumber: 'RelayChainBlockNumber',\n            relayParentStorageRoot: 'Hash',\n            maxPovSize: 'u32'\n        },\n        PvfCheckStatement: {\n            accept: 'bool',\n            subject: 'ValidationCodeHash',\n            sessionIndex: 'SessionIndex',\n            validatorIndex: 'ParaValidatorIndex'\n        },\n        QueuedParathread: {\n            claim: 'ParathreadEntry',\n            coreOffset: 'u32'\n        },\n        RelayBlockNumber: 'u32',\n        RelayChainBlockNumber: 'RelayBlockNumber',\n        RelayHash: 'Hash',\n        RelayChainHash: 'RelayHash',\n        Remark: '[u8; 32]',\n        ReplacementTimes: {\n            expectedAt: 'BlockNumber',\n            activatedAt: 'BlockNumber'\n        },\n        Retriable: {\n            _enum: {\n                Never: 'Null',\n                WithRetries: 'u32'\n            }\n        },\n        ScheduledCore: {\n            paraId: 'ParaId',\n            collator: 'Option<CollatorId>'\n        },\n        Scheduling: {\n            _enum: ['Always', 'Dynamic']\n        },\n        ScrapedOnChainVotes: {\n            session: 'SessionIndex',\n            backingValidatorsPerCandidate: 'Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>',\n            disputes: 'MultiDisputeStatementSet'\n        },\n        SessionInfo: {\n            activeValidatorIndices: 'Vec<ParaValidatorIndex>',\n            randomSeed: '[u8; 32]',\n            disputePeriod: 'SessionIndex',\n            validators: 'Vec<ValidatorId>',\n            discoveryKeys: 'Vec<AuthorityDiscoveryId>',\n            assignmentKeys: 'Vec<AssignmentId>',\n            validatorGroups: 'Vec<Vec<ValidatorIndex>>',\n            nCores: 'u32',\n            zerothDelayTrancheWidth: 'u32',\n            relayVrfModuloSamples: 'u32',\n            nDelayTranches: 'u32',\n            noShowSlots: 'u32',\n            neededApprovals: 'u32'\n        },\n        OldV1SessionInfo: {\n            validators: 'Vec<ValidatorId>',\n            discoveryKeys: 'Vec<AuthorityDiscoveryId>',\n            assignmentKeys: 'Vec<AssignmentId>',\n            validatorGroups: 'Vec<Vec<ParaValidatorIndex>>',\n            nCores: 'u32',\n            zerothDelayTrancheWidth: 'u32',\n            relayVrfModuloSamples: 'u32',\n            nDelayTranches: 'u32',\n            noShowSlots: 'u32',\n            neededApprovals: 'u32'\n        },\n        SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',\n        SignedAvailabilityBitfield: {\n            payload: 'BitVec',\n            validatorIndex: 'ParaValidatorIndex',\n            signature: 'ValidatorSignature'\n        },\n        SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',\n        SigningContext: {\n            sessionIndex: 'SessionIndex',\n            parentHash: 'Hash'\n        },\n        SlashingOffenceKind: {\n            _enum: ['ForInvalid', 'AgainstValid']\n        },\n        Statement: {\n            _enum: {\n                Never: 'Null', // starts at 1\n                Candidate: 'Hash',\n                Valid: 'Hash',\n                Invalid: 'Hash'\n            }\n        },\n        TransientValidationData: {\n            maxCodeSize: 'u32',\n            maxHeadDataSize: 'u32',\n            balance: 'Balance',\n            codeUpgradeAllowed: 'Option<BlockNumber>',\n            dmqLength: 'u32'\n        },\n        UpgradeGoAhead: {\n            _enum: ['Abort', 'GoAhead']\n        },\n        UpgradeRestriction: {\n            _enum: ['Present']\n        },\n        UpwardMessage: 'Bytes',\n        ValidationFunctionParams: {\n            maxCodeSize: 'u32',\n            relayChainHeight: 'RelayChainBlockNumber',\n            codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'\n        },\n        ValidationCode: 'Bytes',\n        ValidationCodeHash: 'Hash',\n        ValidationData: {\n            persisted: 'PersistedValidationData',\n            transient: 'TransientValidationData'\n        },\n        ValidationDataType: {\n            validationData: 'ValidationData',\n            relayChainState: 'Vec<Bytes>'\n        },\n        ValidatorSignature: 'Signature',\n        ValidityAttestation: {\n            _enum: {\n                Never: 'Null', // starts at 1\n                Implicit: 'ValidatorSignature',\n                Explicit: 'ValidatorSignature'\n            }\n        },\n        MessagingStateSnapshot: {\n            relayDispatchQueueSize: '(u32, u32)',\n            egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'\n        },\n        MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',\n        SystemInherentData: 'ParachainInherentData',\n        VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'\n    }\n};\n","/* eslint-disable sort-keys */\nexport default {\n    HrmpChannel: {\n        maxCapacity: 'u32',\n        maxTotalSize: 'u32',\n        maxMessageSize: 'u32',\n        msgCount: 'u32',\n        totalSize: 'u32',\n        mqcHead: 'Option<Hash>',\n        senderDeposit: 'Balance',\n        recipientDeposit: 'Balance'\n    },\n    HrmpChannelId: {\n        sender: 'u32',\n        receiver: 'u32'\n    },\n    HrmpOpenChannelRequest: {\n        confirmed: 'bool',\n        age: 'SessionIndex',\n        senderDeposit: 'Balance',\n        maxMessageSize: 'u32',\n        maxCapacity: 'u32',\n        maxTotalSize: 'u32'\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        Approvals: '[bool; 4]'\n    }\n};\n","export default {\n    rpc: {},\n    types: {\n        AccountStatus: {\n            validity: 'AccountValidity',\n            freeBalance: 'Balance',\n            lockedBalance: 'Balance',\n            signature: 'Vec<u8>',\n            vat: 'Permill'\n        },\n        AccountValidity: {\n            _enum: ['Invalid', 'Initiated', 'Pending', 'ValidLow', 'ValidHigh', 'Completed']\n        }\n    }\n};\n","export const v0 = {\n    FungibilityV0: 'FungibilityV1',\n    WildFungibilityV0: 'WildFungibilityV1',\n    AssetInstanceV0: {\n        _enum: {\n            Undefined: 'Null',\n            Index8: 'u8',\n            Index16: 'Compact<u16>',\n            Index32: 'Compact<u32>',\n            Index64: 'Compact<u64>',\n            Index128: 'Compact<u128>',\n            Array4: '[u8; 4]',\n            Array8: '[u8; 8]',\n            Array16: '[u8; 16]',\n            Array32: '[u8; 32]',\n            Blob: 'Vec<u8>'\n        }\n    },\n    JunctionV0: {\n        _enum: {\n            Parent: 'Null',\n            Parachain: 'Compact<u32>',\n            AccountId32: {\n                network: 'NetworkId',\n                id: 'AccountId'\n            },\n            AccountIndex64: {\n                network: 'NetworkId',\n                index: 'Compact<u64>'\n            },\n            AccountKey20: {\n                network: 'NetworkId',\n                key: '[u8; 20]'\n            },\n            PalletInstance: 'u8',\n            GeneralIndex: 'Compact<u128>',\n            GeneralKey: 'Vec<u8>',\n            OnlyChild: 'Null',\n            Plurality: {\n                id: 'BodyId',\n                part: 'BodyPart'\n            }\n        }\n    },\n    MultiAssetV0: {\n        _enum: {\n            None: 'Null',\n            All: 'Null',\n            AllFungible: 'Null',\n            AllNonFungible: 'Null',\n            AllAbstractFungible: 'Vec<u8>',\n            AllAbstractNonFungible: 'Vec<u8>',\n            AllConcreteFungible: 'MultiLocationV0',\n            AllConcreteNonFungible: 'MultiLocationV0',\n            AbstractFungible: {\n                id: 'Vec<u8>',\n                instance: 'Compact<u128>'\n            },\n            AbstractNonFungible: {\n                class: 'Vec<u8>',\n                instance: 'AssetInstanceV0'\n            },\n            ConcreteFungible: {\n                id: 'MultiLocationV0',\n                amount: 'Compact<u128>'\n            },\n            ConcreteNonFungible: {\n                class: 'MultiLocationV0',\n                instance: 'AssetInstanceV0'\n            }\n        }\n    },\n    MultiLocationV0: {\n        _enum: {\n            Here: 'Null',\n            X1: 'JunctionV0',\n            X2: '(JunctionV0, JunctionV0)',\n            X3: '(JunctionV0, JunctionV0, JunctionV0)',\n            X4: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n            X5: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n            X6: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n            X7: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',\n            X8: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)'\n        }\n    },\n    OriginKindV0: {\n        _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n    },\n    ResponseV0: {\n        _enum: {\n            Assets: 'Vec<MultiAssetV0>'\n        }\n    },\n    XcmV0: {\n        _enum: {\n            WithdrawAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            ReserveAssetDeposit: {\n                assets: 'Vec<MultiAssetV0>',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            ReceiveTeleportedAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            QueryResponse: {\n                queryId: 'Compact<u64>',\n                response: 'ResponseV0'\n            },\n            TransferAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0'\n            },\n            TransferReserveAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            Transact: {\n                originType: 'XcmOriginKind',\n                requireWeightAtMost: 'u64',\n                call: 'DoubleEncodedCall'\n            },\n            HrmpNewChannelOpenRequest: {\n                sender: 'Compact<u32>',\n                maxMessageSize: 'Compact<u32>',\n                maxCapacity: 'Compact<u32>'\n            },\n            HrmpChannelAccepted: {\n                recipient: 'Compact<u32>'\n            },\n            HrmpChannelClosing: {\n                initiator: 'Compact<u32>',\n                sender: 'Compact<u32>',\n                recipient: 'Compact<u32>'\n            },\n            RelayedFrom: {\n                who: 'MultiLocationV0',\n                message: 'XcmV0'\n            }\n        }\n    },\n    XcmErrorV0: {\n        _enum: {\n            Undefined: 'Null',\n            Overflow: 'Null',\n            Unimplemented: 'Null',\n            UnhandledXcmVersion: 'Null',\n            UnhandledXcmMessage: 'Null',\n            UnhandledEffect: 'Null',\n            EscalationOfPrivilege: 'Null',\n            UntrustedReserveLocation: 'Null',\n            UntrustedTeleportLocation: 'Null',\n            DestinationBufferOverflow: 'Null',\n            SendFailed: 'Null',\n            CannotReachDestination: '(MultiLocation, Xcm)',\n            MultiLocationFull: 'Null',\n            FailedToDecode: 'Null',\n            BadOrigin: 'Null',\n            ExceedsMaxMessageSize: 'Null',\n            FailedToTransactAsset: 'Null',\n            WeightLimitReached: 'Weight',\n            Wildcard: 'Null',\n            TooMuchWeightRequired: 'Null',\n            NotHoldingFees: 'Null',\n            WeightNotComputable: 'Null',\n            Barrier: 'Null',\n            NotWithdrawable: 'Null',\n            LocationCannotHold: 'Null',\n            TooExpensive: 'Null',\n            AssetNotFound: 'Null',\n            RecursionLimitReached: 'Null'\n        }\n    },\n    XcmOrderV0: {\n        _enum: {\n            Null: 'Null',\n            DepositAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0'\n            },\n            DepositReserveAsset: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            ExchangeAsset: {\n                give: 'Vec<MultiAssetV0>',\n                receive: 'Vec<MultiAssetV0>'\n            },\n            InitiateReserveWithdraw: {\n                assets: 'Vec<MultiAssetV0>',\n                reserve: 'MultiLocationV0',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            InitiateTeleport: {\n                assets: 'Vec<MultiAssetV0>',\n                dest: 'MultiLocationV0',\n                effects: 'Vec<XcmOrderV0>'\n            },\n            QueryHolding: {\n                queryId: 'Compact<u64>',\n                dest: 'MultiLocationV0',\n                assets: 'Vec<MultiAssetV0>'\n            },\n            BuyExecution: {\n                fees: 'MultiAssetV0',\n                weight: 'u64',\n                debt: 'u64',\n                haltOnError: 'bool',\n                xcm: 'Vec<XcmV0>'\n            }\n        }\n    }\n};\n","import { mapXcmTypes } from '@polkadot/types-create';\nimport { v0 } from './v0.js';\nimport { v1 } from './v1.js';\nimport { v2 } from './v2.js';\nconst XCM_LATEST = 'V2';\nconst xcm = {\n    XcmOrigin: {\n        _enum: {\n            Xcm: 'MultiLocation'\n        }\n    },\n    XcmpMessageFormat: {\n        _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']\n    },\n    XcmAssetId: {\n        _enum: {\n            Concrete: 'MultiLocation',\n            Abstract: 'Bytes'\n        }\n    },\n    InboundStatus: {\n        _enum: ['Ok', 'Suspended']\n    },\n    OutboundStatus: {\n        _enum: ['Ok', 'Suspended']\n    },\n    MultiAssets: 'Vec<MultiAsset>'\n};\nconst location = {\n    BodyId: {\n        _enum: {\n            Unit: 'Null',\n            Named: 'Vec<u8>',\n            Index: 'Compact<u32>',\n            Executive: 'Null',\n            Technical: 'Null',\n            Legislative: 'Null',\n            Judicial: 'Null'\n        }\n    },\n    BodyPart: {\n        _enum: {\n            Voice: 'Null',\n            Members: 'Compact<u32>',\n            Fraction: {\n                nom: 'Compact<u32>',\n                denom: 'Compact<u32>'\n            },\n            AtLeastProportion: {\n                nom: 'Compact<u32>',\n                denom: 'Compact<u32>'\n            },\n            MoreThanProportion: {\n                nom: 'Compact<u32>',\n                denom: 'Compact<u32>'\n            }\n        }\n    },\n    InteriorMultiLocation: 'Junctions',\n    NetworkId: {\n        _enum: {\n            Any: 'Null',\n            Named: 'Vec<u8>',\n            Polkadot: 'Null',\n            Kusama: 'Null'\n        }\n    }\n};\nexport default {\n    rpc: {},\n    types: {\n        ...location,\n        ...xcm,\n        ...v0,\n        ...v1,\n        ...v2,\n        ...mapXcmTypes(XCM_LATEST),\n        DoubleEncodedCall: {\n            encoded: 'Vec<u8>'\n        },\n        XcmOriginKind: {\n            _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']\n        },\n        Outcome: {\n            _enum: {\n                Complete: 'Weight',\n                Incomplete: '(Weight, XcmErrorV0)',\n                Error: 'XcmErrorV0'\n            }\n        },\n        QueryId: 'u64',\n        QueryStatus: {\n            _enum: {\n                Pending: {\n                    responder: 'VersionedMultiLocation',\n                    maybeNotify: 'Option<(u8, u8)>',\n                    timeout: 'BlockNumber'\n                },\n                Ready: {\n                    response: 'VersionedResponse',\n                    at: 'BlockNumber'\n                }\n            }\n        },\n        QueueConfigData: {\n            suspendThreshold: 'u32',\n            dropThreshold: 'u32',\n            resumeThreshold: 'u32',\n            thresholdWeight: 'Weight',\n            weightRestrictDecay: 'Weight'\n        },\n        VersionMigrationStage: {\n            _enum: {\n                MigrateSupportedVersion: 'Null',\n                MigrateVersionNotifiers: 'Null',\n                NotifyCurrentTargets: 'Option<Bytes>',\n                MigrateAndNotifyOldTargets: 'Null'\n            }\n        },\n        VersionedMultiAsset: {\n            _enum: {\n                V0: 'MultiAssetV0',\n                V1: 'MultiAssetV1',\n                V2: 'MultiAssetV2'\n            }\n        },\n        VersionedMultiAssets: {\n            _enum: {\n                V0: 'Vec<MultiAssetV0>',\n                V1: 'MultiAssetsV1',\n                V2: 'MultiAssetsV2'\n            }\n        },\n        VersionedMultiLocation: {\n            _enum: {\n                V0: 'MultiLocationV0',\n                V1: 'MultiLocationV1',\n                V2: 'MultiLocationV2'\n            }\n        },\n        VersionedResponse: {\n            V0: 'ResponseV0',\n            V1: 'ResponseV1',\n            V2: 'ResponseV2'\n        },\n        VersionedXcm: {\n            _enum: {\n                V0: 'XcmV0',\n                V1: 'XcmV1',\n                V2: 'XcmV2'\n            }\n        },\n        XcmVersion: 'u32'\n    }\n};\n","export const v1 = {\n    AssetInstanceV1: {\n        _enum: {\n            Undefined: 'Null',\n            Index: 'Compact<u128>',\n            Array4: '[u8; 4]',\n            Array8: '[u8; 8]',\n            Array16: '[u8; 16]',\n            Array32: '[u8; 32]',\n            Blob: 'Bytes'\n        }\n    },\n    FungibilityV1: {\n        _enum: {\n            Fungible: 'Compact<u128>',\n            NonFungible: 'AssetInstanceV1'\n        }\n    },\n    JunctionV1: {\n        _enum: {\n            Parachain: 'Compact<u32>',\n            AccountId32: {\n                network: 'NetworkId',\n                id: 'AccountId'\n            },\n            AccountIndex64: {\n                network: 'NetworkId',\n                index: 'Compact<u64>'\n            },\n            AccountKey20: {\n                network: 'NetworkId',\n                key: '[u8; 20]'\n            },\n            PalletInstance: 'u8',\n            GeneralIndex: 'Compact<u128>',\n            GeneralKey: 'Vec<u8>',\n            OnlyChild: 'Null',\n            Plurality: {\n                id: 'BodyId',\n                part: 'BodyPart'\n            }\n        }\n    },\n    JunctionsV1: {\n        _enum: {\n            Here: 'Null',\n            X1: 'JunctionV1',\n            X2: '(JunctionV1, JunctionV1)',\n            X3: '(JunctionV1, JunctionV1, JunctionV1)',\n            X4: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n            X5: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n            X6: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n            X7: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',\n            X8: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)'\n        }\n    },\n    MultiAssetsV1: 'Vec<MultiAssetV1>',\n    MultiAssetV1: {\n        id: 'XcmAssetId',\n        fungibility: 'FungibilityV1'\n    },\n    MultiAssetFilterV1: {\n        _enum: {\n            Definite: 'MultiAssetsV1',\n            Wild: 'WildMultiAssetV1'\n        }\n    },\n    MultiLocationV1: {\n        parents: 'u8',\n        interior: 'JunctionsV1'\n    },\n    OriginKindV1: 'OriginKindV0',\n    ResponseV1: {\n        _enum: {\n            Assets: 'MultiAssetsV1'\n        }\n    },\n    WildFungibilityV1: {\n        _enum: ['Fungible', 'NonFungible']\n    },\n    WildMultiAssetV1: {\n        _enum: {\n            All: 'Null',\n            AllOf: {\n                id: 'XcmAssetId',\n                fungibility: 'WildFungibilityV1'\n            }\n        }\n    },\n    XcmV1: {\n        _enum: {\n            WithdrawAsset: {\n                assets: 'MultiAssetsV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            ReserveAssetDeposit: {\n                assets: 'MultiAssetsV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            ReceiveTeleportedAsset: {\n                assets: 'MultiAssetsV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            QueryResponse: {\n                queryId: 'Compact<u64>',\n                response: 'ResponseV1'\n            },\n            TransferAsset: {\n                assets: 'MultiAssetsV1',\n                dest: 'MultiLocationV1'\n            },\n            TransferReserveAsset: {\n                assets: 'MultiAssetsV1',\n                dest: 'MultiLocationV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            Transact: {\n                originType: 'XcmOriginKind',\n                requireWeightAtMost: 'u64',\n                call: 'DoubleEncodedCall'\n            },\n            HrmpNewChannelOpenRequest: {\n                sender: 'Compact<u32>',\n                maxMessageSize: 'Compact<u32>',\n                maxCapacity: 'Compact<u32>'\n            },\n            HrmpChannelAccepted: {\n                recipient: 'Compact<u32>'\n            },\n            HrmpChannelClosing: {\n                initiator: 'Compact<u32>',\n                sender: 'Compact<u32>',\n                recipient: 'Compact<u32>'\n            },\n            RelayedFrom: {\n                who: 'MultiLocationV1',\n                message: 'XcmV1'\n            }\n        }\n    },\n    XcmErrorV1: {\n        _enum: {\n            Undefined: 'Null',\n            Overflow: 'Null',\n            Unimplemented: 'Null',\n            UnhandledXcmVersion: 'Null',\n            UnhandledXcmMessage: 'Null',\n            UnhandledEffect: 'Null',\n            EscalationOfPrivilege: 'Null',\n            UntrustedReserveLocation: 'Null',\n            UntrustedTeleportLocation: 'Null',\n            DestinationBufferOverflow: 'Null',\n            SendFailed: 'Null',\n            CannotReachDestination: '(MultiLocationV1, XcmV1)',\n            MultiLocationFull: 'Null',\n            FailedToDecode: 'Null',\n            BadOrigin: 'Null',\n            ExceedsMaxMessageSize: 'Null',\n            FailedToTransactAsset: 'Null',\n            WeightLimitReached: 'Weight',\n            Wildcard: 'Null',\n            TooMuchWeightRequired: 'Null',\n            NotHoldingFees: 'Null',\n            WeightNotComputable: 'Null',\n            Barrier: 'Null',\n            NotWithdrawable: 'Null',\n            LocationCannotHold: 'Null',\n            TooExpensive: 'Null',\n            AssetNotFound: 'Null',\n            DestinationUnsupported: 'Null',\n            RecursionLimitReached: 'Null'\n        }\n    },\n    XcmOrderV1: {\n        _enum: {\n            Noop: 'Null',\n            DepositAsset: {\n                assets: 'MultiAssetFilterV1',\n                maxAssets: 'u32',\n                beneficiary: 'MultiLocationV1'\n            },\n            DepositReserveAsset: {\n                assets: 'MultiAssetFilterV1',\n                maxAssets: 'u32',\n                dest: 'MultiLocationV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            ExchangeAsset: {\n                give: 'MultiAssetFilterV1',\n                receive: 'MultiAssetsV1'\n            },\n            InitiateReserveWithdraw: {\n                assets: 'MultiAssetFilterV1',\n                reserve: 'MultiLocationV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            InitiateTeleport: {\n                assets: 'MultiAssetFilterV1',\n                dest: 'MultiLocationV1',\n                effects: 'Vec<XcmOrderV1>'\n            },\n            QueryHolding: {\n                queryId: 'Compact<u64>',\n                dest: 'MultiLocationV1',\n                assets: 'MultiAssetFilterV1'\n            },\n            BuyExecution: {\n                fees: 'MultiAssetV1',\n                weight: 'u64',\n                debt: 'u64',\n                haltOnError: 'bool',\n                instructions: 'Vec<XcmV1>'\n            }\n        }\n    }\n};\n","export const v2 = {\n    AssetInstanceV2: 'AssetInstanceV1',\n    FungibilityV2: 'FungibilityV1',\n    JunctionV2: 'JunctionV1',\n    JunctionsV2: 'JunctionsV1',\n    MultiAssetsV2: 'MultiAssetsV1',\n    MultiAssetV2: 'MultiAssetV1',\n    MultiAssetFilterV2: 'MultiAssetFilterV1',\n    MultiLocationV2: 'MultiLocationV1',\n    OriginKindV2: 'OriginKindV1',\n    WildFungibilityV2: 'WildFungibilityV1',\n    ResponseV2: {\n        _enum: {\n            Null: 'Null',\n            Assets: 'MultiAssetsV2',\n            ExecutionResult: 'ResponseV2Result'\n        }\n    },\n    ResponseV2Error: '(u32, XcmErrorV2)',\n    ResponseV2Result: 'Result<Null, ResponseV2Error>',\n    WeightLimitV2: {\n        _enum: {\n            Unlimited: 'Null',\n            Limited: 'Compact<u64>'\n        }\n    },\n    InstructionV2: {\n        _enum: {\n            WithdrawAsset: 'MultiAssetsV2',\n            ReserveAssetDeposited: 'MultiAssetsV2',\n            ReceiveTeleportedAsset: 'MultiAssetsV2',\n            QueryResponse: {\n                queryId: 'Compact<u64>',\n                response: 'ResponseV2',\n                maxWeight: 'Compact<u64>'\n            },\n            TransferAsset: {\n                assets: 'MultiAssetsV2',\n                beneficiary: 'MultiLocationV2'\n            },\n            TransferReserveAsset: {\n                assets: 'MultiAssetsV2',\n                dest: 'MultiLocationV2',\n                xcm: 'XcmV2'\n            },\n            Transact: {\n                originType: 'OriginKindV2',\n                requireWeightAtMost: 'u64',\n                call: 'DoubleEncodedCall'\n            },\n            HrmpNewChannelOpenRequest: {\n                sender: 'Compact<u32>',\n                maxMessageSize: 'Compact<u32>',\n                maxCapacity: 'Compact<u32>'\n            },\n            HrmpChannelAccepted: {\n                recipient: 'Compact<u32>'\n            },\n            HrmpChannelClosing: {\n                initiator: 'Compact<u32>',\n                sender: 'Compact<u32>',\n                recipient: 'Compact<u32>'\n            },\n            ClearOrigin: 'Null',\n            DescendOrigin: 'InteriorMultiLocation',\n            ReportError: {\n                queryId: 'Compact<u64>',\n                dest: 'MultiLocationV2',\n                maxResponseWeight: 'Compact<u64>'\n            },\n            DepositAsset: {\n                assets: 'MultiAssetFilterV2',\n                maxAssets: 'u32',\n                beneficiary: 'MultiLocationV2'\n            },\n            DepositReserveAsset: {\n                assets: 'MultiAssetFilterV2',\n                maxAssets: 'u32',\n                dest: 'MultiLocationV2',\n                xcm: 'XcmV2'\n            },\n            ExchangeAsset: {\n                give: 'MultiAssetFilterV2',\n                receive: 'MultiAssetsV2'\n            },\n            InitiateReserveWithdraw: {\n                assets: 'MultiAssetFilterV2',\n                reserve: 'MultiLocationV2',\n                xcm: 'XcmV2'\n            },\n            InitiateTeleport: {\n                assets: 'MultiAssetFilterV2',\n                dest: 'MultiLocationV2',\n                xcm: 'XcmV2'\n            },\n            QueryHolding: {\n                query_id: 'Compact<u64>',\n                dest: 'MultiLocationV2',\n                assets: 'MultiAssetFilterV2',\n                maxResponse_Weight: 'Compact<u64>'\n            },\n            BuyExecution: {\n                fees: 'MultiAssetV2',\n                weightLimit: 'WeightLimitV2'\n            },\n            RefundSurplus: 'Null',\n            SetErrorHandler: 'XcmV2',\n            SetAppendix: 'XcmV2',\n            ClearError: 'Null',\n            ClaimAsset: {\n                assets: 'MultiAssetsV2',\n                ticket: 'MultiLocationV2'\n            },\n            Trap: 'u64'\n        }\n    },\n    WildMultiAssetV2: 'WildMultiAssetV1',\n    XcmV2: 'Vec<InstructionV2>',\n    XcmErrorV2: {\n        _enum: {\n            Undefined: 'Null',\n            Overflow: 'Null',\n            Unimplemented: 'Null',\n            UnhandledXcmVersion: 'Null',\n            UnhandledXcmMessage: 'Null',\n            UnhandledEffect: 'Null',\n            EscalationOfPrivilege: 'Null',\n            UntrustedReserveLocation: 'Null',\n            UntrustedTeleportLocation: 'Null',\n            DestinationBufferOverflow: 'Null',\n            MultiLocationFull: 'Null',\n            MultiLocationNotInvertible: 'Null',\n            FailedToDecode: 'Null',\n            BadOrigin: 'Null',\n            ExceedsMaxMessageSize: 'Null',\n            FailedToTransactAsset: 'Null',\n            WeightLimitReached: 'Weight',\n            Wildcard: 'Null',\n            TooMuchWeightRequired: 'Null',\n            NotHoldingFees: 'Null',\n            WeightNotComputable: 'Null',\n            Barrier: 'Null',\n            NotWithdrawable: 'Null',\n            LocationCannotHold: 'Null',\n            TooExpensive: 'Null',\n            AssetNotFound: 'Null',\n            DestinationUnsupported: 'Null',\n            RecursionLimitReached: 'Null',\n            Transport: 'Null',\n            Unroutable: 'Null',\n            UnknownWeightRequired: 'Null',\n            Trap: 'u64',\n            UnknownClaim: 'Null',\n            InvalidLocation: 'Null'\n        }\n    },\n    XcmOrderV2: 'XcmOrderV1'\n};\n","/* eslint-disable sort-keys */\nconst layout = {\n    ContractCryptoHasher: {\n        _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']\n    },\n    ContractDiscriminant: 'u32',\n    ContractLayoutArray: {\n        offset: 'ContractLayoutKey',\n        len: 'u32',\n        cellsPerElem: 'u64',\n        layout: 'ContractStorageLayout'\n    },\n    ContractLayoutCell: {\n        key: 'ContractLayoutKey',\n        ty: 'SiLookupTypeId'\n    },\n    ContractLayoutEnum: {\n        dispatchKey: 'ContractLayoutKey',\n        variants: 'BTreeMap<ContractDiscriminant, ContractLayoutStruct>'\n    },\n    ContractLayoutHash: {\n        offset: 'ContractLayoutKey',\n        strategy: 'ContractLayoutHashingStrategy',\n        layout: 'ContractStorageLayout'\n    },\n    ContractLayoutHashingStrategy: {\n        hasher: 'ContractCryptoHasher',\n        postfix: 'Vec<u8>',\n        prefix: 'Vec<u8>'\n    },\n    ContractLayoutKey: '[u8; 32]',\n    ContractLayoutStruct: {\n        fields: 'Vec<ContractLayoutStructField>'\n    },\n    ContractLayoutStructField: {\n        layout: 'ContractStorageLayout',\n        name: 'Text'\n    },\n    ContractStorageLayout: {\n        _enum: {\n            Cell: 'ContractLayoutCell',\n            Hash: 'ContractLayoutHash',\n            Array: 'ContractLayoutArray',\n            Struct: 'ContractLayoutStruct',\n            Enum: 'ContractLayoutEnum'\n        }\n    }\n};\nconst spec = {\n    ContractConstructorSpecV0: {\n        name: 'Text',\n        selector: 'ContractSelector',\n        args: 'Vec<ContractMessageParamSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractConstructorSpecV1: {\n        name: 'Vec<Text>',\n        selector: 'ContractSelector',\n        args: 'Vec<ContractMessageParamSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractConstructorSpecV2: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractConstructorSpecV3: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractConstructorSpecV4: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        docs: 'Vec<Text>',\n        default: 'bool',\n        returnType: 'Option<ContractTypeSpec>'\n    },\n    ContractContractSpecV0: {\n        constructors: 'Vec<ContractConstructorSpecV0>',\n        messages: 'Vec<ContractMessageSpecV0>',\n        events: 'Vec<ContractEventSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractContractSpecV1: {\n        constructors: 'Vec<ContractConstructorSpecV1>',\n        messages: 'Vec<ContractMessageSpecV1>',\n        events: 'Vec<ContractEventSpecV1>',\n        docs: 'Vec<Text>'\n    },\n    ContractContractSpecV2: {\n        constructors: 'Vec<ContractConstructorSpecV2>',\n        messages: 'Vec<ContractMessageSpecV2>',\n        events: 'Vec<ContractEventSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractContractSpecV3: {\n        constructors: 'Vec<ContractConstructorSpecV3>',\n        messages: 'Vec<ContractMessageSpecV2>',\n        events: 'Vec<ContractEventSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractContractSpecV4: {\n        constructors: 'Vec<ContractConstructorSpecV4>',\n        messages: 'Vec<ContractMessageSpecV3>',\n        events: 'Vec<ContractEventSpecV2>',\n        docs: 'Vec<Text>',\n        environment: 'ContractEnvironmentV4'\n    },\n    ContractContractSpecV5: {\n        constructors: 'Vec<ContractConstructorSpecV4>',\n        messages: 'Vec<ContractMessageSpecV3>',\n        events: 'Vec<ContractEventSpecV3>',\n        docs: 'Vec<Text>',\n        environment: 'ContractEnvironmentV4'\n    },\n    ContractDisplayName: 'SiPath',\n    ContractEventParamSpecV0: {\n        name: 'Text',\n        indexed: 'bool',\n        type: 'ContractTypeSpec',\n        docs: 'Vec<Text>'\n    },\n    ContractEventParamSpecV2: {\n        label: 'Text',\n        indexed: 'bool',\n        type: 'ContractTypeSpec',\n        docs: 'Vec<Text>'\n    },\n    ContractEventSpecV0: {\n        name: 'Text',\n        args: 'Vec<ContractEventParamSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractEventSpecV1: {\n        name: 'Text',\n        args: 'Vec<ContractEventParamSpecV0>',\n        docs: 'Vec<Text>'\n    },\n    ContractEventSpecV2: {\n        label: 'Text',\n        args: 'Vec<ContractEventParamSpecV2>',\n        docs: 'Vec<Text>'\n    },\n    ContractEventSpecV3: {\n        label: 'Text',\n        args: 'Vec<ContractEventParamSpecV2>',\n        docs: 'Vec<Text>',\n        module_path: 'Text',\n        signature_topic: 'Option<[u8; 32]>'\n    },\n    ContractMessageParamSpecV0: {\n        name: 'Text',\n        type: 'ContractTypeSpec'\n    },\n    ContractMessageParamSpecV2: {\n        label: 'Text',\n        type: 'ContractTypeSpec'\n    },\n    ContractMessageSpecV0: {\n        name: 'Text',\n        selector: 'ContractSelector',\n        mutates: 'bool',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV0>',\n        returnType: 'Option<ContractTypeSpec>',\n        docs: 'Vec<Text>'\n    },\n    ContractMessageSpecV1: {\n        name: 'Vec<Text>',\n        selector: 'ContractSelector',\n        mutates: 'bool',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV0>',\n        returnType: 'Option<ContractTypeSpec>',\n        docs: 'Vec<Text>'\n    },\n    ContractMessageSpecV2: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        mutates: 'bool',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        returnType: 'Option<ContractTypeSpec>',\n        docs: 'Vec<Text>'\n    },\n    ContractMessageSpecV3: {\n        label: 'Text',\n        selector: 'ContractSelector',\n        mutates: 'bool',\n        payable: 'bool',\n        args: 'Vec<ContractMessageParamSpecV2>',\n        returnType: 'Option<ContractTypeSpec>',\n        docs: 'Vec<Text>',\n        default: 'bool'\n    },\n    ContractSelector: '[u8; 4]',\n    ContractTypeSpec: {\n        type: 'SiLookupTypeId',\n        displayName: 'ContractDisplayName'\n    }\n};\nconst latest = {\n    ContractConstructorSpecLatest: 'ContractConstructorSpecV4',\n    ContractEventSpecLatest: 'ContractEventSpecV3',\n    ContractEventParamSpecLatest: 'ContractEventParamSpecV2',\n    ContractMessageParamSpecLatest: 'ContractMessageParamSpecV2',\n    ContractMessageSpecLatest: 'ContractMessageSpecV3',\n    ContractMetadataLatest: 'ContractMetadataV5'\n};\nexport default {\n    rpc: {},\n    types: {\n        ...layout,\n        ...spec,\n        ...latest,\n        ContractProjectInfo: {\n            source: 'ContractProjectSource',\n            contract: 'ContractProjectContract'\n        },\n        ContractMetadataV0: {\n            metadataVersion: 'Text',\n            types: 'Vec<Si0Type>',\n            spec: 'ContractContractSpecV0'\n        },\n        ContractMetadataV1: {\n            types: 'Vec<PortableType>',\n            spec: 'ContractContractSpecV1'\n        },\n        ContractMetadataV2: {\n            types: 'Vec<PortableType>',\n            spec: 'ContractContractSpecV2'\n        },\n        ContractMetadataV3: {\n            types: 'Vec<PortableType>',\n            spec: 'ContractContractSpecV3'\n        },\n        ContractMetadataV4: {\n            types: 'Vec<PortableType>',\n            spec: 'ContractContractSpecV4',\n            version: 'Text'\n        },\n        ContractMetadataV5: {\n            types: 'Vec<PortableType>',\n            spec: 'ContractContractSpecV5',\n            version: 'u64'\n        },\n        ContractMetadata: {\n            _enum: {\n                V0: 'ContractMetadataV0',\n                V1: 'ContractMetadataV1',\n                V2: 'ContractMetadataV2',\n                V3: 'ContractMetadataV3',\n                V4: 'ContractMetadataV4',\n                V5: 'ContractMetadataV5'\n            }\n        },\n        ContractProjectV0: {\n            metadataVersion: 'Text',\n            source: 'ContractProjectSource',\n            contract: 'ContractProjectContract',\n            types: 'Vec<Si0Type>',\n            spec: 'ContractContractSpecV0'\n        },\n        ContractProject: '(ContractProjectInfo, ContractMetadata)',\n        ContractProjectContract: {\n            _alias: {\n                docs: 'documentation'\n            },\n            name: 'Text',\n            version: 'Text',\n            authors: 'Vec<Text>',\n            description: 'Option<Text>',\n            docs: 'Option<Text>',\n            repository: 'Option<Text>',\n            homepage: 'Option<Text>',\n            license: 'Option<Text>'\n        },\n        ContractProjectSource: {\n            _alias: {\n                wasmHash: 'hash'\n            },\n            wasmHash: '[u8; 32]',\n            language: 'Text',\n            compiler: 'Text',\n            wasm: 'Raw'\n        },\n        ContractEnvironmentV4: {\n            _alias: {\n                hashType: 'hash'\n            },\n            // NOTE These are not marked optional in the Rust code, however since we\n            // convert from older versions to newer, we may not have these fields.\n            // The Option<...> works since our inputs are always JSON, so it will\n            // be None when not specified.\n            //\n            // Additionally we don't mark the full structure as Option, rather we\n            // do it on a per-field basis since fields may be added as the versions\n            // progress.\n            accountId: 'Option<ContractTypeSpec>',\n            balance: 'Option<ContractTypeSpec>',\n            blockNumber: 'Option<ContractTypeSpec>',\n            hashType: 'Option<ContractTypeSpec>',\n            timestamp: 'Option<ContractTypeSpec>',\n            maxEventTopics: 'Option<u32>'\n        }\n    }\n};\n","const ethMethodsV4 = {\n    account_basic: {\n        description: 'Returns pallet_evm::Accounts by address.',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            }\n        ],\n        type: 'EvmAccount'\n    },\n    account_code_at: {\n        description: 'For a given account address, returns pallet_evm::AccountCodes.',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            }\n        ],\n        type: 'Bytes'\n    },\n    author: {\n        description: 'Returns the converted FindAuthor::find_author authority id.',\n        params: [],\n        type: 'H160'\n    },\n    call: {\n        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',\n        params: [\n            {\n                name: 'from',\n                type: 'H160'\n            },\n            {\n                name: 'to',\n                type: 'H160'\n            },\n            {\n                name: 'data',\n                type: 'Vec<u8>'\n            },\n            {\n                name: 'value',\n                type: 'U256'\n            },\n            {\n                name: 'gasLimit',\n                type: 'U256'\n            },\n            {\n                name: 'maxFeePerGas',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'maxPriorityFeePerGas',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'nonce',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'estimate',\n                type: 'bool'\n            },\n            {\n                name: 'accessList',\n                type: 'Option<Vec<(H160, Vec<H256>)>>'\n            }\n        ],\n        type: 'Result<EvmCallInfo, DispatchError>'\n    },\n    chain_id: {\n        description: 'Returns runtime defined pallet_evm::ChainId.',\n        params: [],\n        type: 'u64'\n    },\n    create: {\n        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',\n        params: [\n            {\n                name: 'from',\n                type: 'H160'\n            },\n            {\n                name: 'data',\n                type: 'Vec<u8>'\n            },\n            {\n                name: 'value',\n                type: 'U256'\n            },\n            {\n                name: 'gasLimit',\n                type: 'U256'\n            },\n            {\n                name: 'maxFeePerGas',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'maxPriorityFeePerGas',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'nonce',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'estimate',\n                type: 'bool'\n            },\n            {\n                name: 'accessList',\n                type: 'Option<Vec<(H160, Vec<H256>)>>'\n            }\n        ],\n        type: 'Result<EvmCreateInfo, DispatchError>'\n    },\n    current_all: {\n        description: 'Return all the current data for a block in a single runtime call.',\n        params: [],\n        type: '(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)'\n    },\n    current_block: {\n        description: 'Return the current block.',\n        params: [],\n        type: 'BlockV2'\n    },\n    current_receipts: {\n        description: 'Return the current receipt.',\n        params: [],\n        type: 'Option<Vec<EthReceiptV3>>'\n    },\n    current_transaction_statuses: {\n        description: 'Return the current transaction status.',\n        params: [],\n        type: 'Option<Vec<EthTransactionStatus>>'\n    },\n    elasticity: {\n        description: 'Return the elasticity multiplier.',\n        params: [],\n        type: 'Option<Permill>'\n    },\n    extrinsic_filter: {\n        description: 'Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.',\n        params: [\n            {\n                name: 'xts',\n                type: 'Vec<Extrinsic>'\n            }\n        ],\n        type: 'Vec<TransactionV2>'\n    },\n    gas_price: {\n        description: 'Returns FixedGasPrice::min_gas_price',\n        params: [],\n        type: 'u256'\n    },\n    storage_at: {\n        description: 'For a given account address and index, returns pallet_evm::AccountStorages.',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                name: 'index',\n                type: 'u256'\n            }\n        ],\n        type: 'H256'\n    }\n};\nconst ethMethodsV5 = {\n    call: {\n        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',\n        params: [\n            {\n                name: 'from',\n                type: 'H160'\n            },\n            {\n                name: 'to',\n                type: 'H160'\n            },\n            {\n                name: 'data',\n                type: 'Vec<u8>'\n            },\n            {\n                name: 'value',\n                type: 'U256'\n            },\n            {\n                name: 'gasLimit',\n                type: 'U256'\n            },\n            {\n                name: 'maxFeePerGas',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'maxPriorityFeePerGas',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'nonce',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'estimate',\n                type: 'bool'\n            },\n            {\n                name: 'accessList',\n                type: 'Option<Vec<(H160, Vec<H256>)>>'\n            }\n        ],\n        type: 'Result<EvmCallInfoV2, DispatchError>'\n    },\n    create: {\n        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',\n        params: [\n            {\n                name: 'from',\n                type: 'H160'\n            },\n            {\n                name: 'data',\n                type: 'Vec<u8>'\n            },\n            {\n                name: 'value',\n                type: 'U256'\n            },\n            {\n                name: 'gasLimit',\n                type: 'U256'\n            },\n            {\n                name: 'maxFeePerGas',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'maxPriorityFeePerGas',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'nonce',\n                type: 'Option<U256>'\n            },\n            {\n                name: 'estimate',\n                type: 'bool'\n            },\n            {\n                name: 'accessList',\n                type: 'Option<Vec<(H160, Vec<H256>)>>'\n            }\n        ],\n        type: 'Result<EvmCreateInfoV2, DispatchError>'\n    }\n};\nexport const runtime = {\n    ConvertTransactionRuntimeApi: [\n        {\n            methods: {\n                convert_transaction: {\n                    description: 'Converts an Ethereum-style transaction to Extrinsic',\n                    params: [\n                        {\n                            name: 'transaction',\n                            type: 'TransactionV2'\n                        }\n                    ],\n                    type: 'Extrinsic'\n                }\n            },\n            version: 2\n        }\n    ],\n    DebugRuntimeApi: [\n        {\n            methods: {\n                trace_block: {\n                    description: 'Trace all block extrinsics',\n                    params: [\n                        {\n                            name: 'extrinsics',\n                            type: 'Vec<Extrinsic>'\n                        },\n                        {\n                            name: 'knownTransactions',\n                            type: 'Vec<H256>'\n                        }\n                    ],\n                    type: 'Result<(), DispatchError>'\n                },\n                trace_transaction: {\n                    description: 'Trace transaction extrinsics',\n                    params: [\n                        {\n                            name: 'extrinsics',\n                            type: 'Vec<Extrinsic>'\n                        },\n                        {\n                            name: 'transaction',\n                            type: 'EthTransaction'\n                        }\n                    ],\n                    type: 'Result<(), DispatchError>'\n                }\n            },\n            version: 4\n        }\n    ],\n    EthereumRuntimeRPCApi: [\n        {\n            methods: {\n                ...ethMethodsV4\n            },\n            version: 4\n        },\n        {\n            methods: {\n                ...ethMethodsV4,\n                ...ethMethodsV5\n            },\n            version: 5\n        }\n    ]\n};\n","import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nconst V0 = {\n    BlockV0: {\n        header: 'EthHeader',\n        transactions: 'Vec<TransactionV0>',\n        ommers: 'Vec<EthHeader>'\n    },\n    LegacyTransaction: {\n        nonce: 'U256',\n        gasPrice: 'U256',\n        gasLimit: 'U256',\n        action: 'EthTransactionAction',\n        value: 'U256',\n        input: 'Bytes',\n        signature: 'EthTransactionSignature'\n    },\n    TransactionV0: 'LegacyTransaction'\n};\nconst V1 = {\n    BlockV1: {\n        header: 'EthHeader',\n        transactions: 'Vec<TransactionV1>',\n        ommers: 'Vec<EthHeader>'\n    },\n    EIP2930Transaction: {\n        chainId: 'u64',\n        nonce: 'U256',\n        gasPrice: 'U256',\n        gasLimit: 'U256',\n        action: 'EthTransactionAction',\n        value: 'U256',\n        input: 'Bytes',\n        accessList: 'EthAccessList',\n        oddYParity: 'bool',\n        r: 'H256',\n        s: 'H256'\n    },\n    TransactionV1: {\n        _enum: {\n            Legacy: 'LegacyTransaction',\n            EIP2930: 'EIP2930Transaction'\n        }\n    }\n};\nconst V2 = {\n    BlockV2: {\n        header: 'EthHeader',\n        transactions: 'Vec<TransactionV2>',\n        ommers: 'Vec<EthHeader>'\n    },\n    EIP1559Transaction: {\n        chainId: 'u64',\n        nonce: 'U256',\n        maxPriorityFeePerGas: 'U256',\n        maxFeePerGas: 'U256',\n        gasLimit: 'U256',\n        action: 'EthTransactionAction',\n        value: 'U256',\n        input: 'Bytes',\n        accessList: 'EthAccessList',\n        oddYParity: 'bool',\n        r: 'H256',\n        s: 'H256'\n    },\n    TransactionV2: {\n        _enum: {\n            Legacy: 'LegacyTransaction',\n            EIP2930: 'EIP2930Transaction',\n            EIP1559: 'EIP1559Transaction'\n        }\n    }\n};\nconst types = {\n    ...V0,\n    ...V1,\n    ...V2,\n    EthereumAccountId: 'GenericEthereumAccountId',\n    EthereumAddress: 'GenericEthereumAccountId',\n    EthereumLookupSource: 'GenericEthereumLookupSource',\n    EthereumSignature: '[u8; 65]',\n    EthAccessListItem: {\n        address: 'EthAddress',\n        slots: 'Vec<H256>'\n    },\n    EthAccessList: 'Vec<EthAccessListItem>',\n    EthAccount: {\n        address: 'EthAddress',\n        balance: 'U256',\n        nonce: 'U256',\n        codeHash: 'H256',\n        storageHash: 'H256',\n        accountProof: 'Vec<Bytes>',\n        storageProof: 'Vec<EthStorageProof>'\n    },\n    EthAddress: 'H160',\n    EthBlock: {\n        header: 'EthHeader',\n        transactions: 'Vec<EthTransaction>',\n        ommers: 'Vec<EthHeader>'\n    },\n    EthHeader: {\n        parentHash: 'H256',\n        ommersHash: 'H256',\n        beneficiary: 'EthAddress',\n        stateRoot: 'H256',\n        transactionsRoot: 'H256',\n        receiptsRoot: 'H256',\n        logsBloom: 'EthBloom',\n        difficulty: 'U256',\n        number: 'U256',\n        gasLimit: 'U256',\n        gasUsed: 'U256',\n        timestamp: 'u64',\n        extraData: 'Bytes',\n        mixMash: 'H256',\n        nonce: 'H64'\n    },\n    EthRichBlock: {\n        _alias: {\n            blockHash: 'hash',\n            blockSize: 'size'\n        },\n        blockHash: 'Option<H256>',\n        parentHash: 'H256',\n        sha3Uncles: 'H256',\n        author: 'EthAddress',\n        miner: 'EthAddress',\n        stateRoot: 'H256',\n        transactionsRoot: 'H256',\n        receiptsRoot: 'H256',\n        number: 'Option<U256>',\n        gasUsed: 'U256',\n        gasLimit: 'U256',\n        extraData: 'Bytes',\n        logsBloom: 'EthBloom',\n        timestamp: 'U256',\n        difficulty: 'U256',\n        totalDifficulty: 'Option<U256>',\n        sealFields: 'Vec<Bytes>',\n        uncles: 'Vec<H256>',\n        transactions: 'Vec<EthTransaction>',\n        blockSize: 'Option<U256>'\n    },\n    EthBloom: 'H2048',\n    EthCallRequest: {\n        from: 'Option<EthAddress>',\n        to: 'Option<EthAddress>',\n        gasPrice: 'Option<U256>',\n        gas: 'Option<U256>',\n        value: 'Option<U256>',\n        data: 'Option<Bytes>',\n        nonce: 'Option<U256>'\n    },\n    EthFeeHistory: {\n        oldestBlock: 'U256',\n        baseFeePerGas: 'Vec<U256>',\n        gasUsedRatio: 'Vec<f64>',\n        reward: 'Option<Vec<Vec<U256>>>'\n    },\n    EthFilter: {\n        fromBlock: 'Option<BlockNumber>',\n        toBlock: 'Option<BlockNumber>',\n        blockHash: 'Option<H256>',\n        address: 'Option<EthFilterAddress>',\n        topics: 'Option<EthFilterTopic>'\n    },\n    EthFilterAddress: {\n        _enum: {\n            Single: 'EthAddress',\n            Multiple: 'Vec<EthAddress>',\n            Null: 'Null'\n        }\n    },\n    EthFilterChanges: {\n        _enum: {\n            Logs: 'Vec<EthLog>',\n            Hashes: 'Vec<H256>',\n            Empty: 'Null'\n        }\n    },\n    EthFilterTopic: {\n        _enum: {\n            Single: 'EthFilterTopicInner',\n            Multiple: 'Vec<EthFilterTopicInner>',\n            Null: 'Null'\n        }\n    },\n    EthFilterTopicEntry: 'Option<H256>',\n    EthFilterTopicInner: {\n        _enum: {\n            Single: 'EthFilterTopicEntry',\n            Multiple: 'Vec<EthFilterTopicEntry>',\n            Null: 'Null'\n        }\n    },\n    EthRichHeader: {\n        _alias: {\n            blockHash: 'hash',\n            blockSize: 'size'\n        },\n        blockHash: 'Option<H256>',\n        parentHash: 'H256',\n        sha3Uncles: 'H256',\n        author: 'EthAddress',\n        miner: 'EthAddress',\n        stateRoot: 'H256',\n        transactionsRoot: 'H256',\n        receiptsRoot: 'H256',\n        number: 'Option<U256>',\n        gasUsed: 'U256',\n        gasLimit: 'U256',\n        extraData: 'Bytes',\n        logsBloom: 'EthBloom',\n        timestamp: 'U256',\n        difficulty: 'U256',\n        sealFields: 'Vec<Bytes>',\n        blockSize: 'Option<U256>'\n    },\n    EthLog: {\n        address: 'EthAddress',\n        topics: 'Vec<H256>',\n        data: 'Bytes',\n        blockHash: 'Option<H256>',\n        blockNumber: 'Option<U256>',\n        transactionHash: 'Option<H256>',\n        transactionIndex: 'Option<U256>',\n        logIndex: 'Option<U256>',\n        transactionLogIndex: 'Option<U256>',\n        removed: 'bool'\n    },\n    EthReceipt: {\n        transactionHash: 'Option<H256>',\n        transactionIndex: 'Option<U256>',\n        blockHash: 'Option<H256>',\n        from: 'Option<EthAddress>',\n        to: 'Option<EthAddress>',\n        blockNumber: 'Option<U256>',\n        cumulativeGasUsed: 'U256',\n        gasUsed: 'Option<U256>',\n        contractAddress: 'Option<EthAddress>',\n        logs: 'Vec<EthLog>',\n        root: 'Option<H256>',\n        logsBloom: 'EthBloom',\n        statusCode: 'Option<U64>'\n    },\n    // not convinced, however the original commit matches, so... (maybe V3 is incorrect?)\n    EthReceiptV0: 'EthReceipt',\n    EthReceiptV3: 'EthReceipt',\n    EthStorageProof: {\n        key: 'U256',\n        value: 'U256',\n        proof: 'Vec<Bytes>'\n    },\n    EthSubKind: {\n        _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']\n    },\n    EthSubParams: {\n        _enum: {\n            None: 'Null',\n            Logs: 'EthFilter'\n        }\n    },\n    EthSubResult: {\n        _enum: {\n            Header: 'EthRichHeader',\n            Log: 'EthLog',\n            TransactionHash: 'H256',\n            SyncState: 'EthSyncStatus'\n        }\n    },\n    EthSyncInfo: {\n        startingBlock: 'U256',\n        currentBlock: 'U256',\n        highestBlock: 'U256',\n        warpChunksAmount: 'Option<U256>',\n        warpChunksProcessed: 'Option<U256>'\n    },\n    EthSyncStatus: {\n        _enum: {\n            Info: 'EthSyncInfo',\n            None: 'Null'\n        }\n    },\n    EthTransaction: {\n        hash: 'H256',\n        nonce: 'U256',\n        blockHash: 'Option<H256>',\n        blockNumber: 'Option<U256>',\n        transactionIndex: 'Option<U256>',\n        from: 'H160',\n        to: 'Option<H160>',\n        value: 'U256',\n        gasPrice: 'Option<U256>',\n        maxFeePerGas: 'Option<U256>',\n        maxPriorityFeePerGas: 'Option<U256>',\n        gas: 'U256',\n        input: 'Bytes',\n        creates: 'Option<H160>',\n        raw: 'Bytes',\n        publicKey: 'Option<H512>',\n        chainId: 'Option<U64>',\n        standardV: 'U256',\n        v: 'U256',\n        r: 'U256',\n        s: 'U256',\n        accessList: 'Option<Vec<EthAccessListItem>>',\n        transactionType: 'Option<U256>'\n    },\n    EthTransactionSignature: {\n        v: 'u64',\n        r: 'H256',\n        s: 'H256'\n    },\n    EthTransactionAction: {\n        _enum: {\n            Call: 'H160',\n            Create: 'Null'\n        }\n    },\n    EthTransactionCondition: {\n        _enum: {\n            block: 'u64',\n            time: 'u64'\n        }\n    },\n    EthTransactionRequest: {\n        from: 'Option<EthAddress>',\n        to: 'Option<EthAddress>',\n        gasPrice: 'Option<U256>',\n        gas: 'Option<U256>',\n        value: 'Option<U256>',\n        data: 'Option<Bytes>',\n        nonce: 'Option<U256>'\n    },\n    EthTransactionStatus: {\n        transactionHash: 'H256',\n        transactionIndex: 'u32',\n        from: 'EthAddress',\n        to: 'Option<EthAddress>',\n        contractAddress: 'Option<EthAddress>',\n        logs: 'Vec<EthLog>',\n        logsBloom: 'EthBloom'\n    },\n    EthWork: {\n        powHash: 'H256',\n        seedHash: 'H256',\n        target: 'H256',\n        number: 'Option<u64>'\n    }\n};\nexport default { rpc, runtime, types };\n","const netRpc = {\n    listening: {\n        aliasSection: 'net',\n        description: 'Returns true if client is actively listening for network connections. Otherwise false.',\n        params: [],\n        type: 'bool'\n    },\n    peerCount: {\n        aliasSection: 'net',\n        description: 'Returns number of peers connected to node.',\n        params: [],\n        type: 'Text'\n    },\n    version: {\n        aliasSection: 'net',\n        description: 'Returns protocol version.',\n        params: [],\n        type: 'Text'\n    }\n};\nconst web3Rpc = {\n    clientVersion: {\n        aliasSection: 'web3',\n        description: 'Returns current client version.',\n        params: [],\n        type: 'Text'\n    },\n    sha3: {\n        aliasSection: 'web3',\n        description: 'Returns sha3 of the given data',\n        params: [{ name: 'data', type: 'Bytes' }],\n        type: 'H256'\n    }\n};\nexport const rpc = {\n    ...netRpc,\n    ...web3Rpc,\n    accounts: {\n        description: 'Returns accounts list.',\n        params: [],\n        type: 'Vec<H160>'\n    },\n    blockNumber: {\n        description: 'Returns the blockNumber',\n        params: [],\n        type: 'U256'\n    },\n    call: {\n        description: 'Call contract, returning the output data.',\n        params: [\n            {\n                name: 'request',\n                type: 'EthCallRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'Bytes'\n    },\n    chainId: {\n        description: 'Returns the chain ID used for transaction signing at the current best block. None is returned if not available.',\n        params: [],\n        type: 'U64'\n    },\n    coinbase: {\n        description: 'Returns block author.',\n        params: [],\n        type: 'H160'\n    },\n    estimateGas: {\n        description: 'Estimate gas needed for execution of given contract.',\n        params: [\n            {\n                name: 'request',\n                type: 'EthCallRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    feeHistory: {\n        description: 'Returns fee history for given block count & reward percentiles',\n        params: [\n            {\n                name: 'blockCount',\n                type: 'U256'\n            },\n            {\n                name: 'newestBlock',\n                type: 'BlockNumber'\n            },\n            {\n                name: 'rewardPercentiles',\n                type: 'Option<Vec<f64>>'\n            }\n        ],\n        type: 'EthFeeHistory'\n    },\n    gasPrice: {\n        description: 'Returns current gas price.',\n        params: [],\n        type: 'U256'\n    },\n    getBalance: {\n        description: 'Returns balance of the given account.',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    getBlockByHash: {\n        description: 'Returns block with given hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            },\n            {\n                name: 'full',\n                type: 'bool'\n            }\n        ],\n        type: 'Option<EthRichBlock>'\n    },\n    getBlockByNumber: {\n        description: 'Returns block with given number.',\n        params: [\n            {\n                name: 'block',\n                type: 'BlockNumber'\n            },\n            { name: 'full', type: 'bool' }\n        ],\n        type: 'Option<EthRichBlock>'\n    },\n    getBlockTransactionCountByHash: {\n        description: 'Returns the number of transactions in a block with given hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'U256'\n    },\n    getBlockTransactionCountByNumber: {\n        description: 'Returns the number of transactions in a block with given block number.',\n        params: [\n            {\n                name: 'block',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    getCode: {\n        description: 'Returns the code at given address at given time (block number).',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'Bytes'\n    },\n    getFilterChanges: {\n        description: 'Returns filter changes since last poll.',\n        params: [\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthFilterChanges'\n    },\n    getFilterLogs: {\n        description: 'Returns all logs matching given filter (in a range \\'from\\' - \\'to\\').',\n        params: [\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'Vec<EthLog>'\n    },\n    getLogs: {\n        description: 'Returns logs matching given filter object.',\n        params: [\n            {\n                name: 'filter',\n                type: 'EthFilter'\n            }\n        ],\n        type: 'Vec<EthLog>'\n    },\n    getProof: {\n        description: 'Returns proof for account and storage.',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                name: 'storageKeys',\n                type: 'Vec<H256>'\n            },\n            {\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'EthAccount'\n    },\n    getStorageAt: {\n        description: 'Returns content of the storage at given address.',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'H256'\n    },\n    getTransactionByBlockHashAndIndex: {\n        description: 'Returns transaction at given block hash and index.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthTransaction'\n    },\n    getTransactionByBlockNumberAndIndex: {\n        description: 'Returns transaction by given block number and index.',\n        params: [\n            {\n                name: 'number',\n                type: 'BlockNumber'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthTransaction'\n    },\n    getTransactionByHash: {\n        description: 'Get transaction by its hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'EthTransaction'\n    },\n    getTransactionCount: {\n        description: 'Returns the number of transactions sent from given address at given time (block number).',\n        params: [\n            {\n                name: 'address',\n                type: 'H160'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    getTransactionReceipt: {\n        description: 'Returns transaction receipt by transaction hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'EthReceipt'\n    },\n    getUncleByBlockHashAndIndex: {\n        description: 'Returns an uncles at given block and index.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthRichBlock'\n    },\n    getUncleByBlockNumberAndIndex: {\n        description: 'Returns an uncles at given block and index.',\n        params: [\n            {\n                name: 'number',\n                type: 'BlockNumber'\n            },\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'EthRichBlock'\n    },\n    getUncleCountByBlockHash: {\n        description: 'Returns the number of uncles in a block with given hash.',\n        params: [\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'U256'\n    },\n    getUncleCountByBlockNumber: {\n        description: 'Returns the number of uncles in a block with given block number.',\n        params: [\n            {\n                name: 'number',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'U256'\n    },\n    getWork: {\n        description: 'Returns the hash of the current block, the seedHash, and the boundary condition to be met.',\n        params: [],\n        type: 'EthWork'\n    },\n    hashrate: {\n        description: 'Returns the number of hashes per second that the node is mining with.',\n        params: [],\n        type: 'U256'\n    },\n    maxPriorityFeePerGas: {\n        description: 'Returns max priority fee per gas',\n        params: [],\n        type: 'U256'\n    },\n    mining: {\n        description: 'Returns true if client is actively mining new blocks.',\n        params: [],\n        type: 'bool'\n    },\n    newBlockFilter: {\n        description: 'Returns id of new block filter.',\n        params: [],\n        type: 'U256'\n    },\n    newFilter: {\n        description: 'Returns id of new filter.',\n        params: [\n            {\n                name: 'filter',\n                type: 'EthFilter'\n            }\n        ],\n        type: 'U256'\n    },\n    newPendingTransactionFilter: {\n        description: 'Returns id of new block filter.',\n        params: [],\n        type: 'U256'\n    },\n    protocolVersion: {\n        description: 'Returns protocol version encoded as a string (quotes are necessary).',\n        params: [],\n        type: 'u64'\n    },\n    sendRawTransaction: {\n        description: 'Sends signed transaction, returning its hash.',\n        params: [\n            {\n                name: 'bytes',\n                type: 'Bytes'\n            }\n        ],\n        type: 'H256'\n    },\n    sendTransaction: {\n        description: 'Sends transaction; will block waiting for signer to return the transaction hash',\n        params: [\n            {\n                name: 'tx',\n                type: 'EthTransactionRequest'\n            }\n        ],\n        type: 'H256'\n    },\n    submitHashrate: {\n        description: 'Used for submitting mining hashrate.',\n        params: [\n            {\n                name: 'index',\n                type: 'U256'\n            },\n            {\n                name: 'hash',\n                type: 'H256'\n            }\n        ],\n        type: 'bool'\n    },\n    submitWork: {\n        description: 'Used for submitting a proof-of-work solution.',\n        params: [\n            {\n                name: 'nonce',\n                type: 'H64'\n            },\n            {\n                name: 'headerHash',\n                type: 'H256'\n            },\n            {\n                name: 'mixDigest',\n                type: 'H256'\n            }\n        ],\n        type: 'bool'\n    },\n    subscribe: {\n        description: 'Subscribe to Eth subscription.',\n        params: [\n            { name: 'kind', type: 'EthSubKind' },\n            {\n                isOptional: true,\n                name: 'params',\n                type: 'EthSubParams'\n            }\n        ],\n        pubsub: [\n            'subscription',\n            'subscribe',\n            'unsubscribe'\n        ],\n        type: 'Null'\n    },\n    syncing: {\n        description: 'Returns an object with data about the sync status or false.',\n        params: [],\n        type: 'EthSyncStatus'\n    },\n    uninstallFilter: {\n        description: 'Uninstalls filter.',\n        params: [\n            {\n                name: 'index',\n                type: 'U256'\n            }\n        ],\n        type: 'bool'\n    }\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n","export const runtime = {\n    // deprecated, the NimbusApi is current - this is for backwards compat\n    AuthorFilterAPI: [\n        {\n            methods: {\n                can_author: {\n                    description: 'The runtime api used to predict whether an author will be eligible in the given slot',\n                    params: [\n                        {\n                            name: 'author',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'relayParent',\n                            type: 'u32'\n                        },\n                        {\n                            name: 'parentHeader',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'bool'\n                }\n            },\n            version: 2\n        },\n        {\n            methods: {\n                can_author: {\n                    description: 'The runtime api used to predict whether an author will be eligible in the given slot',\n                    params: [\n                        {\n                            name: 'author',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'relayParent',\n                            type: 'u32'\n                        }\n                    ],\n                    type: 'bool'\n                }\n            },\n            version: 1\n        }\n    ],\n    NimbusApi: [\n        {\n            methods: {\n                can_author: {\n                    description: 'The runtime api used to predict whether a Nimbus author will be eligible in the given slot',\n                    params: [\n                        {\n                            name: 'author',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'relayParent',\n                            type: 'u32'\n                        },\n                        {\n                            name: 'parentHeader',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'bool'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n","export const runtime = {\n    // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/oracle/rpc/runtime-api/src/lib.rs#L12-L21\n    OracleApi: [\n        {\n            methods: {\n                get_all_values: {\n                    description: 'Retrieves all values',\n                    params: [\n                        {\n                            name: 'providerId',\n                            // This is a Codec type\n                            type: 'Raw'\n                        }\n                    ],\n                    // This won't actually work as expected - since we have\n                    // no information about the actual Raw sizes, we cannot\n                    // handle it in this format (it would need an override\n                    // for the specific Codec). So return the Raw value.\n                    // type: 'Vec<(Raw, Option<Raw>)>'\n                    type: 'Raw'\n                },\n                get_value: {\n                    description: 'Retrieves a single value',\n                    params: [\n                        {\n                            name: 'providerId',\n                            // This is a Codec type\n                            type: 'Raw'\n                        },\n                        {\n                            name: 'key',\n                            // This is a Codec type\n                            type: 'Raw'\n                        }\n                    ],\n                    // This is an Option<Codec> type\n                    type: 'Option<Raw>'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","import { runtime } from './runtime.js';\nexport default {\n    rpc: {},\n    runtime,\n    types: {}\n};\n","export const runtime = {\n    // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/tokens/rpc/runtime-api/src/lib.rs#L11-L18\n    TokensApi: [\n        {\n            methods: {\n                query_existential_deposit: {\n                    description: 'Query the existential amount for a specific currency',\n                    params: [\n                        {\n                            name: 'currencyId',\n                            // This is CurrencyId, as per the return value, we are unsure\n                            // if this is specialized and/or global to the chain or not\n                            type: 'Raw'\n                        }\n                    ],\n                    // This is Balance - since we don't understand enough about the way\n                    // in which this is used, we default to u128 here (it certainly could\n                    // be a specialized type that doesn't map to the on-chain Balance)\n                    type: 'u128'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        RpcMethods: {\n            version: 'u32',\n            methods: 'Vec<Text>'\n        }\n    }\n};\n","export const rpc = {\n    methods: {\n        description: 'Retrieves the list of RPC methods that are exposed by the node',\n        params: [],\n        type: 'RpcMethods'\n    }\n};\n","import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        ExtrinsicOrHash: {\n            _enum: {\n                Hash: 'Hash',\n                Extrinsic: 'Bytes'\n            }\n        },\n        ExtrinsicStatus: {\n            _enum: {\n                Future: 'Null',\n                Ready: 'Null',\n                Broadcast: 'Vec<Text>',\n                InBlock: 'Hash',\n                Retracted: 'Hash',\n                FinalityTimeout: 'Hash',\n                Finalized: 'Hash',\n                Usurped: 'Hash',\n                Dropped: 'Null',\n                Invalid: 'Null'\n            }\n        }\n    }\n};\n","export const rpc = {\n    hasKey: {\n        description: 'Returns true if the keystore has private keys for the given public key and key type.',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'publicKey',\n                type: 'Bytes'\n            },\n            {\n                name: 'keyType',\n                type: 'Text'\n            }\n        ],\n        type: 'bool'\n    },\n    hasSessionKeys: {\n        description: 'Returns true if the keystore has private keys for the given session public keys.',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'sessionKeys',\n                type: 'Bytes'\n            }\n        ],\n        type: 'bool'\n    },\n    insertKey: {\n        description: 'Insert a key into the keystore.',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'keyType',\n                type: 'Text'\n            },\n            {\n                name: 'suri',\n                type: 'Text'\n            },\n            {\n                name: 'publicKey',\n                type: 'Bytes'\n            }\n        ],\n        type: 'Bytes'\n    },\n    pendingExtrinsics: {\n        description: 'Returns all pending extrinsics, potentially grouped by sender',\n        params: [],\n        type: 'Vec<Extrinsic>'\n    },\n    removeExtrinsic: {\n        description: 'Remove given extrinsic from the pool and temporarily ban it to prevent reimporting',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'bytesOrHash',\n                type: 'Vec<ExtrinsicOrHash>'\n            }\n        ],\n        type: 'Vec<Hash>'\n    },\n    rotateKeys: {\n        description: 'Generate new session keys and returns the corresponding public keys',\n        isUnsafe: true,\n        params: [],\n        type: 'Bytes'\n    },\n    submitAndWatchExtrinsic: {\n        description: 'Submit and subscribe to watch an extrinsic until unsubscribed',\n        isSigned: true,\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Extrinsic'\n            }\n        ],\n        pubsub: [\n            'extrinsicUpdate',\n            'submitAndWatchExtrinsic',\n            'unwatchExtrinsic'\n        ],\n        type: 'ExtrinsicStatus'\n    },\n    submitExtrinsic: {\n        description: 'Submit a fully formatted extrinsic for block inclusion',\n        isSigned: true,\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Extrinsic'\n            }\n        ],\n        type: 'Hash'\n    }\n};\n","import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        BlockHash: 'Hash'\n    }\n};\n","export const rpc = {\n    getBlock: {\n        description: 'Get header and body of a relay chain block',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'hash',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'SignedBlock'\n    },\n    getBlockHash: {\n        description: 'Get the block hash for a specific block',\n        params: [\n            {\n                isOptional: true,\n                name: 'blockNumber',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'BlockHash'\n    },\n    getFinalizedHead: {\n        alias: ['chain_getFinalisedHead'],\n        description: 'Get hash of the last finalized block in the canon chain',\n        params: [],\n        type: 'BlockHash'\n    },\n    getHeader: {\n        alias: ['chain_getHead'],\n        description: 'Retrieves the header for a specific block',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'hash',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Header'\n    },\n    subscribeAllHeads: {\n        description: 'Retrieves the newest header via subscription',\n        params: [],\n        pubsub: [\n            'allHead',\n            'subscribeAllHeads',\n            'unsubscribeAllHeads'\n        ],\n        type: 'Header'\n    },\n    subscribeFinalizedHeads: {\n        alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],\n        description: 'Retrieves the best finalized header via subscription',\n        params: [],\n        pubsub: [\n            'finalizedHead',\n            'subscribeFinalizedHeads',\n            'unsubscribeFinalizedHeads'\n        ],\n        type: 'Header'\n    },\n    subscribeNewHeads: {\n        alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],\n        description: 'Retrieves the best header via subscription',\n        params: [],\n        // NOTE These still has the aliassed version, compatible with 1.x\n        pubsub: [\n            'newHead',\n            'subscribeNewHead',\n            'unsubscribeNewHead'\n        ],\n        type: 'Header'\n    }\n};\n","import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        // StorageKey extends Bytes\n        PrefixedStorageKey: 'StorageKey'\n    }\n};\n","export const rpc = {\n    getKeys: {\n        description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'prefix',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n        alias: ['childstate_getKeysPagedAt'],\n        description: 'Returns the keys with prefix from a child storage with pagination support',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'prefix',\n                type: 'StorageKey'\n            },\n            {\n                name: 'count',\n                type: 'u32'\n            },\n            {\n                isOptional: true,\n                name: 'startKey',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n        description: 'Returns a child storage entry at a specific block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<StorageData>'\n    },\n    getStorageEntries: {\n        description: 'Returns child storage entries for multiple keys at a specific block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Vec<Option<StorageData>>'\n    },\n    getStorageHash: {\n        description: 'Returns the hash of a child storage entry at a block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<Hash>'\n    },\n    getStorageSize: {\n        description: 'Returns the size of a child storage entry at a block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<u64>'\n    }\n};\n","import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        StorageKind: {\n            _enum: {\n                PERSISTENT: 1,\n                LOCAL: 2\n            }\n        }\n    }\n};\n","export const rpc = {\n    localStorageGet: {\n        description: 'Get offchain local storage under given key and prefix',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'kind',\n                type: 'StorageKind'\n            },\n            {\n                name: 'key',\n                type: 'Bytes'\n            }\n        ],\n        type: 'Option<Bytes>'\n    },\n    localStorageSet: {\n        description: 'Set offchain local storage under given key and prefix',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'kind',\n                type: 'StorageKind'\n            },\n            {\n                name: 'key',\n                type: 'Bytes'\n            },\n            {\n                name: 'value',\n                type: 'Bytes'\n            }\n        ],\n        type: 'Null'\n    }\n};\n","export const runtime = {\n    OffchainWorkerApi: [\n        {\n            methods: {\n                offchain_worker: {\n                    description: 'Starts the off-chain task for given block header.',\n                    params: [\n                        {\n                            name: 'header',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'Null'\n                }\n            },\n            version: 2\n        },\n        {\n            methods: {\n                offchain_worker: {\n                    description: 'Starts the off-chain task for given block header.',\n                    params: [\n                        {\n                            name: 'number',\n                            type: 'BlockNumber'\n                        }\n                    ],\n                    type: 'Null'\n                }\n            },\n            version: 1\n        }\n    ]\n};\n","const V1_TO_V4_SHARED_PAY = {\n    query_fee_details: {\n        description: 'The transaction fee details',\n        params: [\n            {\n                name: 'uxt',\n                type: 'Extrinsic'\n            },\n            {\n                name: 'len',\n                type: 'u32'\n            }\n        ],\n        type: 'FeeDetails'\n    }\n};\nconst V1_TO_V3_SHARED_CALL = {\n    query_call_fee_details: {\n        description: 'The call fee details',\n        params: [\n            {\n                name: 'call',\n                type: 'Call'\n            },\n            {\n                name: 'len',\n                type: 'u32'\n            }\n        ],\n        type: 'FeeDetails'\n    }\n};\nconst V2_TO_V4_SHARED_PAY = {\n    query_info: {\n        description: 'The transaction info',\n        params: [\n            {\n                name: 'uxt',\n                type: 'Extrinsic'\n            },\n            {\n                name: 'len',\n                type: 'u32'\n            }\n        ],\n        type: 'RuntimeDispatchInfo'\n    }\n};\nconst V2_V3_SHARED_CALL = {\n    query_call_info: {\n        description: 'The call info',\n        params: [\n            {\n                name: 'call',\n                type: 'Call'\n            },\n            {\n                name: 'len',\n                type: 'u32'\n            }\n        ],\n        type: 'RuntimeDispatchInfo'\n    }\n};\nconst V3_SHARED_PAY_CALL = {\n    query_length_to_fee: {\n        description: 'Query the output of the current LengthToFee given some input',\n        params: [\n            {\n                name: 'length',\n                type: 'u32'\n            }\n        ],\n        type: 'Balance'\n    },\n    query_weight_to_fee: {\n        description: 'Query the output of the current WeightToFee given some input',\n        params: [\n            {\n                name: 'weight',\n                type: 'Weight'\n            }\n        ],\n        type: 'Balance'\n    }\n};\nexport const runtime = {\n    TransactionPaymentApi: [\n        {\n            // V4 is equivalent to V3 (V4 just dropped all V1 references)\n            methods: {\n                ...V3_SHARED_PAY_CALL,\n                ...V2_TO_V4_SHARED_PAY,\n                ...V1_TO_V4_SHARED_PAY\n            },\n            version: 4\n        },\n        {\n            methods: {\n                ...V3_SHARED_PAY_CALL,\n                ...V2_TO_V4_SHARED_PAY,\n                ...V1_TO_V4_SHARED_PAY\n            },\n            version: 3\n        },\n        {\n            methods: {\n                ...V2_TO_V4_SHARED_PAY,\n                ...V1_TO_V4_SHARED_PAY\n            },\n            version: 2\n        },\n        {\n            methods: {\n                query_info: {\n                    description: 'The transaction info',\n                    params: [\n                        {\n                            name: 'uxt',\n                            type: 'Extrinsic'\n                        },\n                        {\n                            name: 'len',\n                            type: 'u32'\n                        }\n                    ],\n                    // NOTE: _Should_ be V1 (as per current Substrate), however the interface was\n                    // changed mid-flight between versions. So we have some of each depending on\n                    // runtime. (We do detect the weight type, so correct)\n                    type: 'RuntimeDispatchInfo'\n                },\n                ...V1_TO_V4_SHARED_PAY\n            },\n            version: 1\n        }\n    ],\n    TransactionPaymentCallApi: [\n        {\n            methods: {\n                ...V3_SHARED_PAY_CALL,\n                ...V2_V3_SHARED_CALL,\n                ...V1_TO_V3_SHARED_CALL\n            },\n            version: 3\n        },\n        {\n            methods: {\n                ...V2_V3_SHARED_CALL,\n                ...V1_TO_V3_SHARED_CALL\n            },\n            version: 2\n        },\n        {\n            methods: {\n                CALL: {\n                    description: 'The call info',\n                    params: [\n                        {\n                            name: 'call',\n                            type: 'Call'\n                        },\n                        {\n                            name: 'len',\n                            type: 'u32'\n                        }\n                    ],\n                    // NOTE: As per the above comment, the below is correct according to Substrate, but\n                    // _may_ yield fallback decoding on some versions of the runtime\n                    type: 'RuntimeDispatchInfo'\n                },\n                ...V1_TO_V3_SHARED_CALL\n            },\n            version: 1\n        }\n    ]\n};\n","import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        FeeDetails: {\n            inclusionFee: 'Option<InclusionFee>'\n            // skipped in serde\n            // tip: 'Balance'\n        },\n        InclusionFee: {\n            baseFee: 'Balance',\n            lenFee: 'Balance',\n            adjustedWeightFee: 'Balance'\n        },\n        RuntimeDispatchInfo: {\n            weight: 'Weight',\n            class: 'DispatchClass',\n            partialFee: 'Balance'\n        },\n        RuntimeDispatchInfoV1: {\n            weight: 'WeightV1',\n            class: 'DispatchClass',\n            partialFee: 'Balance'\n        },\n        RuntimeDispatchInfoV2: {\n            weight: 'WeightV2',\n            class: 'DispatchClass',\n            partialFee: 'Balance'\n        }\n    }\n};\n","export const rpc = {\n    queryFeeDetails: {\n        // NOTE: Not deprecated (yet) in Substrate, but it is the intent to do so\n        deprecated: 'Use `api.call.transactionPaymentApi.queryFeeDetails` instead',\n        description: 'Query the detailed fee of a given encoded extrinsic',\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Bytes'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'FeeDetails'\n    },\n    queryInfo: {\n        // NOTE: Not deprecated (yet) in Substrate, but it is the intent to do so\n        deprecated: 'Use `api.call.transactionPaymentApi.queryInfo` instead',\n        description: 'Retrieves the fee information for an encoded extrinsic',\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Bytes'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        // NOTE: Stuck on V1 forever (at least for the time being)\n        type: 'RuntimeDispatchInfoV1'\n    }\n};\n","import { rpc } from './rpc.js';\nexport default {\n    rpc,\n    types: {\n        ApiId: '[u8; 8]',\n        BlockTrace: {\n            blockHash: 'Text',\n            parentHash: 'Text',\n            tracingTargets: 'Text',\n            storageKeys: 'Text',\n            spans: 'Vec<BlockTraceSpan>',\n            events: 'Vec<BlockTraceEvent>'\n        },\n        BlockTraceEvent: {\n            target: 'Text',\n            data: 'BlockTraceEventData',\n            parentId: 'Option<u64>'\n        },\n        BlockTraceEventData: {\n            stringValues: 'HashMap<Text, Text>'\n        },\n        BlockTraceSpan: {\n            id: 'u64',\n            parentId: 'Option<u64>',\n            name: 'Text',\n            target: 'Text',\n            wasm: 'bool'\n        },\n        KeyValueOption: '(StorageKey, Option<StorageData>)',\n        MigrationStatusResult: {\n            topRemainingToMigrate: 'u64',\n            childRemainingToMigrate: 'u64'\n        },\n        ReadProof: {\n            at: 'Hash',\n            proof: 'Vec<Bytes>'\n        },\n        RuntimeVersionApi: '(ApiId, u32)',\n        RuntimeVersion: {\n            specName: 'Text',\n            implName: 'Text',\n            authoringVersion: 'u32',\n            specVersion: 'u32',\n            implVersion: 'u32',\n            apis: 'Vec<RuntimeVersionApi>',\n            transactionVersion: 'u32',\n            stateVersion: 'u8'\n        },\n        RuntimeVersionPre4: {\n            specName: 'Text',\n            implName: 'Text',\n            authoringVersion: 'u32',\n            specVersion: 'u32',\n            implVersion: 'u32',\n            apis: 'Vec<RuntimeVersionApi>',\n            transactionVersion: 'u32'\n        },\n        RuntimeVersionPre3: {\n            specName: 'Text',\n            implName: 'Text',\n            authoringVersion: 'u32',\n            specVersion: 'u32',\n            implVersion: 'u32',\n            apis: 'Vec<RuntimeVersionApi>'\n        },\n        RuntimeVersionPartial: {\n            specName: 'Text',\n            specVersion: 'u32',\n            apis: 'Vec<RuntimeVersionApi>'\n        },\n        SpecVersion: 'u32',\n        StorageChangeSet: {\n            block: 'Hash',\n            changes: 'Vec<KeyValueOption>'\n        },\n        TraceBlockResponse: {\n            _enum: {\n                TraceError: 'TraceError',\n                BlockTrace: 'BlockTrace'\n            }\n        },\n        TraceError: {\n            error: 'Text'\n        }\n    }\n};\n","export const rpc = {\n    call: {\n        alias: ['state_callAt'],\n        description: 'Perform a call to a builtin on the chain',\n        params: [\n            {\n                name: 'method',\n                type: 'Text'\n            },\n            {\n                name: 'data',\n                type: 'Bytes'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Bytes'\n    },\n    getChildKeys: {\n        description: 'Retrieves the keys with prefix of a specific child storage',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childDefinition',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childType',\n                type: 'u32'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getChildReadProof: {\n        description: 'Returns proof of storage for child key entries at a specific block state.',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ReadProof'\n    },\n    getChildStorage: {\n        description: 'Retrieves the child storage for a key',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childDefinition',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childType',\n                type: 'u32'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'StorageData'\n    },\n    getChildStorageHash: {\n        description: 'Retrieves the child storage hash',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childDefinition',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childType',\n                type: 'u32'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Hash'\n    },\n    getChildStorageSize: {\n        description: 'Retrieves the child storage size',\n        params: [\n            {\n                name: 'childStorageKey',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childDefinition',\n                type: 'StorageKey'\n            },\n            {\n                name: 'childType',\n                type: 'u32'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'u64'\n    },\n    getKeys: {\n        deprecated: 'Use `api.rpc.state.getKeysPaged` to retrieve keys',\n        description: 'Retrieves the keys with a certain prefix',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n        alias: ['state_getKeysPagedAt'],\n        description: 'Returns the keys with prefix with pagination support.',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                name: 'count',\n                type: 'u32'\n            },\n            {\n                isOptional: true,\n                name: 'startKey',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getMetadata: {\n        description: 'Returns the runtime metadata',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Metadata'\n    },\n    getPairs: {\n        deprecated: 'Use `api.rpc.state.getKeysPaged` to retrieve keys',\n        description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'prefix',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<KeyValue>'\n    },\n    getReadProof: {\n        description: 'Returns proof of storage entries at a specific block state',\n        params: [\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ReadProof'\n    },\n    getRuntimeVersion: {\n        alias: ['chain_getRuntimeVersion'],\n        description: 'Get the runtime version',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'RuntimeVersion'\n    },\n    getStorage: {\n        alias: ['state_getStorageAt'],\n        description: 'Retrieves the storage for a key',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'StorageData'\n    },\n    getStorageHash: {\n        alias: ['state_getStorageHashAt'],\n        description: 'Retrieves the storage hash',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Hash'\n    },\n    getStorageSize: {\n        alias: ['state_getStorageSizeAt'],\n        description: 'Retrieves the storage size',\n        params: [\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'u64'\n    },\n    queryStorage: {\n        description: 'Query historical storage entries (by key) starting from a start block',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                name: 'fromBlock',\n                type: 'Hash'\n            },\n            {\n                isOptional: true,\n                name: 'toBlock',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageChangeSet>'\n    },\n    queryStorageAt: {\n        description: 'Query storage entries (by key) starting at block hash given as the second parameter',\n        params: [\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Vec<StorageChangeSet>'\n    },\n    subscribeRuntimeVersion: {\n        alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],\n        description: 'Retrieves the runtime version via subscription',\n        params: [],\n        pubsub: [\n            'runtimeVersion',\n            'subscribeRuntimeVersion',\n            'unsubscribeRuntimeVersion'\n        ],\n        type: 'RuntimeVersion'\n    },\n    subscribeStorage: {\n        description: 'Subscribes to storage changes for the provided keys',\n        // NOTE Just marking it here to follow the logic - this is unsafe when no\n        // keys are provided (i.e. subscribing to all), generally this is used\n        // extensively with normal subscriptions\n        // isUnsafe: true,\n        params: [\n            {\n                isOptional: true,\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            }\n        ],\n        pubsub: [\n            'storage',\n            'subscribeStorage',\n            'unsubscribeStorage'\n        ],\n        type: 'StorageChangeSet'\n    },\n    traceBlock: {\n        description: 'Provides a way to trace the re-execution of a single block',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'block',\n                type: 'Hash'\n            },\n            {\n                name: 'targets',\n                type: 'Option<Text>'\n            },\n            {\n                name: 'storageKeys',\n                type: 'Option<Text>'\n            },\n            {\n                name: 'methods',\n                type: 'Option<Text>'\n            }\n        ],\n        type: 'TraceBlockResponse'\n    },\n    trieMigrationStatus: {\n        description: 'Check current migration state',\n        isUnsafe: true,\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'MigrationStatusResult'\n    }\n};\n","import { objectSpread } from '@polkadot/util';\nimport * as defs from './definitions.js';\nconst jsonrpc = {};\nObject.keys(defs).forEach((s) => Object.entries(defs[s].rpc || {}).forEach(([method, def]) => {\n    // allow for section overrides\n    const section = def.aliasSection || s;\n    if (!jsonrpc[section]) {\n        jsonrpc[section] = {};\n    }\n    jsonrpc[section][method] = objectSpread({}, def, {\n        isSubscription: !!def.pubsub,\n        jsonrpc: `${section}_${method}`,\n        method,\n        section\n    });\n}));\nexport default jsonrpc;\n","const CORE_V1_TO_V4 = {\n    execute_block: {\n        description: 'Execute the given block.',\n        params: [\n            {\n                name: 'block',\n                type: 'Block'\n            }\n        ],\n        type: 'Null'\n    }\n};\nconst CORE_V1_TO_V2 = {\n    version: {\n        description: 'Returns the version of the runtime.',\n        params: [],\n        type: 'RuntimeVersionPre3'\n    }\n};\nconst CORE_V2_TO_V4 = {\n    initialize_block: {\n        description: 'Initialize a block with the given header.',\n        params: [\n            {\n                name: 'header',\n                type: 'Header'\n            }\n        ],\n        type: 'Null'\n    }\n};\nconst CORE_V4_VERSION = {\n    version: {\n        description: 'Returns the version of the runtime.',\n        params: [],\n        type: 'RuntimeVersion'\n    }\n};\nconst CORE_V4_TO_V5 = {\n    ...CORE_V1_TO_V4,\n    initialize_block: {\n        description: 'Initialize a block with the given header.',\n        params: [\n            {\n                name: 'header',\n                type: 'Header'\n            }\n        ],\n        type: 'ExtrinsicInclusionMode'\n    }\n};\nexport const runtime = {\n    Core: [\n        {\n            methods: {\n                ...CORE_V4_VERSION,\n                ...CORE_V4_TO_V5\n            },\n            version: 5\n        },\n        {\n            methods: {\n                ...CORE_V4_VERSION,\n                ...CORE_V1_TO_V4,\n                ...CORE_V2_TO_V4\n            },\n            version: 4\n        },\n        {\n            methods: {\n                version: {\n                    description: 'Returns the version of the runtime.',\n                    params: [],\n                    type: 'RuntimeVersionPre4'\n                },\n                ...CORE_V1_TO_V4,\n                ...CORE_V2_TO_V4\n            },\n            version: 3\n        },\n        {\n            methods: {\n                ...CORE_V1_TO_V2,\n                ...CORE_V1_TO_V4,\n                ...CORE_V2_TO_V4\n            },\n            version: 2\n        },\n        {\n            methods: {\n                initialise_block: {\n                    description: 'Initialize a block with the given header.',\n                    params: [\n                        {\n                            name: 'header',\n                            type: 'Header'\n                        }\n                    ],\n                    type: 'Null'\n                },\n                ...CORE_V1_TO_V2,\n                ...CORE_V1_TO_V4\n            },\n            version: 1\n        }\n    ]\n};\n","import { runtime } from './runtime.js';\nconst numberTypes = {\n    Fixed64: 'Int<64, Fixed64>',\n    FixedI64: 'Int<64, FixedI64>',\n    FixedU64: 'UInt<64, FixedU64>',\n    Fixed128: 'Int<128, Fixed128>',\n    FixedI128: 'Int<128, FixedI128>',\n    FixedU128: 'UInt<128, FixedU128>',\n    I32F32: 'Int<64, I32F32>',\n    U32F32: 'UInt<64, U32F32>',\n    PerU16: 'UInt<16, PerU16>',\n    Perbill: 'UInt<32, Perbill>',\n    Percent: 'UInt<8, Percent>',\n    Permill: 'UInt<32, Permill>',\n    Perquintill: 'UInt<64, Perquintill>'\n};\nexport const knownOrigins = {\n    //\n    // (1) Defaults from Substrate\n    //\n    Council: 'CollectiveOrigin',\n    System: 'SystemOrigin',\n    TechnicalCommittee: 'CollectiveOrigin',\n    //\n    // (2) Defaults from Polkadot\n    //\n    Xcm: 'XcmOrigin',\n    XcmPallet: 'XcmOrigin',\n    //\n    // (3) Defaults from Acala\n    //\n    Authority: 'AuthorityOrigin',\n    GeneralCouncil: 'CollectiveOrigin'\n};\nexport default {\n    rpc: {},\n    runtime,\n    types: {\n        ...numberTypes,\n        AccountId: 'AccountId32',\n        AccountId20: 'GenericEthereumAccountId',\n        AccountId32: 'GenericAccountId32',\n        AccountId33: 'GenericAccountId33',\n        AccountIdOf: 'AccountId',\n        AccountIndex: 'GenericAccountIndex',\n        Address: 'MultiAddress',\n        AssetId: 'u32',\n        Balance: 'UInt<128, Balance>',\n        BalanceOf: 'Balance',\n        Block: 'GenericBlock',\n        BlockNumber: 'u32',\n        BlockNumberFor: 'BlockNumber',\n        BlockNumberOf: 'BlockNumber',\n        Call: 'GenericCall',\n        CallHash: 'Hash',\n        CallHashOf: 'CallHash',\n        ChangesTrieConfiguration: {\n            digestInterval: 'u32',\n            digestLevels: 'u32'\n        },\n        ChangesTrieSignal: {\n            _enum: {\n                NewConfiguration: 'Option<ChangesTrieConfiguration>'\n            }\n        },\n        ConsensusEngineId: 'GenericConsensusEngineId',\n        CodecHash: 'Hash',\n        CrateVersion: {\n            major: 'u16',\n            minor: 'u8',\n            patch: 'u8'\n        },\n        Digest: {\n            logs: 'Vec<DigestItem>'\n        },\n        DigestItem: {\n            _enum: {\n                Other: 'Bytes', // 0\n                AuthoritiesChange: 'Vec<AuthorityId>', // 1\n                ChangesTrieRoot: 'Hash', // 2\n                SealV0: 'SealV0', // 3\n                Consensus: 'Consensus', // 4\n                Seal: 'Seal', // 5\n                PreRuntime: 'PreRuntime', // 6\n                ChangesTrieSignal: 'ChangesTrieSignal', // 7\n                RuntimeEnvironmentUpdated: 'Null' // 8\n            }\n        },\n        ExtrinsicsWeight: {\n            normal: 'Weight',\n            operational: 'Weight'\n        },\n        H32: '[u8; 4; H32]',\n        H64: '[u8; 8; H64]',\n        H128: '[u8; 16; H128]',\n        H160: '[u8; 20; H160]',\n        H256: '[u8; 32; H256]',\n        H512: '[u8; 64; H512]',\n        H1024: '[u8; 128; H1024]',\n        H2048: '[u8; 256; H2048]',\n        Hash: 'H256',\n        Header: {\n            parentHash: 'Hash',\n            number: 'Compact<BlockNumber>',\n            stateRoot: 'Hash',\n            extrinsicsRoot: 'Hash',\n            digest: 'Digest'\n        },\n        HeaderPartial: {\n            parentHash: 'Hash',\n            // since we only parse JSON with this, having non-compact works\n            number: 'BlockNumber'\n        },\n        IndicesLookupSource: 'GenericLookupSource',\n        Index: 'u32',\n        Justification: '(ConsensusEngineId, EncodedJustification)',\n        EncodedJustification: 'Bytes',\n        Justifications: 'Vec<Justification>',\n        KeyValue: '(StorageKey, StorageData)',\n        KeyTypeId: 'u32',\n        LockIdentifier: '[u8; 8]',\n        LookupSource: 'MultiAddress',\n        LookupTarget: 'AccountId',\n        ModuleId: 'LockIdentifier',\n        MultiAddress: 'GenericMultiAddress',\n        MultiSigner: {\n            _enum: {\n                Ed25519: '[u8; 32]',\n                Sr25519: '[u8; 32]',\n                Ecdsa: '[u8; 33]'\n            }\n        },\n        Moment: 'UInt<64, Moment>',\n        OpaqueCall: 'Bytes',\n        Origin: 'DoNotConstruct<Origin>',\n        OriginCaller: {\n            _enum: {\n                // this should be dynamically built from the actual modules, based on index\n                System: 'SystemOrigin'\n            }\n        },\n        PalletId: 'LockIdentifier',\n        PalletsOrigin: 'OriginCaller',\n        PalletVersion: {\n            major: 'u16',\n            minor: 'u8',\n            patch: 'u8'\n        },\n        Pays: {\n            _enum: ['Yes', 'No']\n        },\n        Phantom: 'Null',\n        PhantomData: 'Null',\n        Releases: {\n            _enum: ['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10']\n        },\n        RuntimeCall: 'Call',\n        RuntimeEvent: 'Event',\n        RuntimeDbWeight: {\n            read: 'Weight',\n            write: 'Weight'\n        },\n        SignedBlock: 'SignedBlockWithJustifications',\n        SignedBlockWithJustification: {\n            block: 'Block',\n            justification: 'Option<EncodedJustification>'\n        },\n        SignedBlockWithJustifications: {\n            block: 'Block',\n            justifications: 'Option<Justifications>'\n        },\n        Slot: 'u64',\n        SlotDuration: 'u64',\n        StorageData: 'Bytes',\n        StorageInfo: {\n            palletName: 'Bytes',\n            storage_name: 'Bytes',\n            prefix: 'Bytes',\n            maxValues: 'Option<u32>',\n            maxSize: 'Option<u32>'\n        },\n        StorageProof: {\n            trieNodes: 'Vec<Bytes>'\n        },\n        TransactionPriority: 'u64',\n        TransactionLongevity: 'u64',\n        TransactionTag: 'Bytes',\n        TransactionInfo: {\n            _alias: {\n                dataSize: 'size'\n            },\n            chunkRoot: 'H256',\n            contentHash: 'H256',\n            dataSize: 'u32',\n            blockChunks: 'u32'\n        },\n        TransactionStorageProof: {\n            chunk: 'Vec<u8>',\n            proof: 'Vec<Vec<u8>>'\n        },\n        ValidatorId: 'AccountId',\n        ValidatorIdOf: 'ValidatorId',\n        WeightV0: 'u32',\n        WeightV1: 'u64',\n        WeightV2: {\n            refTime: 'Compact<u64>',\n            proofSize: 'Compact<u64>'\n        },\n        Weight: 'WeightV2',\n        WeightMultiplier: 'Fixed64',\n        // digest\n        PreRuntime: '(ConsensusEngineId, Bytes)',\n        SealV0: '(u64, Signature)',\n        Seal: '(ConsensusEngineId, Bytes)',\n        Consensus: '(ConsensusEngineId, Bytes)',\n        // Type when core initialize_block went from v4 to v5\n        ExtrinsicInclusionMode: {\n            _enum: ['AllExtrinsics', 'OnlyInherents']\n        }\n    }\n};\n","import { isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { MetadataVersioned } from './MetadataVersioned.js';\nconst EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);\nconst VERSION_IDX = EMPTY_METADATA.length - 1;\n/** @internal */\nfunction decodeU8a(registry, u8a) {\n    if (u8a.length === 0) {\n        return EMPTY_METADATA;\n    }\n    else if (u8a[VERSION_IDX] === 9) {\n        // This is an f-ing hack as a follow-up to another ugly hack\n        // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n        // when we fail on V9, try to re-parse it as v10...\n        try {\n            return new MetadataVersioned(registry, u8a);\n        }\n        catch {\n            u8a[VERSION_IDX] = 10;\n        }\n    }\n    return u8a;\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\nexport class Metadata extends MetadataVersioned {\n    constructor(registry, value) {\n        // const timeStart = performance.now()\n        super(registry, isU8a(value) || isString(value)\n            ? decodeU8a(registry, u8aToU8a(value))\n            : value);\n        // console.log('Metadata', `${(performance.now() - timeStart).toFixed(2)}ms`)\n    }\n}\n","import { objectSpread } from '@polkadot/util';\nfunction trimDocs(docs) {\n    const strings = docs.map((d) => d.toString().trim());\n    const firstEmpty = strings.findIndex((d) => !d.length);\n    return firstEmpty === -1\n        ? strings\n        : strings.slice(0, firstEmpty);\n}\n/** @internal */\nexport function toCallsOnly(registry, { extrinsic, lookup, pallets }) {\n    return registry.createTypeUnsafe('MetadataLatest', [{\n            extrinsic,\n            lookup: {\n                types: lookup.types.map(({ id, type }) => registry.createTypeUnsafe('PortableType', [{\n                        id,\n                        type: objectSpread({}, type, { docs: trimDocs(type.docs) })\n                    }]))\n            },\n            pallets: pallets.map(({ calls, index, name }) => ({\n                calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [calls.unwrapOr(null)]),\n                index,\n                name\n            }))\n        }]).toJSON();\n}\n","/** @internal */\nexport function flattenUniq(list, result = []) {\n    for (let i = 0, count = list.length; i < count; i++) {\n        const entry = list[i];\n        if (Array.isArray(entry)) {\n            flattenUniq(entry, result);\n        }\n        else {\n            result.push(entry);\n        }\n    }\n    return [...new Set(result)];\n}\n","import { getTypeDef, TypeDefInfo } from '@polkadot/types-create';\nfunction extractSubSingle(_, { sub }) {\n    const { lookupName, type } = sub;\n    return extractTypes([lookupName || type]);\n}\nfunction extractSubArray(_, { sub }) {\n    return extractTypes(sub.map(({ lookupName, type }) => lookupName || type));\n}\nfunction unhandled(type, { info }) {\n    throw new Error(`Unhandled: Unable to create and validate type from ${type} (info=${TypeDefInfo[info]})`);\n}\nconst mapping = {\n    [TypeDefInfo.BTreeMap]: extractSubArray,\n    [TypeDefInfo.BTreeSet]: extractSubSingle,\n    [TypeDefInfo.Compact]: extractSubSingle,\n    [TypeDefInfo.DoNotConstruct]: unhandled,\n    [TypeDefInfo.Enum]: extractSubArray,\n    [TypeDefInfo.HashMap]: extractSubArray,\n    [TypeDefInfo.Int]: unhandled,\n    [TypeDefInfo.Linkage]: extractSubSingle,\n    [TypeDefInfo.Null]: unhandled,\n    [TypeDefInfo.Option]: extractSubSingle,\n    [TypeDefInfo.Plain]: (_, typeDef) => typeDef.lookupName || typeDef.type,\n    [TypeDefInfo.Range]: extractSubSingle,\n    [TypeDefInfo.RangeInclusive]: extractSubSingle,\n    [TypeDefInfo.Result]: extractSubArray,\n    [TypeDefInfo.Set]: extractSubArray,\n    [TypeDefInfo.Si]: unhandled,\n    [TypeDefInfo.Struct]: extractSubArray,\n    [TypeDefInfo.Tuple]: extractSubArray,\n    [TypeDefInfo.UInt]: unhandled,\n    [TypeDefInfo.Vec]: extractSubSingle,\n    [TypeDefInfo.VecFixed]: extractSubSingle,\n    [TypeDefInfo.WrapperKeepOpaque]: extractSubSingle,\n    [TypeDefInfo.WrapperOpaque]: extractSubSingle\n};\n/** @internal */\nexport function extractTypes(types) {\n    const count = types.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const type = types[i];\n        const typeDef = getTypeDef(type);\n        result[i] = mapping[typeDef.info](type, typeDef);\n    }\n    return result;\n}\n","import { logger } from '@polkadot/util';\nimport { extractTypes } from './extractTypes.js';\nimport { flattenUniq } from './flattenUniq.js';\nconst l = logger('metadata');\n/** @internal */\nexport function validateTypes(registry, throwError, types) {\n    const missing = flattenUniq(extractTypes(types))\n        .filter((type) => !registry.hasType(type) &&\n        !registry.isLookupType(type))\n        .sort();\n    if (missing.length !== 0) {\n        const message = `Unknown types found, no types for ${missing.join(', ')}`;\n        if (throwError) {\n            throw new Error(message);\n        }\n        else {\n            l.warn(message);\n        }\n    }\n    return types;\n}\n","import { flattenUniq } from './flattenUniq.js';\nimport { validateTypes } from './validateTypes.js';\n/** @internal */\nfunction extractTypes(lookup, types) {\n    return types.map(({ type }) => lookup.getTypeDef(type).type);\n}\n/** @internal */\nfunction extractFieldTypes(lookup, type) {\n    return lookup.getSiType(type).def.asVariant.variants.map(({ fields }) => extractTypes(lookup, fields));\n}\n/** @internal */\nfunction getPalletNames({ lookup, pallets }) {\n    return pallets.reduce((all, { calls, constants, events, storage }) => {\n        all.push([extractTypes(lookup, constants)]);\n        if (calls.isSome) {\n            all.push(extractFieldTypes(lookup, calls.unwrap().type));\n        }\n        if (events.isSome) {\n            all.push(extractFieldTypes(lookup, events.unwrap().type));\n        }\n        if (storage.isSome) {\n            all.push(storage.unwrap().items.map(({ type }) => {\n                if (type.isPlain) {\n                    return [lookup.getTypeDef(type.asPlain).type];\n                }\n                const { hashers, key, value } = type.asMap;\n                return hashers.length === 1\n                    ? [\n                        lookup.getTypeDef(value).type,\n                        lookup.getTypeDef(key).type\n                    ]\n                    : [\n                        lookup.getTypeDef(value).type,\n                        ...lookup.getSiType(key).def.asTuple.map((t) => lookup.getTypeDef(t).type)\n                    ];\n            }));\n        }\n        return all;\n    }, []);\n}\n/** @internal */\nexport function getUniqTypes(registry, meta, throwError) {\n    return validateTypes(registry, throwError, flattenUniq(getPalletNames(meta)));\n}\n","import { objectSpread } from '@polkadot/util';\n/** @internal */\nfunction createStorageHasher(registry, hasher) {\n    // Blake2_128_Concat has been added at index 2, so we increment all the\n    // indexes greater than 2\n    if (hasher.toNumber() >= 2) {\n        return registry.createTypeUnsafe('StorageHasherV10', [hasher.toNumber() + 1]);\n    }\n    return registry.createTypeUnsafe('StorageHasherV10', [hasher]);\n}\n/** @internal */\nfunction createStorageType(registry, entryType) {\n    if (entryType.isMap) {\n        return [objectSpread({}, entryType.asMap, {\n                hasher: createStorageHasher(registry, entryType.asMap.hasher)\n            }), 1];\n    }\n    if (entryType.isDoubleMap) {\n        return [objectSpread({}, entryType.asDoubleMap, {\n                hasher: createStorageHasher(registry, entryType.asDoubleMap.hasher),\n                key2Hasher: createStorageHasher(registry, entryType.asDoubleMap.key2Hasher)\n            }), 2];\n    }\n    return [entryType.asPlain, 0];\n}\n/** @internal */\nfunction convertModule(registry, mod) {\n    const storage = mod.storage.unwrapOr(null);\n    return registry.createTypeUnsafe('ModuleMetadataV10', [objectSpread({}, mod, {\n            storage: storage\n                ? objectSpread({}, storage, {\n                    items: storage.items.map((item) => objectSpread({}, item, {\n                        type: registry.createTypeUnsafe('StorageEntryTypeV10', createStorageType(registry, item.type))\n                    }))\n                })\n                : null\n        })]);\n}\n/** @internal */\nexport function toV10(registry, { modules }) {\n    return registry.createTypeUnsafe('MetadataV10', [{\n            modules: modules.map((mod) => convertModule(registry, mod))\n        }]);\n}\n","/** @internal */\nexport function toV11(registry, { modules }) {\n    return registry.createTypeUnsafe('MetadataV11', [{\n            // This is new in V11, pass V0 here - something non-existing, telling the API to use\n            // the fallback for this information (on-chain detection)\n            extrinsic: {\n                signedExtensions: [],\n                version: 0\n            },\n            modules\n        }]);\n}\n","import { objectSpread } from '@polkadot/util';\n/**\n * @internal\n **/\nexport function toV12(registry, { extrinsic, modules }) {\n    return registry.createTypeUnsafe('MetadataV12', [{\n            extrinsic,\n            modules: modules.map((mod) => registry.createTypeUnsafe('ModuleMetadataV12', [objectSpread({}, mod, { index: 255 })]))\n        }]);\n}\n","/**\n * @internal\n **/\nexport function toV13(registry, v12) {\n    return registry.createTypeUnsafe('MetadataV13', [v12]);\n}\n","const typesAlias = {\n    assets: {\n        Approval: 'AssetApproval',\n        ApprovalKey: 'AssetApprovalKey',\n        Balance: 'TAssetBalance',\n        DestroyWitness: 'AssetDestroyWitness'\n    },\n    babe: {\n        EquivocationProof: 'BabeEquivocationProof'\n    },\n    balances: {\n        Status: 'BalanceStatus'\n    },\n    beefy: {\n        AuthorityId: 'BeefyId'\n    },\n    contracts: {\n        StorageKey: 'ContractStorageKey'\n    },\n    electionProviderMultiPhase: {\n        Phase: 'ElectionPhase'\n    },\n    ethereum: {\n        Block: 'EthBlock',\n        Header: 'EthHeader',\n        Receipt: 'EthReceipt',\n        Transaction: 'EthTransaction',\n        TransactionStatus: 'EthTransactionStatus'\n    },\n    evm: {\n        Account: 'EvmAccount',\n        Log: 'EvmLog',\n        Vicinity: 'EvmVicinity'\n    },\n    grandpa: {\n        Equivocation: 'GrandpaEquivocation',\n        EquivocationProof: 'GrandpaEquivocationProof'\n    },\n    identity: {\n        Judgement: 'IdentityJudgement'\n    },\n    inclusion: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    paraDisputes: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    paraInclusion: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    paraScheduler: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    paraShared: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    parachains: {\n        Id: 'ParaId'\n    },\n    parasDisputes: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    parasInclusion: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    parasScheduler: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    parasShared: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    proposeParachain: {\n        Proposal: 'ParachainProposal'\n    },\n    proxy: {\n        Announcement: 'ProxyAnnouncement'\n    },\n    scheduler: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    shared: {\n        ValidatorIndex: 'ParaValidatorIndex'\n    },\n    society: {\n        Judgement: 'SocietyJudgement',\n        Vote: 'SocietyVote'\n    },\n    staking: {\n        Compact: 'CompactAssignments'\n    },\n    treasury: {\n        Proposal: 'TreasuryProposal'\n    },\n    xcm: {\n        AssetId: 'XcmAssetId'\n    },\n    xcmPallet: {\n        AssetId: 'XcmAssetId'\n    }\n};\n/**\n * @description Get types for specific modules (metadata override)\n */\nexport function getAliasTypes({ knownTypes }, section) {\n    return {\n        ...(typesAlias[section] ?? {}),\n        ...(knownTypes.typesAlias?.[section] ?? {})\n    };\n}\n","import { stringCamelCase } from '@polkadot/util';\nimport { getAliasTypes } from '../../interfaces/alias.js';\nimport { knownOrigins } from '../../interfaces/runtime/definitions.js';\nconst BOXES = [['<', '>'], ['<', ','], [',', '>'], ['(', ')'], ['(', ','], [',', ','], [',', ')']];\n/**\n * Creates a compatible type mapping\n * @internal\n **/\nfunction compatType(specs, _type) {\n    const type = _type.toString();\n    const index = specs.findIndex(({ def }) => def.HistoricMetaCompat === type);\n    if (index !== -1) {\n        return index;\n    }\n    return specs.push({\n        def: {\n            HistoricMetaCompat: type\n        }\n    }) - 1;\n}\nfunction compatTypes(specs, ...types) {\n    for (let i = 0, count = types.length; i < count; i++) {\n        compatType(specs, types[i]);\n    }\n}\nfunction makeTupleType(specs, entries) {\n    return specs.push({\n        def: {\n            Tuple: entries\n        }\n    }) - 1;\n}\nfunction makeVariantType(modName, variantType, specs, variants) {\n    return specs.push({\n        def: {\n            Variant: { variants }\n        },\n        path: [`pallet_${modName.toString()}`, 'pallet', variantType]\n    }) - 1;\n}\n/**\n * @internal\n * generate & register the OriginCaller type\n **/\nfunction registerOriginCaller(registry, modules, metaVersion) {\n    registry.register({\n        OriginCaller: {\n            _enum: modules\n                .map((mod, index) => [\n                mod.name.toString(),\n                metaVersion >= 12\n                    ? mod.index.toNumber()\n                    : index\n            ])\n                .sort((a, b) => a[1] - b[1])\n                .reduce((result, [name, index]) => {\n                for (let i = Object.keys(result).length; i < index; i++) {\n                    result[`Empty${i}`] = 'Null';\n                }\n                result[name] = knownOrigins[name] || 'Null';\n                return result;\n            }, {})\n        }\n    });\n}\n/**\n * Find and apply the correct type override\n * @internal\n **/\nfunction setTypeOverride(sectionTypes, types) {\n    types.forEach((type) => {\n        const override = Object.keys(sectionTypes).find((aliased) => type.eq(aliased));\n        if (override) {\n            type.setOverride(sectionTypes[override]);\n        }\n        else {\n            // FIXME: NOT happy with this approach, but gets over the initial hump cased by (Vec<Announcement>,BalanceOf)\n            const orig = type.toString();\n            const alias = Object\n                .entries(sectionTypes)\n                .reduce((result, [src, dst]) => BOXES.reduce((result, [a, z]) => result.replace(`${a}${src}${z}`, `${a}${dst}${z}`), result), orig);\n            if (orig !== alias) {\n                type.setOverride(alias);\n            }\n        }\n    });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\nfunction convertCalls(specs, registry, modName, calls, sectionTypes) {\n    const variants = calls.map(({ args, docs, name }, index) => {\n        setTypeOverride(sectionTypes, args.map(({ type }) => type));\n        return registry.createTypeUnsafe('SiVariant', [{\n                docs,\n                fields: args.map(({ name, type }) => registry.createTypeUnsafe('SiField', [{ name, type: compatType(specs, type) }])),\n                index,\n                name\n            }]);\n    });\n    return registry.createTypeUnsafe('PalletCallMetadataV14', [{\n            type: makeVariantType(modName, 'Call', specs, variants)\n        }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\nfunction convertConstants(specs, registry, constants, sectionTypes) {\n    return constants.map(({ docs, name, type, value }) => {\n        setTypeOverride(sectionTypes, [type]);\n        return registry.createTypeUnsafe('PalletConstantMetadataV14', [{\n                docs,\n                name,\n                type: compatType(specs, type),\n                value\n            }]);\n    });\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n */\nfunction convertErrors(specs, registry, modName, errors, _sectionTypes) {\n    const variants = errors.map(({ docs, name }, index) => registry.createTypeUnsafe('SiVariant', [{\n            docs,\n            fields: [],\n            index,\n            name\n        }]));\n    return registry.createTypeUnsafe('PalletErrorMetadataV14', [{\n            type: makeVariantType(modName, 'Error', specs, variants)\n        }]);\n}\n/**\n * Apply module-specific type overrides (always be done as part of toV14)\n * @internal\n **/\nfunction convertEvents(specs, registry, modName, events, sectionTypes) {\n    const variants = events.map(({ args, docs, name }, index) => {\n        setTypeOverride(sectionTypes, args);\n        return registry.createTypeUnsafe('SiVariant', [{\n                docs,\n                fields: args.map((t) => registry.createTypeUnsafe('SiField', [{ type: compatType(specs, t) }])),\n                index,\n                name\n            }]);\n    });\n    return registry.createTypeUnsafe('PalletEventMetadataV14', [{\n            type: makeVariantType(modName, 'Event', specs, variants)\n        }]);\n}\nfunction createMapEntry(specs, registry, sectionTypes, { hashers, isLinked, isOptional, keys, value }) {\n    setTypeOverride(sectionTypes, [value, ...(Array.isArray(keys) ? keys : [keys])]);\n    return registry.createTypeUnsafe('StorageEntryTypeV14', [{\n            Map: {\n                hashers,\n                key: hashers.length === 1\n                    ? compatType(specs, keys[0])\n                    : makeTupleType(specs, keys.map((t) => compatType(specs, t))),\n                value: isLinked\n                    // For previous-generation linked-map support, the actual storage result\n                    // is a Tuple with the value and the Linkage (Option appears in teh value-part only)\n                    ? compatType(specs, `(${isOptional ? `Option<${value.toString()}>` : value.toString()}, Linkage<${keys[0].toString()}>)`)\n                    : compatType(specs, value)\n            }\n        }]);\n}\n/**\n * Apply module-specific storage type overrides (always part of toV14)\n * @internal\n **/\nfunction convertStorage(specs, registry, { items, prefix }, sectionTypes) {\n    return registry.createTypeUnsafe('PalletStorageMetadataV14', [{\n            items: items.map(({ docs, fallback, modifier, name, type }) => {\n                let entryType;\n                if (type.isPlain) {\n                    const plain = type.asPlain;\n                    setTypeOverride(sectionTypes, [plain]);\n                    entryType = registry.createTypeUnsafe('StorageEntryTypeV14', [{\n                            Plain: compatType(specs, plain)\n                        }]);\n                }\n                else if (type.isMap) {\n                    const map = type.asMap;\n                    entryType = createMapEntry(specs, registry, sectionTypes, {\n                        hashers: [map.hasher],\n                        isLinked: map.linked.isTrue,\n                        isOptional: modifier.isOptional,\n                        keys: [map.key],\n                        value: map.value\n                    });\n                }\n                else if (type.isDoubleMap) {\n                    const dm = type.asDoubleMap;\n                    entryType = createMapEntry(specs, registry, sectionTypes, {\n                        hashers: [dm.hasher, dm.key2Hasher],\n                        isLinked: false,\n                        isOptional: modifier.isOptional,\n                        keys: [dm.key1, dm.key2],\n                        value: dm.value\n                    });\n                }\n                else {\n                    const nm = type.asNMap;\n                    entryType = createMapEntry(specs, registry, sectionTypes, {\n                        hashers: nm.hashers,\n                        isLinked: false,\n                        isOptional: modifier.isOptional,\n                        keys: nm.keyVec,\n                        value: nm.value\n                    });\n                }\n                return registry.createTypeUnsafe('StorageEntryMetadataV14', [{\n                        docs,\n                        fallback,\n                        modifier,\n                        name,\n                        type: entryType\n                    }]);\n            }),\n            prefix\n        }]);\n}\n/** @internal */\nfunction convertExtrinsic(registry, { signedExtensions, version }) {\n    return registry.createTypeUnsafe('ExtrinsicMetadataV14', [{\n            signedExtensions: signedExtensions.map((identifier) => ({\n                identifier,\n                type: 0 // we don't map the fields at all\n            })),\n            type: 0, // Map to extrinsic like in v14?\n            version\n        }]);\n}\n/** @internal */\nfunction createPallet(specs, registry, mod, { calls, constants, errors, events, storage }) {\n    const sectionTypes = getAliasTypes(registry, stringCamelCase(mod.name));\n    return registry.createTypeUnsafe('PalletMetadataV14', [{\n            calls: calls && convertCalls(specs, registry, mod.name, calls, sectionTypes),\n            constants: convertConstants(specs, registry, constants, sectionTypes),\n            errors: errors && convertErrors(specs, registry, mod.name, errors, sectionTypes),\n            events: events && convertEvents(specs, registry, mod.name, events, sectionTypes),\n            index: mod.index,\n            name: mod.name,\n            storage: storage && convertStorage(specs, registry, storage, sectionTypes)\n        }]);\n}\n/**\n * Convert the Metadata to v14\n * @internal\n **/\nexport function toV14(registry, v13, metaVersion) {\n    const specs = [];\n    // position 0 always has Null, additionally add internal defaults\n    compatTypes(specs, 'Null', 'u8', 'u16', 'u32', 'u64');\n    registerOriginCaller(registry, v13.modules, metaVersion);\n    const extrinsic = convertExtrinsic(registry, v13.extrinsic);\n    const pallets = v13.modules.map((mod) => createPallet(specs, registry, mod, {\n        calls: mod.calls.unwrapOr(null),\n        constants: mod.constants,\n        errors: mod.errors.length ? mod.errors : null,\n        events: mod.events.unwrapOr(null),\n        storage: mod.storage.unwrapOr(null)\n    }));\n    return registry.createTypeUnsafe('MetadataV14', [{\n            extrinsic,\n            lookup: {\n                types: specs.map((type, id) => registry.createTypeUnsafe('PortableType', [{ id, type }]))\n            },\n            pallets\n        }]);\n}\n","import { objectSpread } from '@polkadot/util';\n/**\n * Convert the Metadata to v15\n * @internal\n **/\nexport function toV15(registry, v14, _) {\n    // V15 is mostly equivalent to v14 however it does add\n    //\n    // 1. The top-level apis entry - it is assumed that in usage we would\n    //    just check for all-empty (like this would construct)\n    // 2. A docs param on the pallet itself\n    // 3. Additional extrinsic parameters\n    //\n    // A straight conversion with createTypeUndafe magic fills in details\n    // We need the UncheckedExtrinsic to extract the types, at least for v14\n    // which does have these details embedded (previous-gen won't populate)\n    const unchecked = v14.lookup.paramTypes.SpRuntimeUncheckedExtrinsic;\n    return registry.createTypeUnsafe('MetadataV15', [\n        objectSpread({}, v14, {\n            extrinsic: registry.createTypeUnsafe('ExtrinsicMetadataV15', [\n                objectSpread({}, v14.extrinsic, {\n                    addressType: unchecked?.[0].type.unwrapOr(0),\n                    callType: unchecked?.[1].type.unwrapOr(0),\n                    extraType: unchecked?.[3].type.unwrapOr(0),\n                    signatureType: unchecked?.[2].type.unwrapOr(0)\n                })\n            ]),\n            outerEnums: registry.createTypeUnsafe('OuterEnums15', [{\n                    // FIXME We need to extract & add the errorType in here\n                    // (these doesn't seem to be an esay way to detect & extract it)\n                    callType: unchecked?.[1].type.unwrapOr(0),\n                    eventType: v14.lookup.paramTypes.FrameSystemEventRecord?.[0].type.unwrapOr(0)\n                }])\n        })\n    ]);\n}\n","/**\n * Convert the Metadata (which is an alias) to latest\n * @internal\n **/\nexport function toLatest(_registry, v15, _metaVersion) {\n    return v15;\n}\n","import { U32 } from '@polkadot/types-codec';\nexport const MAGIC_NUMBER = 0x6174656d; // `meta`, reversed for Little Endian encoding\nexport class MagicNumber extends U32 {\n    constructor(registry, value) {\n        super(registry, value);\n        if (!this.isEmpty && !this.eq(MAGIC_NUMBER)) {\n            throw new Error(`MagicNumber mismatch: expected ${registry.createTypeUnsafe('u32', [MAGIC_NUMBER]).toHex()}, found ${this.toHex()}`);\n        }\n    }\n}\n","import { Struct } from '@polkadot/types-codec';\nimport { getUniqTypes, toCallsOnly } from './util/index.js';\nimport { toV10 } from './v9/toV10.js';\nimport { toV11 } from './v10/toV11.js';\nimport { toV12 } from './v11/toV12.js';\nimport { toV13 } from './v12/toV13.js';\nimport { toV14 } from './v13/toV14.js';\nimport { toV15 } from './v14/toV15.js';\nimport { toLatest } from './v15/toLatest.js';\nimport { MagicNumber } from './MagicNumber.js';\nimport { LATEST_VERSION, TO_CALLS_VERSION } from './versions.js';\n/**\n * @name MetadataVersioned\n * @description\n * The versioned runtime metadata as a decoded structure\n */\nexport class MetadataVersioned extends Struct {\n    __internal__converted = new Map();\n    constructor(registry, value) {\n        // const timeStart = performance.now()\n        super(registry, {\n            magicNumber: MagicNumber,\n            metadata: 'MetadataAll'\n        }, value);\n        // console.log('MetadataVersioned', `${(performance.now() - timeStart).toFixed(2)}ms`)\n    }\n    __internal__assertVersion = (version) => {\n        if (this.version > version) {\n            throw new Error(`Cannot convert metadata from version ${this.version} to ${version}`);\n        }\n        return this.version === version;\n    };\n    __internal__getVersion = (version, fromPrev) => {\n        if (version !== 'latest' && this.__internal__assertVersion(version)) {\n            const asCurr = `asV${version}`;\n            return this.__internal__metadata()[asCurr];\n        }\n        if (!this.__internal__converted.has(version)) {\n            const asPrev = version === 'latest'\n                ? `asV${LATEST_VERSION}`\n                : `asV${(version - 1)}`;\n            this.__internal__converted.set(version, fromPrev(this.registry, this[asPrev], this.version));\n        }\n        return this.__internal__converted.get(version);\n    };\n    /**\n     * @description the metadata wrapped\n     */\n    __internal__metadata = () => {\n        return this.getT('metadata');\n    };\n    /**\n     * @description Returns the wrapped metadata as a limited calls-only (latest) version\n     */\n    get asCallsOnly() {\n        return new MetadataVersioned(this.registry, {\n            magicNumber: this.magicNumber,\n            metadata: this.registry.createTypeUnsafe('MetadataAll', [toCallsOnly(this.registry, this.asLatest), TO_CALLS_VERSION])\n        });\n    }\n    /**\n     * @description Returns the wrapped metadata as a V9 object\n     */\n    get asV9() {\n        this.__internal__assertVersion(9);\n        return this.__internal__metadata().asV9;\n    }\n    /**\n     * @description Returns the wrapped values as a V10 object\n     */\n    get asV10() {\n        return this.__internal__getVersion(10, toV10);\n    }\n    /**\n     * @description Returns the wrapped values as a V11 object\n     */\n    get asV11() {\n        return this.__internal__getVersion(11, toV11);\n    }\n    /**\n     * @description Returns the wrapped values as a V12 object\n     */\n    get asV12() {\n        return this.__internal__getVersion(12, toV12);\n    }\n    /**\n     * @description Returns the wrapped values as a V13 object\n     */\n    get asV13() {\n        return this.__internal__getVersion(13, toV13);\n    }\n    /**\n     * @description Returns the wrapped values as a V14 object\n     */\n    get asV14() {\n        return this.__internal__getVersion(14, toV14);\n    }\n    /**\n     * @description Returns the wrapped values as a V14 object\n     */\n    get asV15() {\n        return this.__internal__getVersion(15, toV15);\n    }\n    /**\n     * @description Returns the wrapped values as a latest version object\n     */\n    get asLatest() {\n        return this.__internal__getVersion('latest', toLatest);\n    }\n    /**\n     * @description The magicNumber for the Metadata (known constant)\n     */\n    get magicNumber() {\n        return this.getT('magicNumber');\n    }\n    /**\n     * @description the metadata version this structure represents\n     */\n    get version() {\n        return this.__internal__metadata().index;\n    }\n    getUniqTypes(throwError) {\n        return getUniqTypes(this.registry, this.asLatest, throwError);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n    toJSON() {\n        // HACK(y): ensure that we apply the aliases if we have not done so already, this is\n        // needed to ensure we have the correct overrides (which is only applied in toLatest)\n        // eslint-disable-next-line no-unused-expressions\n        this.asLatest;\n        return super.toJSON();\n    }\n}\n","export const KNOWN_VERSIONS = [15, 14, 13, 12, 11, 10, 9];\nexport const LATEST_VERSION = KNOWN_VERSIONS[0];\nexport const TO_CALLS_VERSION = 14; // LATEST_VERSION;\n","import { sanitize, Struct } from '@polkadot/types-codec';\nimport { getTypeDef, TypeDefInfo, withTypeString } from '@polkadot/types-create';\nimport { assertUnreachable, isNumber, isString, logger, objectSpread, stringCamelCase, stringify, stringPascalCase } from '@polkadot/util';\nconst l = logger('PortableRegistry');\nconst TYPE_UNWRAP = { toNumber: () => -1 };\nconst PRIMITIVE_ALIAS = {\n    Char: 'u32', // Rust char is 4-bytes\n    Str: 'Text'\n};\nconst PATHS_ALIAS = splitNamespace([\n    // full matching on exact names...\n    // these are well-known types with additional encoding\n    'sp_core::crypto::AccountId32',\n    'sp_runtime::generic::era::Era',\n    'sp_runtime::multiaddress::MultiAddress',\n    // ethereum overrides (Frontier, Moonbeam, Polkadot claims)\n    'fp_account::AccountId20',\n    'account::AccountId20',\n    'polkadot_runtime_common::claims::EthereumAddress',\n    // weights 2 is a structure, however for 1.5. with a single field it\n    // should be flatenned (can appear in Compact<Weight> extrinsics)\n    'frame_support::weights::weight_v2::Weight',\n    'sp_weights::weight_v2::Weight',\n    // wildcard matching in place...\n    // these have a specific encoding or logic, use a wildcard for {pallet, darwinia}_democracy\n    '*_democracy::vote::Vote',\n    '*_conviction_voting::vote::Vote',\n    '*_identity::types::Data',\n    // these are opaque Vec<u8> wrappers\n    'sp_core::OpaqueMetadata',\n    'sp_core::OpaquePeerId',\n    'sp_core::offchain::OpaqueMultiaddr',\n    // shorten some well-known types\n    'primitive_types::*',\n    'sp_arithmetic::per_things::*',\n    // runtime\n    '*_runtime::RuntimeCall',\n    '*_runtime::RuntimeEvent',\n    // ink!\n    'ink::env::types::*',\n    'ink::primitives::types::*',\n    'ink_env::types::*',\n    'ink_primitives::types::*',\n    // noir\n    'np_runtime::accountname::AccountName',\n    'np_runtime::universaladdress::UniversalAddress'\n]);\nconst PATHS_SET = splitNamespace([\n    'pallet_identity::types::BitFlags'\n]);\nconst BITVEC_NS_LSB = ['bitvec::order::Lsb0', 'BitOrderLsb0'];\nconst BITVEC_NS_MSB = ['bitvec::order::Msb0', 'BitOrderMsb0'];\nconst BITVEC_NS = [...BITVEC_NS_LSB, ...BITVEC_NS_MSB];\nconst WRAPPERS = ['BoundedBTreeMap', 'BoundedBTreeSet', 'BoundedVec', 'Box', 'BTreeMap', 'BTreeSet', 'Cow', 'Option', 'Range', 'RangeInclusive', 'Result', 'WeakBoundedVec', 'WrapperKeepOpaque', 'WrapperOpaque'];\nconst RESERVED = [\n    // JS reserved words\n    'entries', 'keys', 'new', 'size',\n    // exposed by all Codec objects\n    'hash', 'registry'\n];\nconst PATH_RM_INDEX_1 = ['generic', 'misc', 'pallet', 'traits', 'types'];\n/** @internal Converts a Text[] into string[] (used as part of definitions) */\nfunction sanitizeDocs(docs) {\n    const count = docs.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        result[i] = docs[i].toString();\n    }\n    return result;\n}\n/** @internal Split a namespace with :: into individual parts */\nfunction splitNamespace(values) {\n    const count = values.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        result[i] = values[i].split('::');\n    }\n    return result;\n}\n/** @internal Match a namespace based on parts (alongside wildcards) */\nfunction matchParts(first, second) {\n    return first.length === second.length && first.every((a, index) => {\n        const b = second[index].toString();\n        if ((a === '*') || (a === b)) {\n            return true;\n        }\n        if (a.includes('*') && a.includes('_') && b.includes('_')) {\n            let suba = a.split('_');\n            let subb = b.split('_');\n            // match initial *'s to multiples if we have a match for the other\n            if (suba[0] === '*') {\n                const indexOf = subb.indexOf(suba[1]);\n                if (indexOf !== -1) {\n                    suba = suba.slice(1);\n                    subb = subb.slice(indexOf);\n                }\n            }\n            // check for * matches at the end, adjust accordingly\n            if ((suba.length === 2) && (suba[1] === '*') && (suba[0] === subb[0])) {\n                return true;\n            }\n            return matchParts(suba, subb);\n        }\n        return false;\n    });\n}\n/** @internal check if the path matches the PATHS_ALIAS (with wildcards) */\nfunction getAliasPath({ def, path }) {\n    // specific logic for weights - we override when non-complex struct\n    // (as applied in Weight 1.5 where we also have `Compact<{ refTime: u64 }>)\n    if (['frame_support::weights::weight_v2::Weight', 'sp_weights::weight_v2::Weight'].includes(path.join('::'))) {\n        return !def.isComposite || def.asComposite.fields.length === 1\n            ? 'WeightV1'\n            : null;\n    }\n    // TODO We need to handle ink! Balance in some way\n    return path.length && PATHS_ALIAS.some((a) => matchParts(a, path))\n        ? path[path.length - 1].toString()\n        : null;\n}\n/** @internal Converts a type name into a JS-API compatible name */\nfunction extractNameFlat(portable, lookupIndex, params, path, isInternal = false) {\n    const count = path.length;\n    // if we have no path or determined as a wrapper, we just skip it\n    if (count === 0 || WRAPPERS.includes(path[count - 1].toString())) {\n        return null;\n    }\n    const camels = new Array(count);\n    const lowers = new Array(count);\n    // initially just create arrays of the camelCase and lowercase path\n    // parts - we will check these to extract the final values. While\n    // we have 2 loops here, we also don't do the same operation twice\n    for (let i = 0; i < count; i++) {\n        const c = stringPascalCase(isInternal\n            ? path[i].replace('pallet_', '')\n            : path[i]);\n        const l = c.toLowerCase();\n        camels[i] = c;\n        lowers[i] = l;\n    }\n    let name = '';\n    for (let i = 0; i < count; i++) {\n        const l = lowers[i];\n        // Remove ::{generic, misc, pallet, traits, types}::\n        if (i !== 1 || !PATH_RM_INDEX_1.includes(l)) {\n            // sp_runtime::generic::digest::Digest -> sp_runtime::generic::Digest\n            // sp_runtime::multiaddress::MultiAddress -> sp_runtime::MultiAddress\n            if (l !== lowers[i + 1]) {\n                name += camels[i];\n            }\n        }\n    }\n    // do magic for RawOrigin lookup, e.g. pallet_collective::RawOrigin\n    if (camels[1] === 'RawOrigin' && count === 2 && params.length === 2 && params[1].type.isSome) {\n        const instanceType = portable[params[1].type.unwrap().toNumber()];\n        if (instanceType.type.path.length === 2) {\n            name = `${name}${instanceType.type.path[1].toString()}`;\n        }\n    }\n    return { lookupIndex, name, params };\n}\n/** @internal Alias for extractNameFlat with PortableType as a last parameter */\nfunction extractName(portable, lookupIndex, { type: { params, path } }) {\n    return extractNameFlat(portable, lookupIndex, params, path);\n}\n/** @internal Check for dupes from a specific index onwards */\nfunction nextDupeMatches(name, startAt, names) {\n    const result = [names[startAt]];\n    for (let i = startAt + 1, count = names.length; i < count; i++) {\n        const v = names[i];\n        if (v.name === name) {\n            result.push(v);\n        }\n    }\n    return result;\n}\n/** @internal Checks to see if a type is a full duplicate (with all params matching) */\nfunction rewriteDupes(input, rewrite) {\n    const count = input.length;\n    for (let i = 0; i < count; i++) {\n        const a = input[i];\n        for (let j = i + 1; j < count; j++) {\n            const b = input[j];\n            // if the indexes are not the same and the names match, we have a dupe\n            if (a.lookupIndex !== b.lookupIndex && a.name === b.name) {\n                return false;\n            }\n        }\n    }\n    // add all the adjusted values to the rewite map\n    for (let i = 0; i < count; i++) {\n        const p = input[i];\n        rewrite[p.lookupIndex] = p.name;\n    }\n    return true;\n}\n/** @internal Find duplicates and adjust the names based on parameters */\nfunction removeDupeNames(lookup, portable, names) {\n    const rewrite = {};\n    return names\n        .map((original, startAt) => {\n        const { lookupIndex, name, params } = original;\n        if (!name) {\n            // the name is empty (this is not expected, but have a failsafe)\n            return null;\n        }\n        else if (rewrite[lookupIndex]) {\n            // we have already rewritten this one, we can skip it\n            return original;\n        }\n        // those where the name is matching starting from this index\n        const allSame = nextDupeMatches(name, startAt, names);\n        // we only have one, so all ok\n        if (allSame.length === 1) {\n            return original;\n        }\n        // are there param differences between matching names\n        const anyDiff = allSame.some((o) => params.length !== o.params.length ||\n            params.some((p, index) => !p.name.eq(o.params[index].name) ||\n                p.type.unwrapOr(TYPE_UNWRAP).toNumber() !== o.params[index].type.unwrapOr(TYPE_UNWRAP).toNumber()));\n        // everything matches, we can combine these\n        if (!anyDiff) {\n            return original;\n        }\n        // TODO We probably want to attach all the indexes with differences,\n        // not just the first\n        // find the first parameter that yields differences\n        const paramIdx = params.findIndex(({ type }, index) => allSame.every(({ params }, aIndex) => params[index].type.isSome && (aIndex === 0 ||\n            !params[index].type.eq(type))));\n        // No param found that is different\n        if (paramIdx === -1) {\n            return original;\n        }\n        // see if using the param type helps\n        const sameCount = allSame.length;\n        const adjusted = new Array(sameCount);\n        // loop through all, specifically checking that index where the\n        // first param yields differences\n        for (let i = 0; i < sameCount; i++) {\n            const { lookupIndex, name, params } = allSame[i];\n            const { def, path } = lookup.getSiType(params[paramIdx].type.unwrap());\n            // if it is not a primitive and it doesn't have a path, we really cannot\n            // do anything at this point\n            if (!def.isPrimitive && !path.length) {\n                return null;\n            }\n            adjusted[i] = {\n                lookupIndex,\n                name: def.isPrimitive\n                    ? `${name}${def.asPrimitive.toString()}`\n                    : `${name}${path[path.length - 1].toString()}`\n            };\n        }\n        // check to see if the adjusted names have no issues\n        if (rewriteDupes(adjusted, rewrite)) {\n            return original;\n        }\n        // TODO This is duplicated from the section just above...\n        // ... we certainly need a better solution here\n        //\n        // Last-ditch effort to use the full type path - ugly\n        // loop through all, specifically checking that index where the\n        // first param yields differences\n        for (let i = 0; i < sameCount; i++) {\n            const { lookupIndex, name, params } = allSame[i];\n            const { def, path } = lookup.getSiType(params[paramIdx].type.unwrap());\n            const flat = extractNameFlat(portable, lookupIndex, params, path, true);\n            if (def.isPrimitive || !flat) {\n                return null;\n            }\n            adjusted[i] = {\n                lookupIndex,\n                name: `${name}${flat.name}`\n            };\n        }\n        // check to see if the adjusted names have no issues\n        if (rewriteDupes(adjusted, rewrite)) {\n            return original;\n        }\n        return null;\n    })\n        .filter((n) => !!n)\n        .map(({ lookupIndex, name, params }) => ({\n        lookupIndex,\n        name: rewrite[lookupIndex] || name,\n        params\n    }));\n}\n/** @internal Detect on-chain types (AccountId/Signature) as set as the default */\nfunction registerTypes(lookup, lookups, names, params) {\n    // Register the types we extracted\n    lookup.registry.register(lookups);\n    // Try and extract the AccountId/Address/Signature type from UncheckedExtrinsic\n    if (params.SpRuntimeUncheckedExtrinsic) {\n        // Address, Call, Signature, Extra\n        const [addrParam, , sigParam] = params.SpRuntimeUncheckedExtrinsic;\n        const siAddress = lookup.getSiType(addrParam.type.unwrap());\n        const siSignature = lookup.getSiType(sigParam.type.unwrap());\n        const nsSignature = siSignature.path.join('::');\n        let nsAccountId = siAddress.path.join('::');\n        const isMultiAddress = nsAccountId === 'sp_runtime::multiaddress::MultiAddress';\n        // With multiaddress, we check the first type param again\n        if (isMultiAddress) {\n            // AccountId, AccountIndex\n            const [idParam] = siAddress.params;\n            nsAccountId = lookup.getSiType(idParam.type.unwrap()).path.join('::');\n        }\n        lookup.registry.register({\n            // known: account::AccountId20, fp_account::AccountId20, primitive_types::H160\n            AccountId: nsAccountId.endsWith('::AccountId20') || nsAccountId.endsWith('::H160')\n                ? 'AccountId20'\n                : 'AccountId32',\n            Address: isMultiAddress\n                ? 'MultiAddress'\n                : 'AccountId',\n            ExtrinsicSignature: ['sp_runtime::MultiSignature'].includes(nsSignature)\n                ? 'MultiSignature'\n                : names[sigParam.type.unwrap().toNumber()] || 'MultiSignature'\n        });\n    }\n}\n/**\n * @internal Extracts aliases based on what we know the runtime config looks like in a\n * Substrate chain. Specifically we want to have access to the Call and Event params\n **/\nfunction extractAliases(params, isContract) {\n    const hasParams = Object.keys(params).some((k) => !k.startsWith('Pallet'));\n    const alias = {};\n    if (params.SpRuntimeUncheckedExtrinsic) {\n        // Address, Call, Signature, Extra\n        const [, { type }] = params.SpRuntimeUncheckedExtrinsic;\n        alias[type.unwrap().toNumber()] = 'Call';\n    }\n    else if (hasParams && !isContract) {\n        l.warn('Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic');\n    }\n    if (params.FrameSystemEventRecord) {\n        // Event, Topic\n        const [{ type }] = params.FrameSystemEventRecord;\n        alias[type.unwrap().toNumber()] = 'Event';\n    }\n    else if (hasParams && !isContract) {\n        l.warn('Unable to determine runtime Event type, cannot inspect frame_system::EventRecord');\n    }\n    return alias;\n}\n/** @internal Extracts all the intreresting type information for this registry */\nfunction extractTypeInfo(lookup, portable) {\n    const nameInfo = [];\n    const types = {};\n    for (let i = 0, count = portable.length; i < count; i++) {\n        const type = portable[i];\n        const lookupIndex = type.id.toNumber();\n        const extracted = extractName(portable, lookupIndex, portable[i]);\n        if (extracted) {\n            nameInfo.push(extracted);\n        }\n        types[lookupIndex] = type;\n    }\n    const lookups = {};\n    const names = {};\n    const params = {};\n    const dedup = removeDupeNames(lookup, portable, nameInfo);\n    for (let i = 0, count = dedup.length; i < count; i++) {\n        const { lookupIndex, name, params: p } = dedup[i];\n        names[lookupIndex] = name;\n        lookups[name] = lookup.registry.createLookupType(lookupIndex);\n        params[name] = p;\n    }\n    return { lookups, names, params, types };\n}\nexport class PortableRegistry extends Struct {\n    __internal__alias;\n    __internal__lookups;\n    __internal__names;\n    __internal__params;\n    __internal__typeDefs = {};\n    __internal__types;\n    constructor(registry, value, isContract) {\n        // const timeStart = performance.now()\n        super(registry, {\n            types: 'Vec<PortableType>'\n        }, value);\n        const { lookups, names, params, types } = extractTypeInfo(this, this.types);\n        this.__internal__alias = extractAliases(params, isContract);\n        this.__internal__lookups = lookups;\n        this.__internal__names = names;\n        this.__internal__params = params;\n        this.__internal__types = types;\n        // console.log('PortableRegistry', `${(performance.now() - timeStart).toFixed(2)}ms`)\n    }\n    /**\n     * @description Returns all the available type names for this chain\n     **/\n    get names() {\n        return Object.values(this.__internal__names).sort();\n    }\n    /**\n     * @description Returns all the available parameterized types for this chain\n     **/\n    get paramTypes() {\n        return this.__internal__params;\n    }\n    /**\n     * @description The types of the registry\n     */\n    get types() {\n        return this.getT('types');\n    }\n    /**\n     * @description Register all available types into the registry (generally for internal usage)\n     */\n    register() {\n        registerTypes(this, this.__internal__lookups, this.__internal__names, this.__internal__params);\n    }\n    /**\n     * @description Returns the name for a specific lookup\n     */\n    getName(lookupId) {\n        return this.__internal__names[this.__internal__getLookupId(lookupId)];\n    }\n    /**\n     * @description Finds a specific type in the registry\n     */\n    getSiType(lookupId) {\n        // NOTE catch-22 - this may already be used as part of the constructor, so\n        // ensure that we have actually initialized it correctly\n        const found = (this.__internal__types || this.types)[this.__internal__getLookupId(lookupId)];\n        if (!found) {\n            throw new Error(`PortableRegistry: Unable to find type with lookupId ${lookupId.toString()}`);\n        }\n        return found.type;\n    }\n    /**\n     * @description Lookup the type definition for the index\n     */\n    getTypeDef(lookupId) {\n        const lookupIndex = this.__internal__getLookupId(lookupId);\n        if (!this.__internal__typeDefs[lookupIndex]) {\n            const lookupName = this.__internal__names[lookupIndex];\n            const empty = {\n                info: TypeDefInfo.DoNotConstruct,\n                lookupIndex,\n                lookupName,\n                type: this.registry.createLookupType(lookupIndex)\n            };\n            // Set named items since we will get into circular lookups along the way\n            if (lookupName) {\n                this.__internal__typeDefs[lookupIndex] = empty;\n            }\n            const extracted = this.__internal__extract(this.getSiType(lookupId), lookupIndex);\n            // For non-named items, we only set this right at the end\n            if (!lookupName) {\n                this.__internal__typeDefs[lookupIndex] = empty;\n            }\n            Object.keys(extracted).forEach((k) => {\n                if (k !== 'lookupName' || extracted[k]) {\n                    // these are safe since we are looking through the keys as set\n                    this.__internal__typeDefs[lookupIndex][k] = extracted[k];\n                }\n            });\n            // don't set lookupName on lower-level, we want to always direct to the type\n            if (extracted.info === TypeDefInfo.Plain) {\n                this.__internal__typeDefs[lookupIndex].lookupNameRoot = this.__internal__typeDefs[lookupIndex].lookupName;\n                delete this.__internal__typeDefs[lookupIndex].lookupName;\n            }\n        }\n        return this.__internal__typeDefs[lookupIndex];\n    }\n    /**\n     * @description For a specific field, perform adjustments to not have built-in conflicts\n     */\n    sanitizeField(name) {\n        let nameField = null;\n        let nameOrig = null;\n        if (name.isSome) {\n            nameField = stringCamelCase(name.unwrap());\n            if (nameField.includes('#')) {\n                nameOrig = nameField;\n                nameField = nameOrig.replace(/#/g, '_');\n            }\n            else if (RESERVED.includes(nameField)) {\n                nameOrig = nameField;\n                nameField = `${nameField}_`;\n            }\n        }\n        return [nameField, nameOrig];\n    }\n    /** @internal Creates a TypeDef based on an internal lookupId */\n    __internal__createSiDef(lookupId) {\n        const typeDef = this.getTypeDef(lookupId);\n        const lookupIndex = lookupId.toNumber();\n        // Setup for a lookup on complex types\n        return [TypeDefInfo.DoNotConstruct, TypeDefInfo.Enum, TypeDefInfo.Struct].includes(typeDef.info) && typeDef.lookupName\n            ? {\n                docs: typeDef.docs,\n                info: TypeDefInfo.Si,\n                lookupIndex,\n                lookupName: this.__internal__names[lookupIndex],\n                type: this.registry.createLookupType(lookupId)\n            }\n            : typeDef;\n    }\n    /** @internal Converts a lookupId input to the actual lookup index */\n    __internal__getLookupId(lookupId) {\n        if (isString(lookupId)) {\n            if (!this.registry.isLookupType(lookupId)) {\n                throw new Error(`PortableRegistry: Expected a lookup string type, found ${lookupId}`);\n            }\n            return parseInt(lookupId.replace('Lookup', ''), 10);\n        }\n        else if (isNumber(lookupId)) {\n            return lookupId;\n        }\n        return lookupId.toNumber();\n    }\n    /** @internal Converts a type into a TypeDef for Codec usage */\n    __internal__extract(type, lookupIndex) {\n        const namespace = type.path.join('::');\n        let typeDef;\n        const aliasType = this.__internal__alias[lookupIndex] || getAliasPath(type);\n        try {\n            if (aliasType) {\n                typeDef = this.__internal__extractAliasPath(lookupIndex, aliasType);\n            }\n            else {\n                switch (type.def.type) {\n                    case 'Array':\n                        typeDef = this.__internal__extractArray(lookupIndex, type.def.asArray);\n                        break;\n                    case 'BitSequence':\n                        typeDef = this.__internal__extractBitSequence(lookupIndex, type.def.asBitSequence);\n                        break;\n                    case 'Compact':\n                        typeDef = this.__internal__extractCompact(lookupIndex, type.def.asCompact);\n                        break;\n                    case 'Composite':\n                        typeDef = this.__internal__extractComposite(lookupIndex, type, type.def.asComposite);\n                        break;\n                    case 'HistoricMetaCompat':\n                        typeDef = this.__internal__extractHistoric(lookupIndex, type.def.asHistoricMetaCompat);\n                        break;\n                    case 'Primitive':\n                        typeDef = this.__internal__extractPrimitive(lookupIndex, type);\n                        break;\n                    case 'Sequence':\n                        typeDef = this.__internal__extractSequence(lookupIndex, type.def.asSequence);\n                        break;\n                    case 'Tuple':\n                        typeDef = this.__internal__extractTuple(lookupIndex, type.def.asTuple);\n                        break;\n                    case 'Variant':\n                        typeDef = this.__internal__extractVariant(lookupIndex, type, type.def.asVariant);\n                        break;\n                    default: assertUnreachable(type.def.type);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`PortableRegistry: ${lookupIndex}${namespace ? ` (${namespace})` : ''}: Error extracting ${stringify(type)}: ${error.message}`);\n        }\n        return objectSpread({\n            docs: sanitizeDocs(type.docs),\n            namespace\n        }, typeDef);\n    }\n    /** @internal Extracts a ScaleInfo Array into TypeDef.VecFixed */\n    __internal__extractArray(_, { len, type }) {\n        const length = len.toNumber();\n        if (length > 2048) {\n            throw new Error('Only support for [Type; <length>], where length <= 2048');\n        }\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.VecFixed,\n            length,\n            sub: this.__internal__createSiDef(type)\n        });\n    }\n    /** @internal Extracts a ScaleInfo BitSequence into TypeDef.Plain */\n    __internal__extractBitSequence(_, { bitOrderType, bitStoreType }) {\n        // With the v3 of scale-info this swapped around, but obviously the decoder cannot determine\n        // the order. With that in-mind, we apply a detection for LSb0/Msb and set accordingly\n        const a = this.__internal__createSiDef(bitOrderType);\n        const b = this.__internal__createSiDef(bitStoreType);\n        const [bitOrder, bitStore] = BITVEC_NS.includes(a.namespace || '')\n            ? [a, b]\n            : [b, a];\n        if (!bitOrder.namespace || !BITVEC_NS.includes(bitOrder.namespace)) {\n            throw new Error(`Unexpected bitOrder found as ${bitOrder.namespace || '<unknown>'}`);\n        }\n        else if (bitStore.info !== TypeDefInfo.Plain || bitStore.type !== 'u8') {\n            throw new Error(`Only u8 bitStore is currently supported, found ${bitStore.type}`);\n        }\n        const isLsb = BITVEC_NS_LSB.includes(bitOrder.namespace);\n        if (!isLsb) {\n            // TODO To remove this limitation, we need to pass an extra info flag\n            // through to the TypeDef (Here we could potentially re-use something\n            // like index (???) to indicate and ensure we use it to pass to the\n            // BitVec constructor - which does handle this type)\n            //\n            // See https://github.com/polkadot-js/api/issues/5588\n            // throw new Error(`Only LSB BitVec is currently supported, found ${bitOrder.namespace}`);\n        }\n        return {\n            info: TypeDefInfo.Plain,\n            type: 'BitVec'\n        };\n    }\n    /** @internal Extracts a ScaleInfo Compact into TypeDef.Compact */\n    __internal__extractCompact(_, { type }) {\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Compact,\n            sub: this.__internal__createSiDef(type)\n        });\n    }\n    /** @internal Extracts a ScaleInfo Composite into TypeDef.{BTree*, Range*, Wrapper*} */\n    __internal__extractComposite(lookupIndex, { params, path }, { fields }) {\n        if (path.length) {\n            const pathFirst = path[0].toString();\n            const pathLast = path[path.length - 1].toString();\n            if (path.length === 1 && pathFirst === 'BTreeMap') {\n                if (params.length !== 2) {\n                    throw new Error(`BTreeMap requires 2 parameters, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: TypeDefInfo.BTreeMap,\n                    sub: params.map(({ type }) => this.__internal__createSiDef(type.unwrap()))\n                });\n            }\n            else if (path.length === 1 && pathFirst === 'BTreeSet') {\n                if (params.length !== 1) {\n                    throw new Error(`BTreeSet requires 1 parameter, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: TypeDefInfo.BTreeSet,\n                    sub: this.__internal__createSiDef(params[0].type.unwrap())\n                });\n            }\n            else if (['Range', 'RangeInclusive'].includes(pathFirst)) {\n                if (params.length !== 1) {\n                    throw new Error(`Range requires 1 parameter, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: pathFirst === 'Range'\n                        ? TypeDefInfo.Range\n                        : TypeDefInfo.RangeInclusive,\n                    sub: this.__internal__createSiDef(params[0].type.unwrap()),\n                    type: pathFirst\n                });\n            }\n            else if (['WrapperKeepOpaque', 'WrapperOpaque'].includes(pathLast)) {\n                if (params.length !== 1) {\n                    throw new Error(`WrapperOpaque requires 1 parameter, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: pathLast === 'WrapperKeepOpaque'\n                        ? TypeDefInfo.WrapperKeepOpaque\n                        : TypeDefInfo.WrapperOpaque,\n                    sub: this.__internal__createSiDef(params[0].type.unwrap()),\n                    type: pathLast\n                });\n            }\n        }\n        return PATHS_SET.some((p) => matchParts(p, path))\n            ? this.__internal__extractCompositeSet(lookupIndex, params, fields)\n            : this.__internal__extractFields(lookupIndex, fields);\n    }\n    /** @internal Extracts a ScaleInfo CompositeSet into TypeDef.Set */\n    __internal__extractCompositeSet(_, params, fields) {\n        if (params.length !== 1 || fields.length !== 1) {\n            throw new Error('Set handling expects param/field as single entries');\n        }\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Set,\n            length: this.registry.createTypeUnsafe(this.registry.createLookupType(fields[0].type), []).bitLength(),\n            sub: this.getSiType(params[0].type.unwrap()).def.asVariant.variants.map(({ index, name }) => ({\n                // This will be an issue > 2^53 - 1 ... don't have those (yet)\n                index: index.toNumber(),\n                info: TypeDefInfo.Plain,\n                name: name.toString(),\n                type: 'Null'\n            }))\n        });\n    }\n    /** @internal Extracts ScaleInfo enum/struct fields into TypeDef.{Struct, Tuple} */\n    __internal__extractFields(lookupIndex, fields) {\n        let isStruct = true;\n        let isTuple = true;\n        const count = fields.length;\n        for (let f = 0; f < count; f++) {\n            const { name } = fields[f];\n            isStruct = isStruct && name.isSome;\n            isTuple = isTuple && name.isNone;\n        }\n        if (!isTuple && !isStruct) {\n            throw new Error('Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)');\n        }\n        if (count === 0) {\n            return {\n                info: TypeDefInfo.Null,\n                type: 'Null'\n            };\n        }\n        else if (isTuple && count === 1) {\n            const typeDef = this.__internal__createSiDef(fields[0].type);\n            return objectSpread({}, typeDef, lookupIndex === -1\n                ? null\n                : {\n                    lookupIndex,\n                    lookupName: this.__internal__names[lookupIndex],\n                    lookupNameRoot: typeDef.lookupName\n                }, fields[0].typeName.isSome\n                ? { typeName: sanitize(fields[0].typeName.unwrap()) }\n                : null);\n        }\n        const [sub, alias] = this.__internal__extractFieldsAlias(fields);\n        return withTypeString(this.registry, objectSpread({\n            info: isTuple // Tuple check first\n                ? TypeDefInfo.Tuple\n                : TypeDefInfo.Struct,\n            sub\n        }, alias.size\n            ? { alias }\n            : null, lookupIndex === -1\n            ? null\n            : {\n                lookupIndex,\n                lookupName: this.__internal__names[lookupIndex]\n            }));\n    }\n    /** @internal Apply field aliassed (with no JS conflicts) */\n    __internal__extractFieldsAlias(fields) {\n        const alias = new Map();\n        const count = fields.length;\n        const sub = new Array(count);\n        for (let i = 0; i < count; i++) {\n            const { docs, name, type, typeName } = fields[i];\n            const typeDef = this.__internal__createSiDef(type);\n            if (name.isNone) {\n                sub[i] = typeDef;\n            }\n            else {\n                const [nameField, nameOrig] = this.sanitizeField(name);\n                if (nameField && nameOrig) {\n                    alias.set(nameField, nameOrig);\n                }\n                sub[i] = objectSpread({\n                    docs: sanitizeDocs(docs),\n                    name: nameField\n                }, typeDef, typeName.isSome\n                    ? { typeName: sanitize(typeName.unwrap()) }\n                    : null);\n            }\n        }\n        return [sub, alias];\n    }\n    /** @internal Extracts an internal Historic (pre V14) type  */\n    __internal__extractHistoric(_, type) {\n        return objectSpread({\n            displayName: type.toString(),\n            isFromSi: true\n        }, getTypeDef(type));\n    }\n    /** @internal Extracts a ScaleInfo Primitive into TypeDef.Plain */\n    __internal__extractPrimitive(_, type) {\n        const typeStr = type.def.asPrimitive.type.toString();\n        return {\n            info: TypeDefInfo.Plain,\n            type: PRIMITIVE_ALIAS[typeStr] || typeStr.toLowerCase()\n        };\n    }\n    /** @internal Applies an alias path onto the TypeDef */\n    __internal__extractAliasPath(_, type) {\n        return {\n            info: TypeDefInfo.Plain,\n            type\n        };\n    }\n    /** @internal Extracts a ScaleInfo Sequence into TypeDef.Vec (with Bytes shortcut) */\n    __internal__extractSequence(lookupIndex, { type }) {\n        const sub = this.__internal__createSiDef(type);\n        if (sub.type === 'u8') {\n            return {\n                info: TypeDefInfo.Plain,\n                type: 'Bytes'\n            };\n        }\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Vec,\n            lookupIndex,\n            lookupName: this.__internal__names[lookupIndex],\n            sub\n        });\n    }\n    /** @internal Extracts a ScaleInfo Tuple into TypeDef.Tuple */\n    __internal__extractTuple(lookupIndex, ids) {\n        if (ids.length === 0) {\n            return {\n                info: TypeDefInfo.Null,\n                type: 'Null'\n            };\n        }\n        else if (ids.length === 1) {\n            return this.getTypeDef(ids[0]);\n        }\n        const sub = ids.map((t) => this.__internal__createSiDef(t));\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Tuple,\n            lookupIndex,\n            lookupName: this.__internal__names[lookupIndex],\n            sub\n        });\n    }\n    /** @internal Extracts a ScaleInfo Variant into TypeDef.{Option, Result, Enum} */\n    __internal__extractVariant(lookupIndex, { params, path }, { variants }) {\n        if (path.length) {\n            const specialVariant = path[0].toString();\n            if (specialVariant === 'Option') {\n                if (params.length !== 1) {\n                    throw new Error(`Option requires 1 parameter, found ${params.length}`);\n                }\n                // NOTE This is opt-in (unhandled), not by default\n                // if (sub.type === 'bool') {\n                //   return withTypeString(this.registry, {\n                //     info: TypeDefInfo.Plain,\n                //     type: 'OptionBool'\n                //   });\n                // }\n                return withTypeString(this.registry, {\n                    info: TypeDefInfo.Option,\n                    sub: this.__internal__createSiDef(params[0].type.unwrap())\n                });\n            }\n            else if (specialVariant === 'Result') {\n                if (params.length !== 2) {\n                    throw new Error(`Result requires 2 parameters, found ${params.length}`);\n                }\n                return withTypeString(this.registry, {\n                    info: TypeDefInfo.Result,\n                    sub: params.map(({ type }, index) => objectSpread({\n                        name: ['Ok', 'Error'][index]\n                    }, this.__internal__createSiDef(type.unwrap())))\n                });\n            }\n        }\n        if (variants.length === 0) {\n            return {\n                info: TypeDefInfo.Null,\n                type: 'Null'\n            };\n        }\n        return this.__internal__extractVariantEnum(lookupIndex, variants);\n    }\n    /** @internal Extracts a ScaleInfo Variant into TypeDef.Enum */\n    __internal__extractVariantEnum(lookupIndex, variants) {\n        const sub = [];\n        // we may get entries out of order, arrange them first before creating with gaps filled\n        // NOTE: Since we mutate, use a copy of the array as an input\n        variants\n            .slice()\n            .sort((a, b) => a.index.cmp(b.index))\n            .forEach(({ fields, index: bnIndex, name }) => {\n            const index = bnIndex.toNumber();\n            while (sub.length !== index) {\n                sub.push({\n                    index: sub.length,\n                    info: TypeDefInfo.Null,\n                    name: `__Unused${sub.length}`,\n                    type: 'Null'\n                });\n            }\n            sub.push(objectSpread(this.__internal__extractFields(-1, fields), {\n                index,\n                name: name.toString()\n            }));\n        });\n        return withTypeString(this.registry, {\n            info: TypeDefInfo.Enum,\n            lookupIndex,\n            lookupName: this.__internal__names[lookupIndex],\n            sub\n        });\n    }\n}\n","import { hexToU8a, lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from '../util.js';\n/** @internal */\nexport function decorateConstants(registry, { pallets }, _version) {\n    const result = {};\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { constants, name } = pallets[i];\n        if (!constants.isEmpty) {\n            lazyMethod(result, stringCamelCase(name), () => lazyMethods({}, constants, (constant) => {\n                const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [hexToU8a(constant.value.toHex())]);\n                // We are casting here since we are assigning to a read-only property\n                codec.meta = constant;\n                return codec;\n            }, objectNameToCamel));\n        }\n    }\n    return result;\n}\n","import { isCodec, isU8a, lazyMethod, objectSpread, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from '../../../create/lazy.js';\nimport { objectNameToString } from '../util.js';\nexport function variantToMeta(lookup, variant) {\n    return objectSpread({ args: variant.fields.map(({ type }) => lookup.getTypeDef(type).type) }, variant);\n}\n/** @internal */\nexport function decorateErrors(registry, { lookup, pallets }, version) {\n    const result = {};\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { errors, index, name } = pallets[i];\n        if (errors.isSome) {\n            const sectionIndex = version >= 12 ? index.toNumber() : i;\n            lazyMethod(result, stringCamelCase(name), () => lazyVariants(lookup, errors.unwrap(), objectNameToString, (variant) => ({\n                // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects\n                is: (errorMod) => isCodec(errorMod) &&\n                    isCodec(errorMod.index) &&\n                    errorMod.index.eq(sectionIndex) && (isU8a(errorMod.error)\n                    ? errorMod.error[0] === variant.index.toNumber()\n                    : isCodec(errorMod.error) && errorMod.error.eq(variant.index)),\n                meta: registry.createTypeUnsafe('ErrorMetadataLatest', [variantToMeta(lookup, variant)])\n            })));\n        }\n    }\n    return result;\n}\n","import { isCodec, isU8a, lazyMethod, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from '../../../create/lazy.js';\nimport { variantToMeta } from '../errors/index.js';\nimport { objectNameToString } from '../util.js';\nexport function filterEventsSome({ events }) {\n    return events.isSome;\n}\n/** @internal */\nexport function decorateEvents(registry, { lookup, pallets }, version) {\n    const result = {};\n    const filtered = pallets.filter(filterEventsSome);\n    for (let i = 0, count = filtered.length; i < count; i++) {\n        const { events, index, name } = filtered[i];\n        const sectionIndex = version >= 12 ? index.toNumber() : i;\n        lazyMethod(result, stringCamelCase(name), () => lazyVariants(lookup, events.unwrap(), objectNameToString, (variant) => ({\n            // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects\n            is: (eventRecord) => isCodec(eventRecord) &&\n                isU8a(eventRecord.index) &&\n                sectionIndex === eventRecord.index[0] &&\n                variant.index.eq(eventRecord.index[1]),\n            meta: registry.createTypeUnsafe('EventMetadataLatest', [variantToMeta(lookup, variant)])\n        })));\n    }\n    return result;\n}\n","import { lazyMethod, objectSpread, stringCamelCase } from '@polkadot/util';\nimport { lazyVariants } from '../../../create/lazy.js';\nimport { getSiName } from '../../util/index.js';\nimport { objectNameToCamel } from '../util.js';\nimport { createUnchecked } from './createUnchecked.js';\nexport function filterCallsSome({ calls }) {\n    return calls.isSome;\n}\nexport function createCallFunction(registry, lookup, variant, sectionName, sectionIndex) {\n    const { fields, index } = variant;\n    const count = fields.length;\n    const args = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const { name, type, typeName } = fields[i];\n        args[i] = objectSpread({\n            name: stringCamelCase(name.unwrapOr(`param${i}`)),\n            type: getSiName(lookup, type)\n        }, typeName.isSome\n            ? { typeName: typeName.unwrap() }\n            : null);\n    }\n    return createUnchecked(registry, sectionName, new Uint8Array([sectionIndex, index.toNumber()]), registry.createTypeUnsafe('FunctionMetadataLatest', [objectSpread({ args }, variant)]));\n}\n/** @internal */\nexport function decorateExtrinsics(registry, { lookup, pallets }, version) {\n    const result = {};\n    const filtered = pallets.filter(filterCallsSome);\n    for (let i = 0, count = filtered.length; i < count; i++) {\n        const { calls, index, name } = filtered[i];\n        const sectionName = stringCamelCase(name);\n        const sectionIndex = version >= 12 ? index.toNumber() : i;\n        lazyMethod(result, sectionName, () => lazyVariants(lookup, calls.unwrap(), objectNameToCamel, (variant) => createCallFunction(registry, lookup, variant, sectionName, sectionIndex)));\n    }\n    return result;\n}\n","import { stringCamelCase } from '@polkadot/util';\nfunction isTx(tx, callIndex) {\n    return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];\n}\n/** @internal */\nexport function createUnchecked(registry, section, callIndex, callMetadata) {\n    const expectedArgs = callMetadata.fields;\n    const funcName = stringCamelCase(callMetadata.name);\n    const extrinsicFn = (...args) => {\n        if (expectedArgs.length !== args.length) {\n            throw new Error(`Extrinsic ${section}.${funcName} expects ${expectedArgs.length} arguments, got ${args.length}.`);\n        }\n        return registry.createTypeUnsafe('Call', [{ args, callIndex }, callMetadata]);\n    };\n    extrinsicFn.is = (tx) => isTx(tx, callIndex);\n    extrinsicFn.callIndex = callIndex;\n    extrinsicFn.meta = callMetadata;\n    extrinsicFn.method = funcName;\n    extrinsicFn.section = section;\n    extrinsicFn.toJSON = () => callMetadata.toJSON();\n    return extrinsicFn;\n}\n","import { Metadata } from '../Metadata.js';\nimport { decorateConstants } from './constants/index.js';\nimport { decorateErrors } from './errors/index.js';\nimport { decorateEvents, filterEventsSome } from './events/index.js';\nimport { decorateExtrinsics, filterCallsSome } from './extrinsics/index.js';\nimport { decorateStorage } from './storage/index.js';\n/**\n * Expands the metadata by decoration into consts, query and tx sections\n */\nexport function expandMetadata(registry, metadata) {\n    if (!(metadata instanceof Metadata)) {\n        throw new Error('You need to pass a valid Metadata instance to Decorated');\n    }\n    const latest = metadata.asLatest;\n    const version = metadata.version;\n    return {\n        consts: decorateConstants(registry, latest, version),\n        errors: decorateErrors(registry, latest, version),\n        events: decorateEvents(registry, latest, version),\n        query: decorateStorage(registry, latest, version),\n        registry,\n        tx: decorateExtrinsics(registry, latest, version)\n    };\n}\nexport { decorateConstants, decorateErrors, decorateEvents, decorateExtrinsics, decorateStorage, filterCallsSome, filterEventsSome };\n","import { u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { blake2AsU8a, xxhashAsU8a } from '@polkadot/util-crypto';\nconst DEFAULT_FN = (data) => xxhashAsU8a(data, 128);\nconst HASHERS = {\n    Blake2_128: (data) => // eslint-disable-line camelcase\n     blake2AsU8a(data, 128),\n    Blake2_128Concat: (data) => // eslint-disable-line camelcase\n     u8aConcat(blake2AsU8a(data, 128), u8aToU8a(data)),\n    Blake2_256: (data) => // eslint-disable-line camelcase\n     blake2AsU8a(data, 256),\n    Identity: (data) => u8aToU8a(data),\n    Twox128: (data) => xxhashAsU8a(data, 128),\n    Twox256: (data) => xxhashAsU8a(data, 256),\n    Twox64Concat: (data) => u8aConcat(xxhashAsU8a(data, 64), u8aToU8a(data))\n};\n/** @internal */\nexport function getHasher(hasher) {\n    return HASHERS[hasher.type] || DEFAULT_FN;\n}\n","import { Raw } from '@polkadot/types-codec';\nimport { compactAddLength, compactStripLength, isUndefined, objectSpread, stringCamelCase, u8aConcat, u8aToU8a } from '@polkadot/util';\nimport { xxhashAsU8a } from '@polkadot/util-crypto';\nimport { getSiName } from '../../util/index.js';\nimport { getHasher } from './getHasher.js';\nexport const NO_RAW_ARGS = {\n    args: [],\n    hashers: [],\n    keys: []\n};\n/** @internal */\nfunction filterDefined(a) {\n    return !isUndefined(a);\n}\n/** @internal */\nfunction assertArgs({ method, section }, { args, keys }) {\n    if (!Array.isArray(args)) {\n        throw new Error(`Call to ${stringCamelCase(section || 'unknown')}.${stringCamelCase(method || 'unknown')} needs ${keys.length} arguments`);\n    }\n    else if (args.filter(filterDefined).length !== keys.length) {\n        throw new Error(`Call to ${stringCamelCase(section || 'unknown')}.${stringCamelCase(method || 'unknown')} needs ${keys.length} arguments, found [${args.join(', ')}]`);\n    }\n}\n/** @internal */\nexport function createKeyRawParts(registry, itemFn, { args, hashers, keys }) {\n    const count = keys.length;\n    const extra = new Array(count);\n    for (let i = 0; i < count; i++) {\n        extra[i] = getHasher(hashers[i])(registry.createTypeUnsafe(registry.createLookupType(keys[i]), [args[i]]).toU8a());\n    }\n    return [\n        [\n            xxhashAsU8a(itemFn.prefix, 128),\n            xxhashAsU8a(itemFn.method, 128)\n        ],\n        extra\n    ];\n}\n/** @internal */\nexport function createKeyInspect(registry, itemFn, args) {\n    assertArgs(itemFn, args);\n    const { meta } = itemFn;\n    const [prefix, extra] = createKeyRawParts(registry, itemFn, args);\n    let types = [];\n    if (meta.type.isMap) {\n        const { hashers, key } = meta.type.asMap;\n        types = hashers.length === 1\n            ? [`${hashers[0].type}(${getSiName(registry.lookup, key)})`]\n            : registry.lookup.getSiType(key).def.asTuple.map((k, i) => `${hashers[i].type}(${getSiName(registry.lookup, k)})`);\n    }\n    const names = ['module', 'method'].concat(...args.args.map((_, i) => types[i]));\n    return {\n        inner: prefix\n            .concat(...extra)\n            .map((v, i) => ({ name: names[i], outer: [v] }))\n    };\n}\n/** @internal */\nexport function createKeyRaw(registry, itemFn, args) {\n    const [prefix, extra] = createKeyRawParts(registry, itemFn, args);\n    return u8aConcat(...prefix, ...extra);\n}\n/** @internal */\nfunction createKey(registry, itemFn, args) {\n    assertArgs(itemFn, args);\n    // always add the length prefix (underlying it is Bytes)\n    return compactAddLength(createKeyRaw(registry, itemFn, args));\n}\n/** @internal */\nfunction createStorageInspect(registry, itemFn, options) {\n    const { meta: { type } } = itemFn;\n    return (...args) => {\n        if (type.isPlain) {\n            return options.skipHashing\n                ? { inner: [], name: 'wellKnown', outer: [u8aToU8a(options.key)] }\n                : createKeyInspect(registry, itemFn, NO_RAW_ARGS);\n        }\n        const { hashers, key } = type.asMap;\n        return hashers.length === 1\n            ? createKeyInspect(registry, itemFn, { args, hashers, keys: [key] })\n            : createKeyInspect(registry, itemFn, { args, hashers, keys: registry.lookup.getSiType(key).def.asTuple });\n    };\n}\n/** @internal */\nfunction createStorageFn(registry, itemFn, options) {\n    const { meta: { type } } = itemFn;\n    let cacheKey = null;\n    // Can only have zero or one argument:\n    //   - storage.system.account(address)\n    //   - storage.timestamp.blockPeriod()\n    // For higher-map queries the params are passed in as an tuple, [key1, key2]\n    return (...args) => {\n        if (type.isPlain) {\n            if (!cacheKey) {\n                cacheKey = options.skipHashing\n                    ? compactAddLength(u8aToU8a(options.key))\n                    : createKey(registry, itemFn, NO_RAW_ARGS);\n            }\n            return cacheKey;\n        }\n        const { hashers, key } = type.asMap;\n        return hashers.length === 1\n            ? createKey(registry, itemFn, { args, hashers, keys: [key] })\n            : createKey(registry, itemFn, { args, hashers, keys: registry.lookup.getSiType(key).def.asTuple });\n    };\n}\n/** @internal */\nfunction createWithMeta(registry, itemFn, options) {\n    const { meta, method, prefix, section } = itemFn;\n    const storageFn = createStorageFn(registry, itemFn, options);\n    storageFn.inspect = createStorageInspect(registry, itemFn, options);\n    storageFn.meta = meta;\n    storageFn.method = stringCamelCase(method);\n    storageFn.prefix = prefix;\n    storageFn.section = section;\n    // explicitly add the actual method in the toJSON, this gets used to determine caching and without it\n    // instances (e.g. collective) will not work since it is only matched on param meta\n    storageFn.toJSON = () => objectSpread({ storage: { method, prefix, section } }, meta.toJSON());\n    return storageFn;\n}\n/** @internal */\nfunction extendHeadMeta(registry, { meta: { docs, name, type }, section }, { method }, iterFn) {\n    // metadata with a fallback value using the type of the key, the normal\n    // meta fallback only applies to actual entry values, create one for head\n    const meta = registry.createTypeUnsafe('StorageEntryMetadataLatest', [{\n            docs,\n            fallback: registry.createTypeUnsafe('Bytes', []),\n            modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', [1]), // required\n            name,\n            type: registry.createTypeUnsafe('StorageEntryTypeLatest', [type.asMap.key, 0])\n        }]);\n    iterFn.meta = meta;\n    const fn = (...args) => registry.createTypeUnsafe('StorageKey', [iterFn(...args), { method, section }]);\n    fn.meta = meta;\n    return fn;\n}\n/** @internal */\nfunction extendPrefixedMap(registry, itemFn, storageFn) {\n    const { meta: { type }, method, section } = itemFn;\n    storageFn.iterKey = extendHeadMeta(registry, itemFn, storageFn, (...args) => {\n        if (args.length && (type.isPlain || (args.length >= type.asMap.hashers.length))) {\n            throw new Error(`Iteration of ${stringCamelCase(section || 'unknown')}.${stringCamelCase(method || 'unknown')} needs arguments to be at least one less than the full arguments, found [${args.join(', ')}]`);\n        }\n        if (args.length) {\n            if (type.isMap) {\n                const { hashers, key } = type.asMap;\n                const keysVec = hashers.length === 1\n                    ? [key]\n                    : registry.lookup.getSiType(key).def.asTuple;\n                return new Raw(registry, createKeyRaw(registry, itemFn, { args, hashers: hashers.slice(0, args.length), keys: keysVec.slice(0, args.length) }));\n            }\n        }\n        return new Raw(registry, createKeyRaw(registry, itemFn, NO_RAW_ARGS));\n    });\n    return storageFn;\n}\n/** @internal */\nexport function createFunction(registry, itemFn, options) {\n    const { meta: { type } } = itemFn;\n    const storageFn = createWithMeta(registry, itemFn, options);\n    if (type.isMap) {\n        extendPrefixedMap(registry, itemFn, storageFn);\n    }\n    storageFn.keyPrefix = (...args) => (storageFn.iterKey && storageFn.iterKey(...args)) ||\n        compactStripLength(storageFn())[1];\n    return storageFn;\n}\n","import { getTypeDef } from '@polkadot/types-create';\nimport { createFunction } from './createFunction.js';\nfunction findSiPrimitive(registry, type) {\n    const prim = type.toLowerCase();\n    return registry.lookup.types.find((t) => (t.type.def.isPrimitive &&\n        t.type.def.asPrimitive.toString().toLowerCase() === prim) || (t.type.def.isHistoricMetaCompat &&\n        t.type.def.asHistoricMetaCompat.toString().toLowerCase() === prim));\n}\nfunction findSiType(registry, type) {\n    let portable = findSiPrimitive(registry, type);\n    // some types are either Sequence or Arrays, cater for these\n    // specifically (these all come from the base substrate known keys)\n    if (!portable && (type === 'Bytes' || type.startsWith('[u8;'))) {\n        const u8 = findSiPrimitive(registry, 'u8');\n        if (u8) {\n            if (type === 'Bytes') {\n                portable = registry.lookup.types.find((t) => (t.type.def.isSequence &&\n                    t.type.def.asSequence.type.eq(u8.id)) || (t.type.def.isHistoricMetaCompat &&\n                    t.type.def.asHistoricMetaCompat.eq(type)));\n            }\n            else {\n                const td = getTypeDef(type);\n                portable = registry.lookup.types.find((t) => (t.type.def.isArray &&\n                    t.type.def.asArray.eq({\n                        len: td.length,\n                        type: u8.id\n                    })) || (t.type.def.isHistoricMetaCompat &&\n                    t.type.def.asHistoricMetaCompat.eq(type)));\n            }\n        }\n    }\n    if (!portable) {\n        // Not fatal, however if this happens the storage key using this\n        // type will not return valid values, rather it will most probably\n        // be decoded incorrectly\n        console.warn(`Unable to map ${type} to a lookup index`);\n    }\n    return portable;\n}\n/** @internal */\nexport function createRuntimeFunction({ method, prefix, section }, key, { docs, type }) {\n    return (registry) => createFunction(registry, {\n        meta: registry.createTypeUnsafe('StorageEntryMetadataLatest', [{\n                docs: registry.createTypeUnsafe('Vec<Text>', [[docs]]),\n                modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', ['Required']),\n                name: registry.createTypeUnsafe('Text', [method]),\n                toJSON: () => key,\n                type: registry.createTypeUnsafe('StorageEntryTypeLatest', [{ Plain: findSiType(registry, type)?.id || 0 }])\n            }]),\n        method,\n        prefix,\n        section\n    }, { key, skipHashing: true });\n}\n","import { createRuntimeFunction } from './util.js';\nconst prefix = 'Substrate';\nconst section = 'substrate';\nfunction createSubstrateFn(method, key, meta) {\n    return createRuntimeFunction({ method, prefix, section }, key, meta);\n}\nexport const substrate = {\n    changesTrieConfig: createSubstrateFn('changesTrieConfig', ':changes_trie', {\n        docs: 'Changes trie configuration is stored under this key.',\n        type: 'u32'\n    }),\n    childStorageKeyPrefix: createSubstrateFn('childStorageKeyPrefix', ':child_storage:', {\n        docs: 'Prefix of child storage keys.',\n        type: 'u32'\n    }),\n    code: createSubstrateFn('code', ':code', {\n        docs: 'Wasm code of the runtime.',\n        type: 'Bytes'\n    }),\n    extrinsicIndex: createSubstrateFn('extrinsicIndex', ':extrinsic_index', {\n        docs: 'Current extrinsic index (u32) is stored under this key.',\n        type: 'u32'\n    }),\n    heapPages: createSubstrateFn('heapPages', ':heappages', {\n        docs: 'Number of wasm linear memory pages required for execution of the runtime.',\n        type: 'u64'\n    }),\n    intrablockEntropy: createSubstrateFn('intrablockEntropy', ':intrablock_entropy', {\n        docs: 'Current intra-block entropy (a universally unique `[u8; 32]` value) is stored here.',\n        type: '[u8; 32]'\n    })\n};\n","import { lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from '../util.js';\nimport { createFunction, createKeyRaw, NO_RAW_ARGS } from './createFunction.js';\nimport { getStorage } from './getStorage.js';\nimport { createRuntimeFunction } from './util.js';\nconst VERSION_NAME = 'palletVersion';\nconst VERSION_KEY = ':__STORAGE_VERSION__:';\nconst VERSION_DOCS = { docs: 'Returns the current pallet version from storage', type: 'u16' };\n/** @internal */\nexport function decorateStorage(registry, { pallets }, _metaVersion) {\n    const result = getStorage(registry);\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { name, storage } = pallets[i];\n        if (storage.isSome) {\n            const section = stringCamelCase(name);\n            const { items, prefix: _prefix } = storage.unwrap();\n            const prefix = _prefix.toString();\n            lazyMethod(result, section, () => lazyMethods({\n                palletVersion: createRuntimeFunction({ method: VERSION_NAME, prefix, section }, createKeyRaw(registry, { method: VERSION_KEY, prefix: name.toString() }, NO_RAW_ARGS), VERSION_DOCS)(registry)\n            }, items, (meta) => createFunction(registry, { meta, method: meta.name.toString(), prefix, section }, {}), objectNameToCamel));\n        }\n    }\n    return result;\n}\n","import { substrate } from './substrate.js';\n/** @internal */\nexport function getStorage(registry) {\n    const storage = {};\n    const entries = Object.entries(substrate);\n    for (let e = 0, count = entries.length; e < count; e++) {\n        storage[entries[e][0]] = entries[e][1](registry);\n    }\n    return { substrate: storage };\n}\n","import { stringCamelCase } from '@polkadot/util';\nfunction convert(fn) {\n    return ({ name }) => fn(name);\n}\nexport const objectNameToCamel = /*#__PURE__*/ convert(stringCamelCase);\nexport const objectNameToString = /*#__PURE__*/ convert((n) => n.toString());\n","export function getSiName(lookup, type) {\n    const typeDef = lookup.getTypeDef(type);\n    return typeDef.lookupName || typeDef.type;\n}\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/types', path: (({ url: getAbsoluteUrl('ules/@polkadot/types/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/types/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/types/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/types/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '11.3.1' };\n","import { getSiName } from '../metadata/util/index.js';\n/** @internal */\nexport function unwrapStorageSi(type) {\n    return type.isPlain\n        ? type.asPlain\n        : type.asMap.value;\n}\n/** @internal */\nexport function unwrapStorageType(registry, type, isOptional) {\n    const outputType = getSiName(registry.lookup, unwrapStorageSi(type));\n    return isOptional\n        ? `Option<${outputType}>`\n        : outputType;\n}\n","import { base58Decode } from '../base58/index.js';\nimport { checkAddressChecksum } from './checksum.js';\nimport { defaults } from './defaults.js';\n/**\n * @name checkAddress\n * @summary Validates an ss58 address.\n * @description\n * From the provided input, validate that the address is a valid input.\n */\nexport function checkAddress(address, prefix) {\n    let decoded;\n    try {\n        decoded = base58Decode(address);\n    }\n    catch (error) {\n        return [false, error.message];\n    }\n    const [isValid, , , ss58Decoded] = checkAddressChecksum(decoded);\n    if (ss58Decoded !== prefix) {\n        return [false, `Prefix mismatch, expected ${prefix}, found ${ss58Decoded}`];\n    }\n    else if (!defaults.allowedEncodedLengths.includes(decoded.length)) {\n        return [false, 'Invalid decoded address length'];\n    }\n    return [isValid, isValid ? null : 'Invalid decoded address checksum'];\n}\n","import { u8aConcat } from '@polkadot/util';\nimport { base58Encode } from '../base58/index.js';\nimport { decodeAddress } from './decode.js';\nimport { defaults } from './defaults.js';\nimport { sshash } from './sshash.js';\nexport function encodeAddress(key, ss58Format = defaults.prefix) {\n    // decode it, this means we can re-encode an address\n    const u8a = decodeAddress(key);\n    if ((ss58Format < 0) || (ss58Format > 16383) || [46, 47].includes(ss58Format)) {\n        throw new Error('Out of range ss58Format specified');\n    }\n    else if (!defaults.allowedDecodedLengths.includes(u8a.length)) {\n        throw new Error(`Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(', ')}`);\n    }\n    const input = u8aConcat(ss58Format < 64\n        ? [ss58Format]\n        : [\n            ((ss58Format & 252) >> 2) | 64,\n            (ss58Format >> 8) | ((ss58Format & 3) << 6)\n        ], u8a);\n    return base58Encode(u8aConcat(input, sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}\n","import { logger } from '@polkadot/util';\nimport { defaults } from './defaults.js';\nconst l = logger('setSS58Format');\n/**\n * @description Sets the global SS58 format to use for address encoding\n * @deprecated Use keyring.setSS58Format\n */\nexport function setSS58Format(prefix) {\n    l.warn('Global setting of the ss58Format is deprecated and not recommended. Set format on the keyring (if used) or as part of the address encode function');\n    defaults.prefix = prefix;\n}\n","import { base64 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from '../base32/helpers.js';\nconst config = {\n    chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    coder: base64,\n    type: 'base64',\n    withPadding: true\n};\n/**\n * @name base64Validate\n * @summary Validates a base64 value.\n * @description\n * Validates that the supplied value is valid base64\n */\nexport const base64Validate = /*#__PURE__*/ createValidate(config);\n/**\n * @name isBase64\n * @description Checks if the input is in base64, returning true/false\n */\nexport const isBase64 = /*#__PURE__*/ createIs(base64Validate);\n/**\n * @name base64Decode\n * @summary Decodes a base64 value.\n * @description\n * From the provided input, decode the base64 and return the result as an `Uint8Array`.\n */\nexport const base64Decode = /*#__PURE__*/ createDecode(config, base64Validate);\n/**\n * @name base64Encode\n * @summary Creates a base64 value.\n * @description\n * From the provided input, create the base64 and return the result as a string.\n */\nexport const base64Encode = /*#__PURE__*/ createEncode(config);\n","export const BN_BE_OPTS = { isLe: false };\nexport const BN_LE_OPTS = { isLe: true };\nexport const BN_LE_16_OPTS = { bitLength: 16, isLe: true };\nexport const BN_BE_32_OPTS = { bitLength: 32, isLe: false };\nexport const BN_LE_32_OPTS = { bitLength: 32, isLe: true };\nexport const BN_BE_256_OPTS = { bitLength: 256, isLe: false };\nexport const BN_LE_256_OPTS = { bitLength: 256, isLe: true };\nexport const BN_LE_512_OPTS = { bitLength: 512, isLe: true };\n","import { isReady, waitReady } from '@polkadot/wasm-crypto';\nexport const cryptoIsReady = isReady;\nexport function cryptoWaitReady() {\n    return waitReady()\n        .then(() => {\n        if (!isReady()) {\n            throw new Error('Unable to initialize @polkadot/util-crypto');\n        }\n        return true;\n    })\n        .catch(() => false);\n}\n","import { compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nconst HDKD = compactAddLength(stringToU8a('Ed25519HDKD'));\nexport function ed25519DeriveHard(seed, chainCode) {\n    if (!isU8a(chainCode) || chainCode.length !== 32) {\n        throw new Error('Invalid chainCode passed to derive');\n    }\n    return blake2AsU8a(u8aConcat(HDKD, seed, chainCode));\n}\n","import { ed25519 } from '@noble/curves/ed25519';\nimport { hasBigInt, u8aConcatStrict } from '@polkadot/util';\nimport { ed25519KeypairFromSeed, isReady } from '@polkadot/wasm-crypto';\n/**\n * @name ed25519PairFromSeed\n * @summary Creates a new public/secret keypair from a seed.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromSeed } from '@polkadot/util-crypto';\n *\n * ed25519PairFromSeed(...); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\nexport function ed25519PairFromSeed(seed, onlyJs) {\n    if (!hasBigInt || (!onlyJs && isReady())) {\n        const full = ed25519KeypairFromSeed(seed);\n        return {\n            publicKey: full.slice(32),\n            secretKey: full.slice(0, 64)\n        };\n    }\n    const publicKey = ed25519.getPublicKey(seed);\n    return {\n        publicKey,\n        secretKey: u8aConcatStrict([seed, publicKey])\n    };\n}\n","import { ed25519 } from '@noble/curves/ed25519';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { ed25519Sign as wasmSign, isReady } from '@polkadot/wasm-crypto';\n/**\n * @name ed25519Sign\n * @summary Signs a message using the supplied secretKey\n * @description\n * Returns message signature of `message`, using the `secretKey`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519Sign } from '@polkadot/util-crypto';\n *\n * ed25519Sign([...], [...]); // => [...]\n * ```\n */\nexport function ed25519Sign(message, { publicKey, secretKey }, onlyJs) {\n    if (!secretKey) {\n        throw new Error('Expected a valid secretKey');\n    }\n    else if (!publicKey) {\n        throw new Error('Expected a valid publicKey');\n    }\n    const messageU8a = u8aToU8a(message);\n    const privateU8a = secretKey.subarray(0, 32);\n    return !hasBigInt || (!onlyJs && isReady())\n        ? wasmSign(publicKey, privateU8a, messageU8a)\n        : ed25519.sign(messageU8a, privateU8a);\n}\n","import { ed25519 } from '@noble/curves/ed25519';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { ed25519Verify as wasmVerify, isReady } from '@polkadot/wasm-crypto';\n/**\n * @name ed25519Sign\n * @summary Verifies the signature on the supplied message.\n * @description\n * Verifies the `signature` on `message` with the supplied `publicKey`. Returns `true` on sucess, `false` otherwise.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519Verify } from '@polkadot/util-crypto';\n *\n * ed25519Verify([...], [...], [...]); // => true/false\n * ```\n */\nexport function ed25519Verify(message, signature, publicKey, onlyJs) {\n    const messageU8a = u8aToU8a(message);\n    const publicKeyU8a = u8aToU8a(publicKey);\n    const signatureU8a = u8aToU8a(signature);\n    if (publicKeyU8a.length !== 32) {\n        throw new Error(`Invalid publicKey, received ${publicKeyU8a.length}, expected 32`);\n    }\n    else if (signatureU8a.length !== 64) {\n        throw new Error(`Invalid signature, received ${signatureU8a.length} bytes, expected 64`);\n    }\n    try {\n        return !hasBigInt || (!onlyJs && isReady())\n            ? wasmVerify(signatureU8a, messageU8a, publicKeyU8a)\n            : ed25519.verify(signatureU8a, messageU8a, publicKeyU8a);\n    }\n    catch {\n        return false;\n    }\n}\n","import { u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { keccakAsU8a } from '../keccak/index.js';\nimport { secp256k1Expand } from '../secp256k1/index.js';\nfunction getH160(u8a) {\n    if ([33, 65].includes(u8a.length)) {\n        u8a = keccakAsU8a(secp256k1Expand(u8a));\n    }\n    return u8a.slice(-20);\n}\nexport function ethereumEncode(addressOrPublic) {\n    if (!addressOrPublic) {\n        return '0x';\n    }\n    const u8aAddress = u8aToU8a(addressOrPublic);\n    if (![20, 32, 33, 65].includes(u8aAddress.length)) {\n        throw new Error(`Invalid address or publicKey provided, received ${u8aAddress.length} bytes input`);\n    }\n    const address = u8aToHex(getH160(u8aAddress), -1, false);\n    const hash = u8aToHex(keccakAsU8a(address), -1, false);\n    let result = '';\n    for (let i = 0; i < 40; i++) {\n        result = `${result}${parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]}`;\n    }\n    return `0x${result}`;\n}\n","import { isHex } from '@polkadot/util';\nimport { isEthereumChecksum } from './isChecksum.js';\nexport function isEthereumAddress(address) {\n    if (!address || address.length !== 42 || !isHex(address)) {\n        return false;\n    }\n    else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n    }\n    return isEthereumChecksum(address);\n}\n","import { u8aToHex } from '@polkadot/util';\nimport { keccakAsU8a } from '../keccak/index.js';\nfunction isInvalidChar(char, byte) {\n    return char !== (byte > 7\n        ? char.toUpperCase()\n        : char.toLowerCase());\n}\nexport function isEthereumChecksum(_address) {\n    const address = _address.replace('0x', '');\n    const hash = u8aToHex(keccakAsU8a(address.toLowerCase()), -1, false);\n    for (let i = 0; i < 40; i++) {\n        if (isInvalidChar(address[i], parseInt(hash[i], 16))) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { bnToU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { BN_BE_32_OPTS } from '../../bn.js';\nimport { hmacShaAsU8a } from '../../hmac/index.js';\nimport { secp256k1PairFromSeed, secp256k1PrivateKeyTweakAdd } from '../../secp256k1/index.js';\nimport { HARDENED, hdValidatePath } from '../validatePath.js';\nconst MASTER_SECRET = stringToU8a('Bitcoin seed');\nfunction createCoded(secretKey, chainCode) {\n    return {\n        chainCode,\n        publicKey: secp256k1PairFromSeed(secretKey).publicKey,\n        secretKey\n    };\n}\nfunction deriveChild(hd, index) {\n    const indexBuffer = bnToU8a(index, BN_BE_32_OPTS);\n    const data = index >= HARDENED\n        ? u8aConcat(new Uint8Array(1), hd.secretKey, indexBuffer)\n        : u8aConcat(hd.publicKey, indexBuffer);\n    try {\n        const I = hmacShaAsU8a(hd.chainCode, data, 512);\n        return createCoded(secp256k1PrivateKeyTweakAdd(hd.secretKey, I.slice(0, 32)), I.slice(32));\n    }\n    catch {\n        // In case parse256(IL) >= n or ki == 0, proceed with the next value for i\n        return deriveChild(hd, index + 1);\n    }\n}\nexport function hdEthereum(seed, path = '') {\n    const I = hmacShaAsU8a(MASTER_SECRET, seed, 512);\n    let hd = createCoded(I.slice(0, 32), I.slice(32));\n    if (!path || path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n        return hd;\n    }\n    if (!hdValidatePath(path)) {\n        throw new Error('Invalid derivation path');\n    }\n    const parts = path.split('/').slice(1);\n    for (const p of parts) {\n        hd = deriveChild(hd, parseInt(p, 10) + ((p.length > 1) && p.endsWith(\"'\")\n            ? HARDENED\n            : 0));\n    }\n    return hd;\n}\n","import { BN_EIGHT, bnToU8a, u8aConcat, u8aToBn } from '@polkadot/util';\nimport { BN_LE_32_OPTS, BN_LE_512_OPTS, BN_LE_OPTS } from '../../bn.js';\nimport { hmacShaAsU8a } from '../../hmac/index.js';\nexport function ledgerDerivePrivate(xprv, index) {\n    const kl = xprv.subarray(0, 32);\n    const kr = xprv.subarray(32, 64);\n    const cc = xprv.subarray(64, 96);\n    const data = u8aConcat([0], kl, kr, bnToU8a(index, BN_LE_32_OPTS));\n    const z = hmacShaAsU8a(cc, data, 512);\n    data[0] = 0x01;\n    return u8aConcat(bnToU8a(u8aToBn(kl, BN_LE_OPTS).iadd(u8aToBn(z.subarray(0, 28), BN_LE_OPTS).imul(BN_EIGHT)), BN_LE_512_OPTS).subarray(0, 32), bnToU8a(u8aToBn(kr, BN_LE_OPTS).iadd(u8aToBn(z.subarray(32, 64), BN_LE_OPTS)), BN_LE_512_OPTS).subarray(0, 32), hmacShaAsU8a(cc, data, 512).subarray(32, 64));\n}\n","import { u8aConcat } from '@polkadot/util';\nimport { hmacShaAsU8a } from '../../hmac/index.js';\nimport { mnemonicToSeedSync } from '../../mnemonic/bip39.js';\nconst ED25519_CRYPTO = 'ed25519 seed';\nexport function ledgerMaster(mnemonic, password) {\n    const seed = mnemonicToSeedSync(mnemonic, password);\n    const chainCode = hmacShaAsU8a(ED25519_CRYPTO, new Uint8Array([1, ...seed]), 256);\n    let priv;\n    while (!priv || (priv[31] & 32)) {\n        priv = hmacShaAsU8a(ED25519_CRYPTO, priv || seed, 512);\n    }\n    priv[0] &= 248;\n    priv[31] &= 127;\n    priv[31] |= 64;\n    return u8aConcat(priv, chainCode);\n}\n","import { ed25519PairFromSeed } from '../../ed25519/index.js';\nimport { mnemonicValidate } from '../../mnemonic/index.js';\nimport { HARDENED, hdValidatePath } from '../validatePath.js';\nimport { ledgerDerivePrivate } from './derivePrivate.js';\nimport { ledgerMaster } from './master.js';\nexport function hdLedger(_mnemonic, path) {\n    const words = _mnemonic\n        .split(' ')\n        .map((s) => s.trim())\n        .filter((s) => s);\n    if (![12, 24, 25].includes(words.length)) {\n        throw new Error('Expected a mnemonic with 24 words (or 25 including a password)');\n    }\n    const [mnemonic, password] = words.length === 25\n        ? [words.slice(0, 24).join(' '), words[24]]\n        : [words.join(' '), ''];\n    if (!mnemonicValidate(mnemonic)) {\n        throw new Error('Invalid mnemonic passed to ledger derivation');\n    }\n    else if (!hdValidatePath(path)) {\n        throw new Error('Invalid derivation path');\n    }\n    const parts = path.split('/').slice(1);\n    let seed = ledgerMaster(mnemonic, password);\n    for (const p of parts) {\n        const n = parseInt(p.replace(/'$/, ''), 10);\n        seed = ledgerDerivePrivate(seed, (n < HARDENED) ? (n + HARDENED) : n);\n    }\n    return ed25519PairFromSeed(seed.slice(0, 32));\n}\n","export const HARDENED = 0x80000000;\nexport function hdValidatePath(path) {\n    if (!path.startsWith('m/')) {\n        return false;\n    }\n    const parts = path.split('/').slice(1);\n    for (const p of parts) {\n        const n = /^\\d+'?$/.test(p)\n            ? parseInt(p.replace(/'$/, ''), 10)\n            : Number.NaN;\n        if (isNaN(n) || (n >= HARDENED) || (n < 0)) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { hmacSha256, hmacSha512, isReady } from '@polkadot/wasm-crypto';\nconst JS_HASH = {\n    256: sha256,\n    512: sha512\n};\nconst WA_MHAC = {\n    256: hmacSha256,\n    512: hmacSha512\n};\nfunction createSha(bitLength) {\n    return (key, data, onlyJs) => hmacShaAsU8a(key, data, bitLength, onlyJs);\n}\n/**\n * @name hmacShaAsU8a\n * @description creates a Hmac Sha (256/512) Uint8Array from the key & data\n */\nexport function hmacShaAsU8a(key, data, bitLength = 256, onlyJs) {\n    const u8aKey = u8aToU8a(key);\n    return !hasBigInt || (!onlyJs && isReady())\n        ? WA_MHAC[bitLength](u8aKey, data)\n        : hmac(JS_HASH[bitLength], u8aKey, data);\n}\n/**\n * @name hmacSha256AsU8a\n * @description creates a Hmac Sha256 Uint8Array from the key & data\n */\nexport const hmacSha256AsU8a = /*#__PURE__*/ createSha(256);\n/**\n * @name hmacSha512AsU8a\n * @description creates a Hmac Sha512 Uint8Array from the key & data\n */\nexport const hmacSha512AsU8a = /*#__PURE__*/ createSha(512);\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/networks', path: (({ url: getAbsoluteUrl('ules/@polkadot/networks/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/networks/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/networks/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/networks/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.6.2' };\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/x-randomvalues', path: (({ url: getAbsoluteUrl('ules/@polkadot/x-randomvalues/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/x-randomvalues/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/x-randomvalues/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/x-randomvalues/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.6.2' };\n","import { packageInfo as netInfo } from '@polkadot/networks/packageInfo';\nimport { packageInfo as utilInfo } from '@polkadot/util/packageInfo';\nimport { packageInfo as randomInfo } from '@polkadot/x-randomvalues';\nexport default [netInfo, utilInfo, randomInfo];\n","import { detectPackage } from '@polkadot/util';\nimport others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\ndetectPackage(packageInfo, null, others);\n","import { BigInt } from '@polkadot/x-bigint';\nimport { exposeGlobal } from '@polkadot/x-global';\nexposeGlobal('BigInt', BigInt);\n","import '@polkadot/x-bigint/shim';\nimport { cryptoWaitReady } from './crypto.js';\ncryptoWaitReady().catch(() => {\n    // shouldn't happen, logged and caught inside cryptoWaitReady\n});\n","import { decodeAddress } from './decode.js';\n/**\n * @name addressToEvm\n * @summary Converts an SS58 address to its corresponding EVM address.\n */\nexport function addressToEvm(address, ignoreChecksum) {\n    return decodeAddress(address, ignoreChecksum).subarray(0, 20);\n}\n","import { isU8a, u8aToU8a } from '@polkadot/util';\nimport { sr25519DerivePublicSoft } from '@polkadot/wasm-crypto';\nexport function sr25519DerivePublic(publicKey, chainCode) {\n    const publicKeyU8a = u8aToU8a(publicKey);\n    if (!isU8a(chainCode) || chainCode.length !== 32) {\n        throw new Error('Invalid chainCode passed to derive');\n    }\n    else if (publicKeyU8a.length !== 32) {\n        throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);\n    }\n    return sr25519DerivePublicSoft(publicKeyU8a, chainCode);\n}\n","import { keyExtractPath } from '../key/index.js';\nimport { sr25519DerivePublic } from '../sr25519/index.js';\nimport { decodeAddress } from './decode.js';\nimport { encodeAddress } from './encode.js';\nfunction filterHard({ isHard }) {\n    return isHard;\n}\n/**\n * @name deriveAddress\n * @summary Creates a sr25519 derived address from the supplied and path.\n * @description\n * Creates a sr25519 derived address based on the input address/publicKey and the uri supplied.\n */\nexport function deriveAddress(who, suri, ss58Format) {\n    const { path } = keyExtractPath(suri);\n    if (!path.length || path.every(filterHard)) {\n        throw new Error('Expected suri to contain a combination of non-hard paths');\n    }\n    let publicKey = decodeAddress(who);\n    for (const { chainCode } of path) {\n        publicKey = sr25519DerivePublic(publicKey, chainCode);\n    }\n    return encodeAddress(publicKey, ss58Format);\n}\n","import { bnToU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nimport { BN_LE_16_OPTS } from '../bn.js';\nimport { decodeAddress } from './decode.js';\nconst PREFIX = stringToU8a('modlpy/utilisuba');\nexport function createKeyDerived(who, index) {\n    return blake2AsU8a(u8aConcat(PREFIX, decodeAddress(who), bnToU8a(index, BN_LE_16_OPTS)));\n}\n","import { decodeAddress } from './decode.js';\nimport { encodeAddress } from './encode.js';\nimport { createKeyDerived } from './keyDerived.js';\n/**\n * @name encodeDerivedAddress\n * @summary Creates a derived address as used in Substrate utility.\n * @description\n * Creates a Substrate derived address based on the input address/publicKey and the index supplied.\n */\nexport function encodeDerivedAddress(who, index, ss58Format) {\n    return encodeAddress(createKeyDerived(decodeAddress(who), index), ss58Format);\n}\n","import { decodeAddress } from './decode.js';\nexport function addressToU8a(who) {\n    return decodeAddress(who);\n}\n","import { bnToU8a, compactToU8a, stringToU8a, u8aConcat, u8aSorted } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nimport { BN_LE_16_OPTS } from '../bn.js';\nimport { addressToU8a } from './util.js';\nconst PREFIX = stringToU8a('modlpy/utilisuba');\nexport function createKeyMulti(who, threshold) {\n    return blake2AsU8a(u8aConcat(PREFIX, compactToU8a(who.length), ...u8aSorted(who.map(addressToU8a)), bnToU8a(threshold, BN_LE_16_OPTS)));\n}\n","import { encodeAddress } from './encode.js';\nimport { createKeyMulti } from './keyMulti.js';\n/**\n * @name encodeMultiAddress\n * @summary Creates a multisig address.\n * @description\n * Creates a Substrate multisig address based on the input address and the required threshold.\n */\nexport function encodeMultiAddress(who, threshold, ss58Format) {\n    return encodeAddress(createKeyMulti(who, threshold), ss58Format);\n}\n","import { u8aConcat } from '@polkadot/util';\nimport { hasher } from '../secp256k1/hasher.js';\nimport { encodeAddress } from './encode.js';\n/**\n * @name evmToAddress\n * @summary Converts an EVM address to its corresponding SS58 address.\n */\nexport function evmToAddress(evmAddress, ss58Format, hashType = 'blake2') {\n    const message = u8aConcat('evm:', evmAddress);\n    if (message.length !== 24) {\n        throw new Error(`Converting ${evmAddress}: Invalid evm address length`);\n    }\n    return encodeAddress(hasher(hashType, message), ss58Format);\n}\n","import { decodeAddress } from './decode.js';\nexport function validateAddress(encoded, ignoreChecksum, ss58Format) {\n    return !!decodeAddress(encoded, ignoreChecksum, ss58Format);\n}\n","import { validateAddress } from './validate.js';\nexport function isAddress(address, ignoreChecksum, ss58Format) {\n    try {\n        return validateAddress(address, ignoreChecksum, ss58Format);\n    }\n    catch {\n        return false;\n    }\n}\n","import { u8aSorted } from '@polkadot/util';\nimport { encodeAddress } from './encode.js';\nimport { addressToU8a } from './util.js';\nexport function sortAddresses(addresses, ss58Format) {\n    const u8aToAddress = (u8a) => encodeAddress(u8a, ss58Format);\n    return u8aSorted(addresses.map(addressToU8a)).map(u8aToAddress);\n}\n","import { utils } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from './helpers.js';\nconst chars = 'abcdefghijklmnopqrstuvwxyz234567';\nconst config = {\n    chars,\n    coder: utils.chain(\n    // We define our own chain, the default base32 has padding\n    utils.radix2(5), utils.alphabet(chars), {\n        decode: (input) => input.split(''),\n        encode: (input) => input.join('')\n    }),\n    ipfs: 'b',\n    type: 'base32'\n};\n/**\n * @name base32Validate\n * @summary Validates a base32 value.\n * @description\n * Validates that the supplied value is valid base32, throwing exceptions if not\n */\nexport const base32Validate = /*#__PURE__*/ createValidate(config);\n/**\n* @name isBase32\n* @description Checks if the input is in base32, returning true/false\n*/\nexport const isBase32 = /*#__PURE__*/ createIs(base32Validate);\n/**\n * @name base32Decode\n * @summary Delookup a base32 value.\n * @description\n * From the provided input, decode the base32 and return the result as an `Uint8Array`.\n */\nexport const base32Decode = /*#__PURE__*/ createDecode(config, base32Validate);\n/**\n* @name base32Encode\n* @summary Creates a base32 value.\n* @description\n* From the provided input, create the base32 and return the result as a string.\n*/\nexport const base32Encode = /*#__PURE__*/ createEncode(config);\n","/**\n * @name base64Pad\n * @description Adds padding characters for correct length\n */\nexport function base64Pad(value) {\n    return value.padEnd(value.length + (value.length % 4), '=');\n}\n","/**\n * @name base64Trim\n * @description Trims padding characters\n */\nexport function base64Trim(value) {\n    while (value.length && value.endsWith('=')) {\n        value = value.slice(0, -1);\n    }\n    return value;\n}\n","import { randomAsU8a } from '../../random/index.js';\nimport { ed25519PairFromSeed } from './fromSeed.js';\n/**\n * @name ed25519PairFromRandom\n * @summary Creates a new public/secret keypair.\n * @description\n * Returns a new generate object containing a `publicKey` & `secretKey`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromRandom } from '@polkadot/util-crypto';\n *\n * ed25519PairFromRandom(); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\nexport function ed25519PairFromRandom() {\n    return ed25519PairFromSeed(randomAsU8a());\n}\n","/**\n * @name ed25519PairFromSecret\n * @summary Creates a new public/secret keypair from a secret.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied secret.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromSecret } from '@polkadot/util-crypto';\n *\n * ed25519PairFromSecret(...); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\nexport function ed25519PairFromSecret(secretKey) {\n    if (secretKey.length !== 64) {\n        throw new Error('Invalid secretKey provided');\n    }\n    return {\n        publicKey: secretKey.slice(32),\n        secretKey\n    };\n}\n","import { stringToU8a } from '@polkadot/util';\nimport { blake2AsU8a } from '../../blake2/asU8a.js';\nimport { ed25519PairFromSeed } from './fromSeed.js';\n/**\n * @name ed25519PairFromString\n * @summary Creates a new public/secret keypair from a string.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied string. The string is hashed and the value used as the input seed.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromString } from '@polkadot/util-crypto';\n *\n * ed25519PairFromString('test'); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\nexport function ed25519PairFromString(value) {\n    return ed25519PairFromSeed(blake2AsU8a(stringToU8a(value)));\n}\n","import { hexToU8a, isHex } from '@polkadot/util';\nimport { base64Decode } from '../base64/index.js';\nimport { jsonDecryptData } from './decryptData.js';\nexport function jsonDecrypt({ encoded, encoding }, passphrase) {\n    if (!encoded) {\n        throw new Error('No encrypted data available to decode');\n    }\n    return jsonDecryptData(isHex(encoded)\n        ? hexToU8a(encoded)\n        : base64Decode(encoded), passphrase, Array.isArray(encoding.type)\n        ? encoding.type\n        : [encoding.type]);\n}\n","import { u8aConcat } from '@polkadot/util';\nimport { naclEncrypt } from '../nacl/index.js';\nimport { scryptEncode, scryptToU8a } from '../scrypt/index.js';\nimport { jsonEncryptFormat } from './encryptFormat.js';\nexport function jsonEncrypt(data, contentType, passphrase) {\n    let isEncrypted = false;\n    let encoded = data;\n    if (passphrase) {\n        const { params, password, salt } = scryptEncode(passphrase);\n        const { encrypted, nonce } = naclEncrypt(encoded, password.subarray(0, 32));\n        isEncrypted = true;\n        encoded = u8aConcat(scryptToU8a(salt, params), nonce, encrypted);\n    }\n    return jsonEncryptFormat(encoded, contentType, isEncrypted);\n}\n","import { hasBigInt } from '@polkadot/util';\nimport { bip39Generate, isReady } from '@polkadot/wasm-crypto';\nimport { generateMnemonic } from './bip39.js';\n/**\n * @name mnemonicGenerate\n * @summary Creates a valid mnemonic string using using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * ```\n */\nexport function mnemonicGenerate(numWords = 12, wordlist, onlyJs) {\n    return !hasBigInt || (!wordlist && !onlyJs && isReady())\n        ? bip39Generate(numWords)\n        : generateMnemonic(numWords, wordlist);\n}\n","import { BN, hexToBn } from '@polkadot/util';\nimport { randomAsHex } from './asU8a.js';\nconst BN_53 = new BN(0b11111111111111111111111111111111111111111111111111111);\n/**\n * @name randomAsNumber\n * @summary Creates a random number from random bytes.\n * @description\n * Returns a random number generated from the secure bytes.\n * @example\n * <BR>\n *\n * ```javascript\n * import { randomAsNumber } from '@polkadot/util-crypto';\n *\n * randomAsNumber(); // => <random number>\n * ```\n */\nexport function randomAsNumber() {\n    return hexToBn(randomAsHex(8)).and(BN_53).toNumber();\n}\n","import { u8aToU8a } from '@polkadot/util';\nimport { sr25519Agree } from '@polkadot/wasm-crypto';\n/**\n * @name sr25519Agreement\n * @description Key agreement between other's public key and self secret key\n */\nexport function sr25519Agreement(secretKey, publicKey) {\n    const secretKeyU8a = u8aToU8a(secretKey);\n    const publicKeyU8a = u8aToU8a(publicKey);\n    if (publicKeyU8a.length !== 32) {\n        throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);\n    }\n    else if (secretKeyU8a.length !== 64) {\n        throw new Error(`Invalid secretKey, received ${secretKeyU8a.length} bytes, expected 64`);\n    }\n    return sr25519Agree(publicKeyU8a, secretKeyU8a);\n}\n","export const ENCODING = ['scrypt', 'xsalsa20-poly1305'];\nexport const ENCODING_NONE = ['none'];\nexport const ENCODING_VERSION = '3';\nexport const NONCE_LENGTH = 24;\nexport const SCRYPT_LENGTH = 32 + (3 * 4);\n","import { stringToU8a, u8aFixLength } from '@polkadot/util';\nimport { naclDecrypt } from '../nacl/index.js';\nimport { scryptEncode, scryptFromU8a } from '../scrypt/index.js';\nimport { ENCODING, NONCE_LENGTH, SCRYPT_LENGTH } from './constants.js';\nexport function jsonDecryptData(encrypted, passphrase, encType = ENCODING) {\n    if (!encrypted) {\n        throw new Error('No encrypted data available to decode');\n    }\n    else if (encType.includes('xsalsa20-poly1305') && !passphrase) {\n        throw new Error('Password required to decode encrypted data');\n    }\n    let encoded = encrypted;\n    if (passphrase) {\n        let password;\n        if (encType.includes('scrypt')) {\n            const { params, salt } = scryptFromU8a(encrypted);\n            password = scryptEncode(passphrase, salt, params).password;\n            encrypted = encrypted.subarray(SCRYPT_LENGTH);\n        }\n        else {\n            password = stringToU8a(passphrase);\n        }\n        encoded = naclDecrypt(encrypted.subarray(NONCE_LENGTH), encrypted.subarray(0, NONCE_LENGTH), u8aFixLength(password, 256, true));\n    }\n    if (!encoded) {\n        throw new Error('Unable to decode using the supplied passphrase');\n    }\n    return encoded;\n}\n","import { base64Encode } from '../base64/index.js';\nimport { ENCODING, ENCODING_NONE, ENCODING_VERSION } from './constants.js';\nexport function jsonEncryptFormat(encoded, contentType, isEncrypted) {\n    return {\n        encoded: base64Encode(encoded),\n        encoding: {\n            content: contentType,\n            type: isEncrypted\n                ? ENCODING\n                : ENCODING_NONE,\n            version: ENCODING_VERSION\n        }\n    };\n}\n","import { keccak_256 as keccak256Js, keccak_512 as keccak512Js } from '@noble/hashes/sha3';\nimport { keccak256, keccak512 } from '@polkadot/wasm-crypto';\nimport { createAsHex, createBitHasher, createDualHasher } from '../helpers.js';\n/**\n * @name keccakAsU8a\n * @summary Creates a keccak Uint8Array from the input.\n * @description\n * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { keccakAsU8a } from '@polkadot/util-crypto';\n *\n * keccakAsU8a('123'); // => Uint8Array\n * ```\n */\nexport const keccakAsU8a = /*#__PURE__*/ createDualHasher({ 256: keccak256, 512: keccak512 }, { 256: keccak256Js, 512: keccak512Js });\n/**\n * @name keccak256AsU8a\n * @description Creates a keccak256 Uint8Array from the input.\n */\nexport const keccak256AsU8a = /*#__PURE__*/ createBitHasher(256, keccakAsU8a);\n/**\n * @name keccak512AsU8a\n * @description Creates a keccak512 Uint8Array from the input.\n */\nexport const keccak512AsU8a = /*#__PURE__*/ createBitHasher(512, keccakAsU8a);\n/**\n * @name keccakAsHex\n * @description Creates a keccak hex string from the input.\n */\nexport const keccakAsHex = /*#__PURE__*/ createAsHex(keccakAsU8a);\n","import { BN, bnToU8a, compactAddLength, hexToU8a, isBigInt, isBn, isHex, isNumber, isString, stringToU8a } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nimport { BN_LE_256_OPTS } from '../bn.js';\nconst RE_NUMBER = /^\\d+$/;\nconst JUNCTION_ID_LEN = 32;\nexport class DeriveJunction {\n    __internal__chainCode = new Uint8Array(32);\n    __internal__isHard = false;\n    static from(value) {\n        const result = new DeriveJunction();\n        const [code, isHard] = value.startsWith('/')\n            ? [value.substring(1), true]\n            : [value, false];\n        result.soft(RE_NUMBER.test(code)\n            ? new BN(code, 10)\n            : code);\n        return isHard\n            ? result.harden()\n            : result;\n    }\n    get chainCode() {\n        return this.__internal__chainCode;\n    }\n    get isHard() {\n        return this.__internal__isHard;\n    }\n    get isSoft() {\n        return !this.__internal__isHard;\n    }\n    hard(value) {\n        return this.soft(value).harden();\n    }\n    harden() {\n        this.__internal__isHard = true;\n        return this;\n    }\n    soft(value) {\n        if (isNumber(value) || isBn(value) || isBigInt(value)) {\n            return this.soft(bnToU8a(value, BN_LE_256_OPTS));\n        }\n        else if (isHex(value)) {\n            return this.soft(hexToU8a(value));\n        }\n        else if (isString(value)) {\n            return this.soft(compactAddLength(stringToU8a(value)));\n        }\n        else if (value.length > JUNCTION_ID_LEN) {\n            return this.soft(blake2AsU8a(value));\n        }\n        this.__internal__chainCode.fill(0);\n        this.__internal__chainCode.set(value, 0);\n        return this;\n    }\n    soften() {\n        this.__internal__isHard = false;\n        return this;\n    }\n}\n","import { DeriveJunction } from './DeriveJunction.js';\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n/**\n * @description Extract derivation junctions from the supplied path\n */\nexport function keyExtractPath(derivePath) {\n    const parts = derivePath.match(RE_JUNCTION);\n    const path = [];\n    let constructed = '';\n    if (parts) {\n        constructed = parts.join('');\n        for (const p of parts) {\n            path.push(DeriveJunction.from(p.substring(1)));\n        }\n    }\n    if (constructed !== derivePath) {\n        throw new Error(`Re-constructed path \"${constructed}\" does not match input`);\n    }\n    return {\n        parts,\n        path\n    };\n}\n","import { keyExtractPath } from './extractPath.js';\nconst RE_CAPTURE = /^(\\w+( \\w+)*)((\\/\\/?[^/]+)*)(\\/\\/\\/(.*))?$/;\n/**\n * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n */\nexport function keyExtractSuri(suri) {\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n    const matches = suri.match(RE_CAPTURE);\n    if (matches === null) {\n        throw new Error('Unable to match provided value to a secret URI');\n    }\n    const [, phrase, , derivePath, , , password] = matches;\n    const { path } = keyExtractPath(derivePath);\n    return {\n        derivePath,\n        password,\n        path,\n        phrase\n    };\n}\n","import { keyHdkdEcdsa } from './hdkdEcdsa.js';\nimport { keyHdkdEd25519 } from './hdkdEd25519.js';\nimport { keyHdkdSr25519 } from './hdkdSr25519.js';\nconst generators = {\n    ecdsa: keyHdkdEcdsa,\n    ed25519: keyHdkdEd25519,\n    // FIXME This is Substrate-compatible, not Ethereum-compatible\n    ethereum: keyHdkdEcdsa,\n    sr25519: keyHdkdSr25519\n};\nexport function keyFromPath(pair, path, type) {\n    const keyHdkd = generators[type];\n    let result = pair;\n    for (const junction of path) {\n        result = keyHdkd(result, junction);\n    }\n    return result;\n}\n","export function createSeedDeriveFn(fromSeed, derive) {\n    return (keypair, { chainCode, isHard }) => {\n        if (!isHard) {\n            throw new Error('A soft key was found in the path and is not supported');\n        }\n        return fromSeed(derive(keypair.secretKey.subarray(0, 32), chainCode));\n    };\n}\n","import { compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nconst HDKD = compactAddLength(stringToU8a('Secp256k1HDKD'));\nexport function secp256k1DeriveHard(seed, chainCode) {\n    if (!isU8a(chainCode) || chainCode.length !== 32) {\n        throw new Error('Invalid chainCode passed to derive');\n    }\n    // NOTE This is specific to the Substrate HDD derivation, so always use the blake2 hasher\n    return blake2AsU8a(u8aConcat(HDKD, seed, chainCode), 256);\n}\n","import { secp256k1DeriveHard } from '../secp256k1/deriveHard.js';\nimport { secp256k1PairFromSeed } from '../secp256k1/pair/fromSeed.js';\nimport { createSeedDeriveFn } from './hdkdDerive.js';\nexport const keyHdkdEcdsa = /*#__PURE__*/ createSeedDeriveFn(secp256k1PairFromSeed, secp256k1DeriveHard);\n","import { ed25519DeriveHard, ed25519PairFromSeed } from '../ed25519/index.js';\nimport { createSeedDeriveFn } from './hdkdDerive.js';\nexport const keyHdkdEd25519 = /*#__PURE__*/ createSeedDeriveFn(ed25519PairFromSeed, ed25519DeriveHard);\n","import { sr25519DeriveHard } from '../sr25519/deriveHard.js';\nimport { sr25519DeriveSoft } from '../sr25519/deriveSoft.js';\nexport function keyHdkdSr25519(keypair, { chainCode, isSoft }) {\n    return isSoft\n        ? sr25519DeriveSoft(keypair, chainCode)\n        : sr25519DeriveHard(keypair, chainCode);\n}\n","export default 'abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo'.split('|');\n","import { stringToU8a, u8aToU8a } from '@polkadot/util';\nimport { pbkdf2Encode } from '../pbkdf2/index.js';\nimport { randomAsU8a } from '../random/index.js';\nimport { sha256AsU8a } from '../sha/index.js';\nimport DEFAULT_WORDLIST from './wordlists/en.js';\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\n/** @internal */\nfunction normalize(str) {\n    return (str || '').normalize('NFKD');\n}\n/** @internal */\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\n/** @internal */\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => x.toString(2).padStart(8, '0')).join('');\n}\n/** @internal */\nfunction deriveChecksumBits(entropyBuffer) {\n    return bytesToBinary(Array.from(sha256AsU8a(entropyBuffer))).slice(0, (entropyBuffer.length * 8) / 32);\n}\nexport function mnemonicToSeedSync(mnemonic, password) {\n    return pbkdf2Encode(stringToU8a(normalize(mnemonic)), stringToU8a(`mnemonic${normalize(password)}`)).password;\n}\nexport function mnemonicToEntropy(mnemonic, wordlist = DEFAULT_WORDLIST) {\n    const words = normalize(mnemonic).split(' ');\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return index.toString(2).padStart(11, '0');\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const matched = entropyBits.match(/(.{1,8})/g);\n    const entropyBytes = matched?.map(binaryToByte);\n    if (!entropyBytes || (entropyBytes.length % 4 !== 0) || (entropyBytes.length < 16) || (entropyBytes.length > 32)) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = u8aToU8a(entropyBytes);\n    if (deriveChecksumBits(entropy) !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return entropy;\n}\nexport function entropyToMnemonic(entropy, wordlist = DEFAULT_WORDLIST) {\n    // 128 <= ENT <= 256\n    if ((entropy.length % 4 !== 0) || (entropy.length < 16) || (entropy.length > 32)) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const matched = `${bytesToBinary(Array.from(entropy))}${deriveChecksumBits(entropy)}`.match(/(.{1,11})/g);\n    const mapped = matched?.map((b) => wordlist[binaryToByte(b)]);\n    if (!mapped || (mapped.length < 12)) {\n        throw new Error('Unable to map entropy to mnemonic');\n    }\n    return mapped.join(' ');\n}\nexport function generateMnemonic(numWords, wordlist) {\n    return entropyToMnemonic(randomAsU8a((numWords / 3) * 4), wordlist);\n}\nexport function validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch {\n        return false;\n    }\n    return true;\n}\n","import { hasBigInt } from '@polkadot/util';\nimport { bip39ToEntropy, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToEntropy as jsToEntropy } from './bip39.js';\nexport function mnemonicToEntropy(mnemonic, wordlist, onlyJs) {\n    return !hasBigInt || (!wordlist && !onlyJs && isReady())\n        ? bip39ToEntropy(mnemonic)\n        : jsToEntropy(mnemonic, wordlist);\n}\n","import { hasBigInt } from '@polkadot/util';\nimport { bip39ToSeed, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToSeedSync } from './bip39.js';\nimport { mnemonicValidate } from './validate.js';\n/**\n * @name mnemonicToLegacySeed\n * @summary Creates a valid Ethereum/Bitcoin-compatible seed from a mnemonic input\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicToLegacySeed, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n *\n * if (isValidMnemonic) {\n *   console.log(`Seed generated from mnemonic: ${mnemonicToLegacySeed(mnemonic)}`); => u8a\n * }\n * ```\n */\nexport function mnemonicToLegacySeed(mnemonic, password = '', onlyJs, byteLength = 32) {\n    if (!mnemonicValidate(mnemonic)) {\n        throw new Error('Invalid bip39 mnemonic specified');\n    }\n    else if (![32, 64].includes(byteLength)) {\n        throw new Error(`Invalid seed length ${byteLength}, expected 32 or 64`);\n    }\n    return byteLength === 32\n        ? !hasBigInt || (!onlyJs && isReady())\n            ? bip39ToSeed(mnemonic, password)\n            : mnemonicToSeedSync(mnemonic, password).subarray(0, 32)\n        : mnemonicToSeedSync(mnemonic, password);\n}\n","import { stringToU8a } from '@polkadot/util';\nimport { bip39ToMiniSecret, isReady } from '@polkadot/wasm-crypto';\nimport { pbkdf2Encode } from '../pbkdf2/index.js';\nimport { mnemonicToEntropy } from './toEntropy.js';\nimport { mnemonicValidate } from './validate.js';\nexport function mnemonicToMiniSecret(mnemonic, password = '', wordlist, onlyJs) {\n    if (!mnemonicValidate(mnemonic, wordlist, onlyJs)) {\n        throw new Error('Invalid bip39 mnemonic specified');\n    }\n    else if (!wordlist && !onlyJs && isReady()) {\n        return bip39ToMiniSecret(mnemonic, password);\n    }\n    const entropy = mnemonicToEntropy(mnemonic, wordlist);\n    const salt = stringToU8a(`mnemonic${password}`);\n    // return the first 32 bytes as the seed\n    return pbkdf2Encode(entropy, salt).password.slice(0, 32);\n}\n","import { hasBigInt } from '@polkadot/util';\nimport { bip39Validate, isReady } from '@polkadot/wasm-crypto';\nimport { validateMnemonic } from './bip39.js';\n/**\n * @name mnemonicValidate\n * @summary Validates a mnemonic input using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n * ```\n */\nexport function mnemonicValidate(mnemonic, wordlist, onlyJs) {\n    return !hasBigInt || (!wordlist && !onlyJs && isReady())\n        ? bip39Validate(mnemonic)\n        : validateMnemonic(mnemonic, wordlist);\n}\n","import { naclSecretboxOpen } from './tweetnacl.js';\n/**\n * @name naclDecrypt\n * @summary Decrypts a message using the supplied secretKey and nonce\n * @description\n * Returns an decrypted message, using the `secret` and `nonce`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclDecrypt } from '@polkadot/util-crypto';\n *\n * naclDecrypt([...], [...], [...]); // => [...]\n * ```\n */\nexport function naclDecrypt(encrypted, nonce, secret) {\n    return naclSecretboxOpen(encrypted, nonce, secret);\n}\n","import { randomAsU8a } from '../random/asU8a.js';\nimport { naclSecretbox } from './tweetnacl.js';\n/**\n * @name naclEncrypt\n * @summary Encrypts a message using the supplied secretKey and nonce\n * @description\n * Returns an encrypted message, using the `secretKey` and `nonce`. If the `nonce` was not supplied, a random value is generated.\n * @example\n * <BR>\n *\n * ```javascript\n * import { naclEncrypt } from '@polkadot/util-crypto';\n *\n * naclEncrypt([...], [...]); // => [...]\n * ```\n */\nexport function naclEncrypt(message, secret, nonce = randomAsU8a(24)) {\n    return {\n        encrypted: naclSecretbox(message, nonce, secret),\n        nonce\n    };\n}\n","/* eslint-disable brace-style,camelcase,comma-spacing,curly,one-var,padding-line-between-statements,space-infix-ops */\nfunction L32(x, c) { return (x << c) | (x >>> (32 - c)); }\nfunction ld32(x, i) {\n    let u = x[i + 3] & 0xff;\n    u = (u << 8) | (x[i + 2] & 0xff);\n    u = (u << 8) | (x[i + 1] & 0xff);\n    return (u << 8) | (x[i + 0] & 0xff);\n}\nfunction st32(x, j, u) {\n    for (let i = 0; i < 4; i++) {\n        x[j + i] = u & 255;\n        u >>>= 8;\n    }\n}\nfunction vn(x, xi, y, yi, n) {\n    let d = 0;\n    for (let i = 0; i < n; i++)\n        d |= x[xi + i] ^ y[yi + i];\n    return (1 & ((d - 1) >>> 8)) - 1;\n}\nfunction core(out, inp, k, c, h) {\n    const w = new Uint32Array(16), x = new Uint32Array(16), y = new Uint32Array(16), t = new Uint32Array(4);\n    let i, j, m;\n    for (i = 0; i < 4; i++) {\n        x[5 * i] = ld32(c, 4 * i);\n        x[1 + i] = ld32(k, 4 * i);\n        x[6 + i] = ld32(inp, 4 * i);\n        x[11 + i] = ld32(k, 16 + 4 * i);\n    }\n    for (i = 0; i < 16; i++)\n        y[i] = x[i];\n    for (i = 0; i < 20; i++) {\n        for (j = 0; j < 4; j++) {\n            for (m = 0; m < 4; m++)\n                t[m] = x[(5 * j + 4 * m) % 16];\n            t[1] ^= L32((t[0] + t[3]) | 0, 7);\n            t[2] ^= L32((t[1] + t[0]) | 0, 9);\n            t[3] ^= L32((t[2] + t[1]) | 0, 13);\n            t[0] ^= L32((t[3] + t[2]) | 0, 18);\n            for (m = 0; m < 4; m++)\n                w[4 * j + (j + m) % 4] = t[m];\n        }\n        for (m = 0; m < 16; m++)\n            x[m] = w[m];\n    }\n    if (h) {\n        for (i = 0; i < 16; i++)\n            x[i] = (x[i] + y[i]) | 0;\n        for (i = 0; i < 4; i++) {\n            x[5 * i] = (x[5 * i] - ld32(c, 4 * i)) | 0;\n            x[6 + i] = (x[6 + i] - ld32(inp, 4 * i)) | 0;\n        }\n        for (i = 0; i < 4; i++) {\n            st32(out, 4 * i, x[5 * i]);\n            st32(out, 16 + 4 * i, x[6 + i]);\n        }\n    }\n    else {\n        for (i = 0; i < 16; i++)\n            st32(out, 4 * i, (x[i] + y[i]) | 0);\n    }\n}\nconst sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\nfunction crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\n    const z = new Uint8Array(16), x = new Uint8Array(64);\n    let u, i;\n    if (!b)\n        return 0;\n    for (i = 0; i < 16; i++)\n        z[i] = 0;\n    for (i = 0; i < 8; i++)\n        z[i] = n[i];\n    while (b >= 64) {\n        core(x, z, k, sigma, false);\n        for (i = 0; i < 64; i++)\n            c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n        u = 1;\n        for (i = 8; i < 16; i++) {\n            u = u + (z[i] & 0xff) | 0;\n            z[i] = u & 0xff;\n            u >>>= 8;\n        }\n        b -= 64;\n        cpos += 64;\n        if (m)\n            mpos += 64;\n    }\n    if (b > 0) {\n        core(x, z, k, sigma, false);\n        for (i = 0; i < b; i++)\n            c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n    }\n    return 0;\n}\nfunction crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\n    const s = new Uint8Array(32);\n    core(s, n, k, sigma, true);\n    return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, n.subarray(16), s);\n}\nfunction add1305(h, c) {\n    let u = 0;\n    for (let j = 0; j < 17; j++) {\n        u = (u + ((h[j] + c[j]) | 0)) | 0;\n        h[j] = u & 255;\n        u >>>= 8;\n    }\n}\nconst minusp = new Uint32Array([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252]);\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n    let i, j, u;\n    const x = new Uint32Array(17), r = new Uint32Array(17), h = new Uint32Array(17), c = new Uint32Array(17), g = new Uint32Array(17);\n    for (j = 0; j < 17; j++)\n        r[j] = h[j] = 0;\n    for (j = 0; j < 16; j++)\n        r[j] = k[j];\n    r[3] &= 15;\n    r[4] &= 252;\n    r[7] &= 15;\n    r[8] &= 252;\n    r[11] &= 15;\n    r[12] &= 252;\n    r[15] &= 15;\n    while (n > 0) {\n        for (j = 0; j < 17; j++)\n            c[j] = 0;\n        for (j = 0; (j < 16) && (j < n); ++j)\n            c[j] = m[mpos + j];\n        c[j] = 1;\n        mpos += j;\n        n -= j;\n        add1305(h, c);\n        for (i = 0; i < 17; i++) {\n            x[i] = 0;\n            for (j = 0; j < 17; j++)\n                x[i] = (x[i] + (h[j] * ((j <= i) ? r[i - j] : ((320 * r[i + 17 - j]) | 0))) | 0) | 0;\n        }\n        for (i = 0; i < 17; i++)\n            h[i] = x[i];\n        u = 0;\n        for (j = 0; j < 16; j++) {\n            u = (u + h[j]) | 0;\n            h[j] = u & 255;\n            u >>>= 8;\n        }\n        u = (u + h[16]) | 0;\n        h[16] = u & 3;\n        u = (5 * (u >>> 2)) | 0;\n        for (j = 0; j < 16; j++) {\n            u = (u + h[j]) | 0;\n            h[j] = u & 255;\n            u >>>= 8;\n        }\n        u = (u + h[16]) | 0;\n        h[16] = u;\n    }\n    for (j = 0; j < 17; j++)\n        g[j] = h[j];\n    add1305(h, minusp);\n    const s = (-(h[16] >>> 7) | 0);\n    for (j = 0; j < 17; j++)\n        h[j] ^= s & (g[j] ^ h[j]);\n    for (j = 0; j < 16; j++)\n        c[j] = k[j + 16];\n    c[16] = 0;\n    add1305(h, c);\n    for (j = 0; j < 16; j++)\n        out[outpos + j] = h[j];\n    return 0;\n}\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n    const x = new Uint8Array(16);\n    crypto_onetimeauth(x, 0, m, mpos, n, k);\n    return vn(h, hpos, x, 0, 16);\n}\nfunction crypto_secretbox(c, m, d, n, k) {\n    if (d < 32)\n        return -1;\n    crypto_stream_xor(c, 0, m, 0, d, n, k);\n    crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n    for (let i = 0; i < 16; i++)\n        c[i] = 0;\n    return 0;\n}\nfunction crypto_secretbox_open(m, c, d, n, k) {\n    const x = new Uint8Array(32);\n    if (d < 32)\n        return -1;\n    crypto_stream_xor(x, 0, null, 0, 32, n, k);\n    if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0)\n        return -1;\n    crypto_stream_xor(m, 0, c, 0, d, n, k);\n    for (let i = 0; i < 32; i++)\n        m[i] = 0;\n    return 0;\n}\nconst crypto_secretbox_KEYBYTES = 32;\nconst crypto_secretbox_NONCEBYTES = 24;\nconst crypto_secretbox_ZEROBYTES = 32;\nconst crypto_secretbox_BOXZEROBYTES = 16;\nfunction checkLengths(k, n) {\n    if (k.length !== crypto_secretbox_KEYBYTES)\n        throw new Error('bad key size');\n    if (n.length !== crypto_secretbox_NONCEBYTES)\n        throw new Error('bad nonce size');\n}\nfunction checkArrayTypes(...args) {\n    for (let i = 0, count = args.length; i < count; i++) {\n        if (!(args[i] instanceof Uint8Array))\n            throw new TypeError('unexpected type, use Uint8Array');\n    }\n}\nexport function naclSecretbox(msg, nonce, key) {\n    checkArrayTypes(msg, nonce, key);\n    checkLengths(key, nonce);\n    const m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n    const c = new Uint8Array(m.length);\n    for (let i = 0; i < msg.length; i++)\n        m[i + crypto_secretbox_ZEROBYTES] = msg[i];\n    crypto_secretbox(c, m, m.length, nonce, key);\n    return c.subarray(crypto_secretbox_BOXZEROBYTES);\n}\nexport function naclSecretboxOpen(box, nonce, key) {\n    checkArrayTypes(box, nonce, key);\n    checkLengths(key, nonce);\n    const c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n    const m = new Uint8Array(c.length);\n    for (let i = 0; i < box.length; i++)\n        c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\n    if (c.length < 32)\n        return null;\n    if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0)\n        return null;\n    return m.subarray(crypto_secretbox_ZEROBYTES);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!isBytes(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        if (!isBytes(a))\n            throw new Error('Uint8Array expected');\n        sum += a.length;\n    }\n    let res = new Uint8Array(sum);\n    let pad = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!ut.isBytes(data))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/util-crypto', path: (({ url: getAbsoluteUrl('ules/@polkadot/util-crypto/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/util-crypto/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/util-crypto/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/util-crypto/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.6.2' };\n","import { pbkdf2 as pbkdf2Js } from '@noble/hashes/pbkdf2';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { isReady, pbkdf2 } from '@polkadot/wasm-crypto';\nimport { randomAsU8a } from '../random/asU8a.js';\nexport function pbkdf2Encode(passphrase, salt = randomAsU8a(), rounds = 2048, onlyJs) {\n    const u8aPass = u8aToU8a(passphrase);\n    const u8aSalt = u8aToU8a(salt);\n    return {\n        password: !hasBigInt || (!onlyJs && isReady())\n            ? pbkdf2(u8aPass, u8aSalt, rounds)\n            : pbkdf2Js(sha512, u8aPass, u8aSalt, { c: rounds, dkLen: 64 }),\n        rounds,\n        salt\n    };\n}\n","import { getRandomValues } from '@polkadot/x-randomvalues';\nimport { createAsHex } from '../helpers.js';\n/**\n * @name randomAsU8a\n * @summary Creates a Uint8Array filled with random bytes.\n * @description\n * Returns a `Uint8Array` with the specified (optional) length filled with random bytes.\n * @example\n * <BR>\n *\n * ```javascript\n * import { randomAsU8a } from '@polkadot/util-crypto';\n *\n * randomAsU8a(); // => Uint8Array([...])\n * ```\n */\nexport function randomAsU8a(length = 32) {\n    return getRandomValues(new Uint8Array(length));\n}\n/**\n * @name randomAsHex\n * @description Creates a hex string filled with random bytes.\n */\nexport const randomAsHex = /*#__PURE__*/ createAsHex(randomAsU8a);\n","export const DEFAULT_PARAMS = {\n    N: 1 << 15,\n    p: 1,\n    r: 8\n};\n","import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, u32 } from './utils.js';\n// RFC 7914 Scrypt KDF\n// Left rotate for uint32\nconst rotl = (a, b) => (a << b) | (a >>> (32 - b));\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= rotl(x00 + x12 | 0, 7);\n        x08 ^= rotl(x04 + x00 | 0, 9);\n        x12 ^= rotl(x08 + x04 | 0, 13);\n        x00 ^= rotl(x12 + x08 | 0, 18);\n        x09 ^= rotl(x05 + x01 | 0, 7);\n        x13 ^= rotl(x09 + x05 | 0, 9);\n        x01 ^= rotl(x13 + x09 | 0, 13);\n        x05 ^= rotl(x01 + x13 | 0, 18);\n        x14 ^= rotl(x10 + x06 | 0, 7);\n        x02 ^= rotl(x14 + x10 | 0, 9);\n        x06 ^= rotl(x02 + x14 | 0, 13);\n        x10 ^= rotl(x06 + x02 | 0, 18);\n        x03 ^= rotl(x15 + x11 | 0, 7);\n        x07 ^= rotl(x03 + x15 | 0, 9);\n        x11 ^= rotl(x07 + x03 | 0, 13);\n        x15 ^= rotl(x11 + x07 | 0, 18);\n        x01 ^= rotl(x00 + x03 | 0, 7);\n        x02 ^= rotl(x01 + x00 | 0, 9);\n        x03 ^= rotl(x02 + x01 | 0, 13);\n        x00 ^= rotl(x03 + x02 | 0, 18);\n        x06 ^= rotl(x05 + x04 | 0, 7);\n        x07 ^= rotl(x06 + x05 | 0, 9);\n        x04 ^= rotl(x07 + x06 | 0, 13);\n        x05 ^= rotl(x04 + x07 | 0, 18);\n        x11 ^= rotl(x10 + x09 | 0, 7);\n        x08 ^= rotl(x11 + x10 | 0, 9);\n        x09 ^= rotl(x08 + x11 | 0, 13);\n        x10 ^= rotl(x09 + x08 | 0, 18);\n        x12 ^= rotl(x15 + x14 | 0, 7);\n        x13 ^= rotl(x12 + x15 | 0, 9);\n        x14 ^= rotl(x13 + x12 | 0, 13);\n        x15 ^= rotl(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = checkOpts({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    assertNumber(N);\n    assertNumber(r);\n    assertNumber(p);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    assertNumber(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = u32(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = u32(new Uint8Array(blockSize * N));\n    const tmp = u32(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await asyncLoop(N - 1, asyncTick, () => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await asyncLoop(N, asyncTick, () => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n//# sourceMappingURL=scrypt.js.map","import { scrypt as scryptJs } from '@noble/hashes/scrypt';\nimport { hasBigInt, objectSpread, u8aToU8a } from '@polkadot/util';\nimport { isReady, scrypt } from '@polkadot/wasm-crypto';\nimport { randomAsU8a } from '../random/asU8a.js';\nimport { DEFAULT_PARAMS } from './defaults.js';\nexport function scryptEncode(passphrase, salt = randomAsU8a(), params = DEFAULT_PARAMS, onlyJs) {\n    const u8a = u8aToU8a(passphrase);\n    return {\n        params,\n        password: !hasBigInt || (!onlyJs && isReady())\n            ? scrypt(u8a, salt, Math.log2(params.N), params.r, params.p)\n            : scryptJs(u8a, salt, objectSpread({ dkLen: 64 }, params)),\n        salt\n    };\n}\n","import { u8aToBn } from '@polkadot/util';\nimport { BN_LE_OPTS } from '../bn.js';\nimport { DEFAULT_PARAMS } from './defaults.js';\nexport function scryptFromU8a(data) {\n    const salt = data.subarray(0, 32);\n    const N = u8aToBn(data.subarray(32 + 0, 32 + 4), BN_LE_OPTS).toNumber();\n    const p = u8aToBn(data.subarray(32 + 4, 32 + 8), BN_LE_OPTS).toNumber();\n    const r = u8aToBn(data.subarray(32 + 8, 32 + 12), BN_LE_OPTS).toNumber();\n    // FIXME At this moment we assume these to be fixed params, this is not a great idea\n    // since we lose flexibility and updates for greater security. However we need some\n    // protection against carefully-crafted params that can eat up CPU since these are user\n    // inputs. So we need to get very clever here, but atm we only allow the defaults\n    // and if no match, bail out\n    if (N !== DEFAULT_PARAMS.N || p !== DEFAULT_PARAMS.p || r !== DEFAULT_PARAMS.r) {\n        throw new Error('Invalid injected scrypt params found');\n    }\n    return { params: { N, p, r }, salt };\n}\n","import { bnToU8a, u8aConcat } from '@polkadot/util';\nimport { BN_LE_32_OPTS } from '../bn.js';\nexport function scryptToU8a(salt, { N, p, r }) {\n    return u8aConcat(salt, bnToU8a(N, BN_LE_32_OPTS), bnToU8a(p, BN_LE_32_OPTS), bnToU8a(r, BN_LE_32_OPTS));\n}\n","import { secp256k1 } from '@noble/curves/secp256k1';\nimport { hasBigInt } from '@polkadot/util';\nimport { isReady, secp256k1Compress as wasm } from '@polkadot/wasm-crypto';\nexport function secp256k1Compress(publicKey, onlyJs) {\n    if (![33, 65].includes(publicKey.length)) {\n        throw new Error(`Invalid publicKey provided, received ${publicKey.length} bytes input`);\n    }\n    if (publicKey.length === 33) {\n        return publicKey;\n    }\n    return !hasBigInt || (!onlyJs && isReady())\n        ? wasm(publicKey)\n        : secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(true);\n}\n","import { secp256k1 } from '@noble/curves/secp256k1';\nimport { bnToU8a, hasBigInt, u8aConcat } from '@polkadot/util';\nimport { isReady, secp256k1Expand as wasm } from '@polkadot/wasm-crypto';\nimport { BN_BE_256_OPTS } from '../bn.js';\nexport function secp256k1Expand(publicKey, onlyJs) {\n    if (![33, 65].includes(publicKey.length)) {\n        throw new Error(`Invalid publicKey provided, received ${publicKey.length} bytes input`);\n    }\n    if (publicKey.length === 65) {\n        return publicKey.subarray(1);\n    }\n    if (!hasBigInt || (!onlyJs && isReady())) {\n        return wasm(publicKey).subarray(1);\n    }\n    const { px, py } = secp256k1.ProjectivePoint.fromHex(publicKey);\n    return u8aConcat(bnToU8a(px, BN_BE_256_OPTS), bnToU8a(py, BN_BE_256_OPTS));\n}\n","import { blake2AsU8a } from '../blake2/index.js';\nimport { keccakAsU8a } from '../keccak/index.js';\nexport function hasher(hashType, data, onlyJs) {\n    return hashType === 'keccak'\n        ? keccakAsU8a(data, undefined, onlyJs)\n        : blake2AsU8a(data, undefined, undefined, onlyJs);\n}\n","import { secp256k1 } from '@noble/curves/secp256k1';\nimport { hasBigInt, u8aEmpty } from '@polkadot/util';\nimport { isReady, secp256k1FromSeed } from '@polkadot/wasm-crypto';\n/**\n * @name secp256k1PairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */\nexport function secp256k1PairFromSeed(seed, onlyJs) {\n    if (seed.length !== 32) {\n        throw new Error('Expected valid 32-byte private key as a seed');\n    }\n    if (!hasBigInt || (!onlyJs && isReady())) {\n        const full = secp256k1FromSeed(seed);\n        const publicKey = full.slice(32);\n        // There is an issue with the secp256k1 when running in an ASM.js environment where\n        // it seems that the lazy static section yields invalid results on the _first_ run.\n        // If this happens, fail outright, we cannot allow invalid return values\n        // https://github.com/polkadot-js/wasm/issues/307\n        if (u8aEmpty(publicKey)) {\n            throw new Error('Invalid publicKey generated from WASM interface');\n        }\n        return {\n            publicKey,\n            secretKey: full.slice(0, 32)\n        };\n    }\n    return {\n        publicKey: secp256k1.getPublicKey(seed, true),\n        secretKey: seed\n    };\n}\n","import { secp256k1 } from '@noble/curves/secp256k1';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { isReady, secp256k1Recover as wasm } from '@polkadot/wasm-crypto';\nimport { secp256k1Compress } from './compress.js';\nimport { secp256k1Expand } from './expand.js';\n/**\n * @name secp256k1Recover\n * @description Recovers a publicKey from the supplied signature\n */\nexport function secp256k1Recover(msgHash, signature, recovery, hashType = 'blake2', onlyJs) {\n    const sig = u8aToU8a(signature).subarray(0, 64);\n    const msg = u8aToU8a(msgHash);\n    const publicKey = !hasBigInt || (!onlyJs && isReady())\n        ? wasm(msg, sig, recovery)\n        : secp256k1.Signature\n            .fromCompact(sig)\n            .addRecoveryBit(recovery)\n            .recoverPublicKey(msg)\n            .toRawBytes();\n    if (!publicKey) {\n        throw new Error('Unable to recover publicKey from signature');\n    }\n    return hashType === 'keccak'\n        ? secp256k1Expand(publicKey, onlyJs)\n        : secp256k1Compress(publicKey, onlyJs);\n}\n","import { secp256k1 } from '@noble/curves/secp256k1';\nimport { bnToU8a, hasBigInt, u8aConcat } from '@polkadot/util';\nimport { isReady, secp256k1Sign as wasm } from '@polkadot/wasm-crypto';\nimport { BN_BE_256_OPTS } from '../bn.js';\nimport { hasher } from './hasher.js';\n/**\n * @name secp256k1Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\nexport function secp256k1Sign(message, { secretKey }, hashType = 'blake2', onlyJs) {\n    if (secretKey?.length !== 32) {\n        throw new Error('Expected valid secp256k1 secretKey, 32-bytes');\n    }\n    const data = hasher(hashType, message, onlyJs);\n    if (!hasBigInt || (!onlyJs && isReady())) {\n        return wasm(data, secretKey);\n    }\n    const signature = secp256k1.sign(data, secretKey, { lowS: true });\n    return u8aConcat(bnToU8a(signature.r, BN_BE_256_OPTS), bnToU8a(signature.s, BN_BE_256_OPTS), new Uint8Array([signature.recovery || 0]));\n}\n","import { _0n, BN, bnToU8a, hasBigInt, isU8a, nToU8a, u8aToBigInt } from '@polkadot/util';\nimport { BigInt } from '@polkadot/x-bigint';\nimport { BN_BE_256_OPTS, BN_BE_OPTS } from '../bn.js';\nconst N = 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141'.replace(/ /g, '');\nconst N_BI = BigInt(`0x${N}`);\nconst N_BN = new BN(N, 'hex');\nfunction addBi(seckey, tweak) {\n    let res = u8aToBigInt(tweak, BN_BE_OPTS);\n    if (res >= N_BI) {\n        throw new Error('Tweak parameter is out of range');\n    }\n    res += u8aToBigInt(seckey, BN_BE_OPTS);\n    if (res >= N_BI) {\n        res -= N_BI;\n    }\n    if (res === _0n) {\n        throw new Error('Invalid resulting private key');\n    }\n    return nToU8a(res, BN_BE_256_OPTS);\n}\nfunction addBn(seckey, tweak) {\n    const res = new BN(tweak);\n    if (res.cmp(N_BN) >= 0) {\n        throw new Error('Tweak parameter is out of range');\n    }\n    res.iadd(new BN(seckey));\n    if (res.cmp(N_BN) >= 0) {\n        res.isub(N_BN);\n    }\n    if (res.isZero()) {\n        throw new Error('Invalid resulting private key');\n    }\n    return bnToU8a(res, BN_BE_256_OPTS);\n}\nexport function secp256k1PrivateKeyTweakAdd(seckey, tweak, onlyBn) {\n    if (!isU8a(seckey) || seckey.length !== 32) {\n        throw new Error('Expected seckey to be an Uint8Array with length 32');\n    }\n    else if (!isU8a(tweak) || tweak.length !== 32) {\n        throw new Error('Expected tweak to be an Uint8Array with length 32');\n    }\n    return !hasBigInt || onlyBn\n        ? addBn(seckey, tweak)\n        : addBi(seckey, tweak);\n}\n","import { u8aEq, u8aToU8a } from '@polkadot/util';\nimport { hasher } from './hasher.js';\nimport { secp256k1Recover } from './recover.js';\n/**\n * @name secp256k1Verify\n * @description Verifies the signature of `message`, using the supplied pair\n */\nexport function secp256k1Verify(msgHash, signature, address, hashType = 'blake2', onlyJs) {\n    const sig = u8aToU8a(signature);\n    if (sig.length !== 65) {\n        throw new Error(`Expected signature with 65 bytes, ${sig.length} found instead`);\n    }\n    const publicKey = secp256k1Recover(hasher(hashType, msgHash), sig, sig[64], hashType, onlyJs);\n    const signerAddr = hasher(hashType, publicKey, onlyJs);\n    const inputAddr = u8aToU8a(address);\n    // for Ethereum (keccak) the last 20 bytes is the address\n    return u8aEq(publicKey, inputAddr) || (hashType === 'keccak'\n        ? u8aEq(signerAddr.slice(-20), inputAddr.slice(-20))\n        : u8aEq(signerAddr, inputAddr));\n}\n","import { sha256 as sha256Js } from '@noble/hashes/sha256';\nimport { sha512 as sha512Js } from '@noble/hashes/sha512';\nimport { sha256, sha512 } from '@polkadot/wasm-crypto';\nimport { createBitHasher, createDualHasher } from '../helpers.js';\n/**\n * @name shaAsU8a\n * @summary Creates a sha Uint8Array from the input.\n */\nexport const shaAsU8a = /*#__PURE__*/ createDualHasher({ 256: sha256, 512: sha512 }, { 256: sha256Js, 512: sha512Js });\n/**\n * @name sha256AsU8a\n * @summary Creates a sha256 Uint8Array from the input.\n */\nexport const sha256AsU8a = /*#__PURE__*/ createBitHasher(256, shaAsU8a);\n/**\n * @name sha512AsU8a\n * @summary Creates a sha512 Uint8Array from the input.\n */\nexport const sha512AsU8a = /*#__PURE__*/ createBitHasher(512, shaAsU8a);\n","import { u8aIsWrapped, u8aToU8a, u8aUnwrapBytes, u8aWrapBytes } from '@polkadot/util';\nimport { decodeAddress } from '../address/decode.js';\nimport { ed25519Verify } from '../ed25519/verify.js';\nimport { secp256k1Verify } from '../secp256k1/verify.js';\nimport { sr25519Verify } from '../sr25519/verify.js';\nconst secp256k1VerifyHasher = (hashType) => (message, signature, publicKey) => secp256k1Verify(message, signature, publicKey, hashType);\nconst VERIFIERS_ECDSA = [\n    ['ecdsa', secp256k1VerifyHasher('blake2')],\n    ['ethereum', secp256k1VerifyHasher('keccak')]\n];\nconst VERIFIERS = [\n    ['ed25519', ed25519Verify],\n    ['sr25519', sr25519Verify],\n    ...VERIFIERS_ECDSA\n];\nconst CRYPTO_TYPES = ['ed25519', 'sr25519', 'ecdsa'];\nfunction verifyDetect(result, { message, publicKey, signature }, verifiers = VERIFIERS) {\n    result.isValid = verifiers.some(([crypto, verify]) => {\n        try {\n            if (verify(message, signature, publicKey)) {\n                result.crypto = crypto;\n                return true;\n            }\n        }\n        catch {\n            // do nothing, result.isValid still set to false\n        }\n        return false;\n    });\n    return result;\n}\nfunction verifyMultisig(result, { message, publicKey, signature }) {\n    if (![0, 1, 2].includes(signature[0])) {\n        throw new Error(`Unknown crypto type, expected signature prefix [0..2], found ${signature[0]}`);\n    }\n    const type = CRYPTO_TYPES[signature[0]] || 'none';\n    result.crypto = type;\n    try {\n        result.isValid = {\n            ecdsa: () => verifyDetect(result, { message, publicKey, signature: signature.subarray(1) }, VERIFIERS_ECDSA).isValid,\n            ed25519: () => ed25519Verify(message, signature.subarray(1), publicKey),\n            none: () => {\n                throw Error('no verify for `none` crypto type');\n            },\n            sr25519: () => sr25519Verify(message, signature.subarray(1), publicKey)\n        }[type]();\n    }\n    catch {\n        // ignore, result.isValid still set to false\n    }\n    return result;\n}\nfunction getVerifyFn(signature) {\n    return [0, 1, 2].includes(signature[0]) && [65, 66].includes(signature.length)\n        ? verifyMultisig\n        : verifyDetect;\n}\nexport function signatureVerify(message, signature, addressOrPublicKey) {\n    const signatureU8a = u8aToU8a(signature);\n    if (![64, 65, 66].includes(signatureU8a.length)) {\n        throw new Error(`Invalid signature length, expected [64..66] bytes, found ${signatureU8a.length}`);\n    }\n    const publicKey = decodeAddress(addressOrPublicKey);\n    const input = { message: u8aToU8a(message), publicKey, signature: signatureU8a };\n    const result = { crypto: 'none', isValid: false, isWrapped: u8aIsWrapped(input.message, true), publicKey };\n    const isWrappedBytes = u8aIsWrapped(input.message, false);\n    const verifyFn = getVerifyFn(signatureU8a);\n    verifyFn(result, input);\n    if (result.crypto !== 'none' || (result.isWrapped && !isWrappedBytes)) {\n        return result;\n    }\n    input.message = isWrappedBytes\n        ? u8aUnwrapBytes(input.message)\n        : u8aWrapBytes(input.message);\n    return verifyFn(result, input);\n}\n","import { isU8a } from '@polkadot/util';\nimport { sr25519PairFromU8a } from './pair/fromU8a.js';\nimport { sr25519KeypairToU8a } from './pair/toU8a.js';\nexport function createDeriveFn(derive) {\n    return (keypair, chainCode) => {\n        if (!isU8a(chainCode) || chainCode.length !== 32) {\n            throw new Error('Invalid chainCode passed to derive');\n        }\n        return sr25519PairFromU8a(derive(sr25519KeypairToU8a(keypair), chainCode));\n    };\n}\n","import { u8aConcat } from '@polkadot/util';\nexport function sr25519KeypairToU8a({ publicKey, secretKey }) {\n    return u8aConcat(secretKey, publicKey).slice();\n}\n","import { sr25519DeriveKeypairHard } from '@polkadot/wasm-crypto';\nimport { createDeriveFn } from './derive.js';\nexport const sr25519DeriveHard = /*#__PURE__*/ createDeriveFn(sr25519DeriveKeypairHard);\n","import { sr25519DeriveKeypairSoft } from '@polkadot/wasm-crypto';\nimport { createDeriveFn } from './derive.js';\nexport const sr25519DeriveSoft = /*#__PURE__*/ createDeriveFn(sr25519DeriveKeypairSoft);\n","import { u8aToU8a } from '@polkadot/util';\nimport { sr25519KeypairFromSeed } from '@polkadot/wasm-crypto';\nimport { sr25519PairFromU8a } from './fromU8a.js';\n/**\n * @name sr25519PairFromSeed\n * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.\n */\nexport function sr25519PairFromSeed(seed) {\n    const seedU8a = u8aToU8a(seed);\n    if (seedU8a.length !== 32) {\n        throw new Error(`Expected a seed matching 32 bytes, found ${seedU8a.length}`);\n    }\n    return sr25519PairFromU8a(sr25519KeypairFromSeed(seedU8a));\n}\n","import { u8aToU8a } from '@polkadot/util';\nconst SEC_LEN = 64;\nconst PUB_LEN = 32;\nconst TOT_LEN = SEC_LEN + PUB_LEN;\nexport function sr25519PairFromU8a(full) {\n    const fullU8a = u8aToU8a(full);\n    if (fullU8a.length !== TOT_LEN) {\n        throw new Error(`Expected keypair with ${TOT_LEN} bytes, found ${fullU8a.length}`);\n    }\n    return {\n        publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),\n        secretKey: fullU8a.slice(0, SEC_LEN)\n    };\n}\n","import { u8aToU8a } from '@polkadot/util';\nimport { sr25519Sign as wasmSign } from '@polkadot/wasm-crypto';\n/**\n * @name sr25519Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\nexport function sr25519Sign(message, { publicKey, secretKey }) {\n    if (publicKey?.length !== 32) {\n        throw new Error('Expected a valid publicKey, 32-bytes');\n    }\n    else if (secretKey?.length !== 64) {\n        throw new Error('Expected a valid secretKey, 64-bytes');\n    }\n    return wasmSign(publicKey, secretKey, u8aToU8a(message));\n}\n","import { u8aToU8a } from '@polkadot/util';\nimport { sr25519Verify as wasmVerify } from '@polkadot/wasm-crypto';\n/**\n * @name sr25519Verify\n * @description Verifies the signature of `message`, using the supplied pair\n */\nexport function sr25519Verify(message, signature, publicKey) {\n    const publicKeyU8a = u8aToU8a(publicKey);\n    const signatureU8a = u8aToU8a(signature);\n    if (publicKeyU8a.length !== 32) {\n        throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);\n    }\n    else if (signatureU8a.length !== 64) {\n        throw new Error(`Invalid signature, received ${signatureU8a.length} bytes, expected 64`);\n    }\n    return wasmVerify(signatureU8a, u8aToU8a(message), publicKeyU8a);\n}\n","import { u8aToU8a } from '@polkadot/util';\nimport { vrfSign } from '@polkadot/wasm-crypto';\nconst EMPTY_U8A = new Uint8Array();\n/**\n * @name sr25519VrfSign\n * @description Sign with sr25519 vrf signing (deterministic)\n */\nexport function sr25519VrfSign(message, { secretKey }, context = EMPTY_U8A, extra = EMPTY_U8A) {\n    if (secretKey?.length !== 64) {\n        throw new Error('Invalid secretKey, expected 64-bytes');\n    }\n    return vrfSign(secretKey, u8aToU8a(context), u8aToU8a(message), u8aToU8a(extra));\n}\n","import { u8aToU8a } from '@polkadot/util';\nimport { vrfVerify } from '@polkadot/wasm-crypto';\nconst EMPTY_U8A = new Uint8Array();\n/**\n * @name sr25519VrfVerify\n * @description Verify with sr25519 vrf verification\n */\nexport function sr25519VrfVerify(message, signOutput, publicKey, context = EMPTY_U8A, extra = EMPTY_U8A) {\n    const publicKeyU8a = u8aToU8a(publicKey);\n    const proofU8a = u8aToU8a(signOutput);\n    if (publicKeyU8a.length !== 32) {\n        throw new Error('Invalid publicKey, expected 32-bytes');\n    }\n    else if (proofU8a.length !== 96) {\n        throw new Error('Invalid vrfSign output, expected 96 bytes');\n    }\n    return vrfVerify(publicKeyU8a, u8aToU8a(context), u8aToU8a(message), u8aToU8a(extra), proofU8a);\n}\n","import { _0n, _1n } from '@polkadot/util';\nimport { BigInt } from '@polkadot/x-bigint';\nconst P64_1 = BigInt('11400714785074694791');\nconst P64_2 = BigInt('14029467366897019727');\nconst P64_3 = BigInt('1609587929392839161');\nconst P64_4 = BigInt('9650029242287828579');\nconst P64_5 = BigInt('2870177450012600261');\nconst U64 = BigInt('0xffffffffffffffff');\nconst _7n = BigInt(7);\nconst _11n = BigInt(11);\nconst _12n = BigInt(12);\nconst _16n = BigInt(16);\nconst _18n = BigInt(18);\nconst _23n = BigInt(23);\nconst _27n = BigInt(27);\nconst _29n = BigInt(29);\nconst _31n = BigInt(31);\nconst _32n = BigInt(32);\nconst _33n = BigInt(33);\nconst _64n = BigInt(64);\nconst _256n = BigInt(256);\nfunction rotl(a, b) {\n    const c = a & U64;\n    return ((c << b) | (c >> (_64n - b))) & U64;\n}\nfunction fromU8a(u8a, p, count) {\n    const bigints = new Array(count);\n    let offset = 0;\n    for (let i = 0; i < count; i++, offset += 2) {\n        bigints[i] = BigInt(u8a[p + offset] | (u8a[p + 1 + offset] << 8));\n    }\n    let result = _0n;\n    for (let i = count - 1; i >= 0; i--) {\n        result = (result << _16n) + bigints[i];\n    }\n    return result;\n}\nfunction init(seed, input) {\n    const state = {\n        seed,\n        u8a: new Uint8Array(32),\n        u8asize: 0,\n        v1: seed + P64_1 + P64_2,\n        v2: seed + P64_2,\n        v3: seed,\n        v4: seed - P64_1\n    };\n    if (input.length < 32) {\n        state.u8a.set(input);\n        state.u8asize = input.length;\n        return state;\n    }\n    const limit = input.length - 32;\n    let p = 0;\n    if (limit >= 0) {\n        const adjustV = (v) => P64_1 * rotl(v + P64_2 * fromU8a(input, p, 4), _31n);\n        do {\n            state.v1 = adjustV(state.v1);\n            p += 8;\n            state.v2 = adjustV(state.v2);\n            p += 8;\n            state.v3 = adjustV(state.v3);\n            p += 8;\n            state.v4 = adjustV(state.v4);\n            p += 8;\n        } while (p <= limit);\n    }\n    if (p < input.length) {\n        state.u8a.set(input.subarray(p, input.length));\n        state.u8asize = input.length - p;\n    }\n    return state;\n}\nexport function xxhash64(input, initSeed) {\n    const { seed, u8a, u8asize, v1, v2, v3, v4 } = init(BigInt(initSeed), input);\n    let p = 0;\n    let h64 = U64 & (BigInt(input.length) + (input.length >= 32\n        ? (((((((((rotl(v1, _1n) + rotl(v2, _7n) + rotl(v3, _12n) + rotl(v4, _18n)) ^ (P64_1 * rotl(v1 * P64_2, _31n))) * P64_1 + P64_4) ^ (P64_1 * rotl(v2 * P64_2, _31n))) * P64_1 + P64_4) ^ (P64_1 * rotl(v3 * P64_2, _31n))) * P64_1 + P64_4) ^ (P64_1 * rotl(v4 * P64_2, _31n))) * P64_1 + P64_4)\n        : (seed + P64_5)));\n    while (p <= (u8asize - 8)) {\n        h64 = U64 & (P64_4 + P64_1 * rotl(h64 ^ (P64_1 * rotl(P64_2 * fromU8a(u8a, p, 4), _31n)), _27n));\n        p += 8;\n    }\n    if ((p + 4) <= u8asize) {\n        h64 = U64 & (P64_3 + P64_2 * rotl(h64 ^ (P64_1 * fromU8a(u8a, p, 2)), _23n));\n        p += 4;\n    }\n    while (p < u8asize) {\n        h64 = U64 & (P64_1 * rotl(h64 ^ (P64_5 * BigInt(u8a[p++])), _11n));\n    }\n    h64 = U64 & (P64_2 * (h64 ^ (h64 >> _33n)));\n    h64 = U64 & (P64_3 * (h64 ^ (h64 >> _29n)));\n    h64 = U64 & (h64 ^ (h64 >> _32n));\n    const result = new Uint8Array(8);\n    for (let i = 7; i >= 0; i--) {\n        result[i] = Number(h64 % _256n);\n        h64 = h64 / _256n;\n    }\n    return result;\n}\n","import { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { isReady, twox } from '@polkadot/wasm-crypto';\nimport { createAsHex } from '../helpers.js';\nimport { xxhash64 } from './xxhash64.js';\n/**\n * @name xxhashAsU8a\n * @summary Creates a xxhash64 u8a from the input.\n * @description\n * From either a `string`, `Uint8Array` or a `Buffer` input, create the xxhash64 and return the result as a `Uint8Array` with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { xxhashAsU8a } from '@polkadot/util-crypto';\n *\n * xxhashAsU8a('abc'); // => 0x44bc2cf5ad770999\n * ```\n */\nexport function xxhashAsU8a(data, bitLength = 64, onlyJs) {\n    const rounds = Math.ceil(bitLength / 64);\n    const u8a = u8aToU8a(data);\n    if (!hasBigInt || (!onlyJs && isReady())) {\n        return twox(u8a, rounds);\n    }\n    const result = new Uint8Array(rounds * 8);\n    for (let seed = 0; seed < rounds; seed++) {\n        result.set(xxhash64(u8a, seed).reverse(), seed * 8);\n    }\n    return result;\n}\n/**\n * @name xxhashAsHex\n * @description Creates a xxhash64 hex from the input.\n */\nexport const xxhashAsHex = /*#__PURE__*/ createAsHex(xxhashAsU8a);\n","/**\n * @name arrayChunk\n * @summary Split T[] into T[][] based on the defind size\n * @description\n * Returns a set ao arrays based on the chunksize\n * @example\n * <BR>\n *\n * ```javascript\n * import { arrayChunk } from '@polkadot/util';\n *\n * arrayChunk([1, 2, 3, 4, 5]); // [[1, 2], [3, 4], [5]]\n * ```\n */\nexport function arrayChunk(array, chunkSize) {\n    const outputSize = Math.ceil(array.length / chunkSize);\n    // shortcut for the single-split case\n    if (outputSize === 1) {\n        return [array];\n    }\n    const output = Array(outputSize);\n    for (let i = 0; i < outputSize; i++) {\n        const offset = i * chunkSize;\n        output[i] = array.slice(offset, offset + chunkSize);\n    }\n    return output;\n}\n","/**\n * @name arrayFlatten\n * @summary Merge T[][] into T[]\n * @description\n * Returns a new array with all arrays merged into one\n * @example\n * <BR>\n *\n * ```javascript\n * import { arrayFlatten } from '@polkadot/util';\n *\n * arrayFlatten([[1, 2], [3, 4], [5]]); // [1, 2, 3, 4, 5]\n * ```\n */\nexport function arrayFlatten(arrays) {\n    const num = arrays.length;\n    // shortcuts for the empty & single-entry case\n    if (num === 0) {\n        return [];\n    }\n    else if (num === 1) {\n        return arrays[0];\n    }\n    // pre-allocate based on the combined size\n    let size = 0;\n    for (let i = 0; i < num; i++) {\n        size += arrays[i].length;\n    }\n    const output = new Array(size);\n    let i = -1;\n    for (let j = 0; j < num; j++) {\n        const a = arrays[j];\n        // instead of pushing, we just set the entries\n        for (let e = 0, count = a.length; e < count; e++) {\n            output[++i] = a[e];\n        }\n    }\n    return output;\n}\n","import { isFunction } from './is/function.js';\n/**\n * @name assert\n * @summary Checks for a valid test, if not Error is thrown.\n * @description\n * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.\n * @example\n * <BR>\n *\n * ```javascript\n * const { assert } from '@polkadot/util';\n *\n * assert(true, 'True should be true'); // passes\n * assert(false, 'False should not be true'); // Error thrown\n * assert(false, () => 'message'); // Error with 'message'\n * ```\n */\nexport function assert(condition, message) {\n    if (!condition) {\n        throw new Error(isFunction(message)\n            ? message()\n            : message);\n    }\n}\n/**\n * @name assertReturn\n * @description Returns when the value is not undefined/null, otherwise throws assertion error\n */\nexport function assertReturn(value, message) {\n    assert(value !== undefined && value !== null, message);\n    return value;\n}\n/**\n * @name assertUnreachable\n * @description An assertion helper that ensures all codepaths are followed\n */\nexport function assertUnreachable(x) {\n    throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);\n}\n","import { BigInt } from '@polkadot/x-bigint';\n/**\n * @name _0n\n * @summary BigInt constant for 0.\n */\nexport const _0n = /*#__PURE__*/ BigInt(0);\n/**\n * @name _1n\n * @summary BigInt constant for 1.\n */\nexport const _1n = /*#__PURE__*/ BigInt(1);\n/**\n * @name _2n\n * @summary BigInt constant for 2.\n */\nexport const _2n = /*#__PURE__*/ BigInt(2);\n/**\n * @name _3n\n * @summary BigInt constant for 3.\n */\nexport const _3n = /*#__PURE__*/ BigInt(3);\n/**\n * @name _4n\n * @summary BigInt constant for 4.\n */\nexport const _4n = /*#__PURE__*/ BigInt(4);\n/**\n * @name _5n\n * @summary BigInt constant for 5.\n */\nexport const _5n = /*#__PURE__*/ BigInt(5);\n/**\n * @name _6n\n * @summary BigInt constant for 6.\n */\nexport const _6n = /*#__PURE__*/ BigInt(6);\n/**\n * @name _7n\n * @summary BigInt constant for 7.\n */\nexport const _7n = /*#__PURE__*/ BigInt(7);\n/**\n * @name _8n\n * @summary BigInt constant for 8.\n */\nexport const _8n = /*#__PURE__*/ BigInt(8);\n/**\n * @name _9n\n * @summary BigInt constant for 9.\n */\nexport const _9n = /*#__PURE__*/ BigInt(9);\n/**\n * @name _10n\n * @summary BigInt constant for 10.\n */\nexport const _10n = /*#__PURE__*/ BigInt(10);\n/**\n * @name _100n\n * @summary BigInt constant for 100.\n */\nexport const _100n = /*#__PURE__*/ BigInt(100);\n/**\n * @name _1000n\n * @summary BigInt constant for 1000.\n */\nexport const _1000n = /*#__PURE__*/ BigInt(1000);\n/**\n * @name _1Mn\n * @summary BigInt constant for 1,000,000 (million).\n */\nexport const _1Mn = /*#__PURE__*/ BigInt(1000000);\n/**\n* @name _1Bn\n* @summary BigInt constant for 1,000,000,000 (billion).\n*/\nexport const _1Bn = /*#__PURE__*/ BigInt(1000000000);\n/**\n* @name _1Qn\n* @summary BigInt constant for 1,000,000,000,000,000,000 (quitillion).\n*/\nexport const _1Qn = _1Bn * _1Bn;\n/**\n* @name _2pow53n\n* @summary BigInt constant for MAX_SAFE_INTEGER\n*/\nexport const _2pow53n = /*#__PURE__*/ BigInt(Number.MAX_SAFE_INTEGER);\n/**\n * @name _sqrt2pow53n\n * @summary BigInt constant for Math.sqrt(MAX_SAFE_INTEGER)\n */\nexport const _sqrt2pow53n = /*#__PURE__*/ BigInt(94906265);\n","/** @internal */\nexport function createCmp(cmp) {\n    return (...items) => {\n        const count = items.length;\n        if (count === 0) {\n            throw new Error('Must provide one or more arguments');\n        }\n        let result = items[0];\n        for (let i = 1; i < count; i++) {\n            if (cmp(items[i], result)) {\n                result = items[i];\n            }\n        }\n        return result;\n    };\n}\n","import { BigInt } from '@polkadot/x-bigint';\nimport { hexToBigInt } from '../hex/toBigInt.js';\nimport { isBn } from '../is/bn.js';\nimport { isHex } from '../is/hex.js';\nimport { isToBigInt } from '../is/toBigInt.js';\nimport { isToBn } from '../is/toBn.js';\n/**\n * @name nToBigInt\n * @summary Creates a bigInt value from a BN, bigint, string (base 10 or hex) or number input.\n */\nexport function nToBigInt(value) {\n    return typeof value === 'bigint'\n        ? value\n        : !value\n            ? BigInt(0)\n            : isHex(value)\n                ? hexToBigInt(value.toString())\n                : isBn(value)\n                    ? BigInt(value.toString())\n                    : isToBigInt(value)\n                        ? value.toBigInt()\n                        : isToBn(value)\n                            ? BigInt(value.toBn().toString())\n                            : BigInt(value);\n}\n","import { BigInt } from '@polkadot/x-bigint';\nimport { _0n, _1n } from './consts.js';\nimport { nToBigInt } from './toBigInt.js';\nconst DIV = BigInt(256);\nconst NEG_MASK = BigInt(0xff);\nfunction toU8a(value, isLe, isNegative) {\n    const arr = [];\n    const withSigned = isNegative && (value < _0n);\n    if (withSigned) {\n        value = (value + _1n) * -_1n;\n    }\n    while (value !== _0n) {\n        const mod = value % DIV;\n        const val = Number(withSigned\n            ? mod ^ NEG_MASK\n            : mod);\n        if (isLe) {\n            arr.push(val);\n        }\n        else {\n            arr.unshift(val);\n        }\n        value = (value - mod) / DIV;\n    }\n    return Uint8Array.from(arr);\n}\n/**\n * @name nToU8a\n * @summary Creates a Uint8Array object from a bigint.\n */\nexport function nToU8a(value, { bitLength = -1, isLe = true, isNegative = false } = {}) {\n    const valueBi = nToBigInt(value);\n    if (valueBi === _0n) {\n        return bitLength === -1\n            ? new Uint8Array(1)\n            : new Uint8Array(Math.ceil((bitLength || 0) / 8));\n    }\n    const u8a = toU8a(valueBi, isLe, isNegative);\n    if (bitLength === -1) {\n        return u8a;\n    }\n    const byteLength = Math.ceil((bitLength || 0) / 8);\n    const output = new Uint8Array(byteLength);\n    if (isNegative) {\n        output.fill(0xff);\n    }\n    output.set(u8a, isLe ? 0 : byteLength - u8a.length);\n    return output;\n}\n","import { BN } from './bn.js';\n/**\n * @name BN_ZERO\n * @summary BN constant for 0.\n */\nexport const BN_ZERO = /*#__PURE__*/ new BN(0);\n/**\n * @name BN_ONE\n * @summary BN constant for 1.\n */\nexport const BN_ONE = /*#__PURE__*/ new BN(1);\n/**\n * @name BN_TWO\n * @summary BN constant for 2.\n */\nexport const BN_TWO = /*#__PURE__*/ new BN(2);\n/**\n * @name BN_THREE\n * @summary BN constant for 3.\n */\nexport const BN_THREE = /*#__PURE__*/ new BN(3);\n/**\n * @name BN_FOUR\n * @summary BN constant for 4.\n */\nexport const BN_FOUR = /*#__PURE__*/ new BN(4);\n/**\n * @name BN_FIVE\n * @summary BN constant for 5.\n */\nexport const BN_FIVE = /*#__PURE__*/ new BN(5);\n/**\n * @name BN_SIX\n * @summary BN constant for 6.\n */\nexport const BN_SIX = /*#__PURE__*/ new BN(6);\n/**\n * @name BN_SEVEN\n * @summary BN constant for 7.\n */\nexport const BN_SEVEN = /*#__PURE__*/ new BN(7);\n/**\n * @name BN_EIGHT\n * @summary BN constant for 8.\n */\nexport const BN_EIGHT = /*#__PURE__*/ new BN(8);\n/**\n * @name BN_NINE\n * @summary BN constant for 9.\n */\nexport const BN_NINE = /*#__PURE__*/ new BN(9);\n/**\n * @name BN_TEN\n * @summary BN constant for 10.\n */\nexport const BN_TEN = /*#__PURE__*/ new BN(10);\n/**\n * @name BN_HUNDRED\n * @summary BN constant for 100.\n */\nexport const BN_HUNDRED = /*#__PURE__*/ new BN(100);\n/**\n * @name BN_THOUSAND\n * @summary BN constant for 1,000.\n */\nexport const BN_THOUSAND = /*#__PURE__*/ new BN(1000);\n/**\n * @name BN_MILLION\n * @summary BN constant for 1,000,000.\n */\nexport const BN_MILLION = /*#__PURE__*/ new BN(1000000);\n/**\n * @name BN_BILLION\n * @summary BN constant for 1,000,000,000.\n */\nexport const BN_BILLION = /*#__PURE__*/ new BN(1000000000);\n/**\n * @name BN_QUINTILL\n * @summary BN constant for 1,000,000,000,000,000,000.\n */\nexport const BN_QUINTILL = BN_BILLION.mul(BN_BILLION);\n/**\n * @name BN_MAX_INTEGER\n * @summary BN constant for MAX_SAFE_INTEGER\n */\nexport const BN_MAX_INTEGER = /*#__PURE__*/ new BN(Number.MAX_SAFE_INTEGER);\n/**\n * @name BN_SQRT_MAX_INTEGER\n * @summary BN constant for Math.sqrt(MAX_SAFE_INTEGER)\n */\nexport const BN_SQRT_MAX_INTEGER = /*#__PURE__*/ new BN(94906265);\n","import { createCmp } from '../bi/helpers.js';\n/**\n * @name bnMax\n * @summary Finds and returns the highest value in an array of BNs.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnMax } from '@polkadot/util';\n *\n * bnMax([new BN(1), new BN(3), new BN(2)]).toString(); // => '3'\n * ```\n */\nexport const bnMax = /*#__PURE__*/ createCmp((a, b) => a.gt(b));\n/**\n * @name bnMin\n * @summary Finds and returns the smallest value in an array of BNs.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnMin } from '@polkadot/util';\n *\n * bnMin([new BN(1), new BN(3), new BN(2)]).toString(); // => '1'\n * ```\n */\nexport const bnMin = /*#__PURE__*/ createCmp((a, b) => a.lt(b));\n","import { BN } from './bn.js';\nimport { BN_MAX_INTEGER, BN_ONE, BN_SQRT_MAX_INTEGER } from './consts.js';\nimport { bnToBn } from './toBn.js';\n/**\n * @name bnSqrt\n * @summary Calculates the integer square root of a BN\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnSqrt } from '@polkadot/util';\n *\n * bnSqrt(new BN(16)).toString(); // => '4'\n * ```\n */\nexport function bnSqrt(value) {\n    const n = bnToBn(value);\n    if (n.isNeg()) {\n        throw new Error('square root of negative numbers is not supported');\n    }\n    // https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/\n    // shortcut <= 2^53 - 1 to use the JS utils\n    if (n.lte(BN_MAX_INTEGER)) {\n        // ~~ More performant version of Math.floor\n        return new BN(~~Math.sqrt(n.toNumber()));\n    }\n    // Use sqrt(MAX_SAFE_INTEGER) as starting point. since we already know the\n    // output will be larger than this, we expect this to be a safe start\n    let x0 = BN_SQRT_MAX_INTEGER.clone();\n    while (true) {\n        const x1 = n.div(x0).iadd(x0).ishrn(1);\n        if (x0.eq(x1) || x0.eq(x1.sub(BN_ONE))) {\n            return x0;\n        }\n        x0 = x1;\n    }\n}\n","import { hexToBn } from '../hex/toBn.js';\nimport { isBigInt } from '../is/bigInt.js';\nimport { isHex } from '../is/hex.js';\nimport { isToBigInt } from '../is/toBigInt.js';\nimport { isToBn } from '../is/toBn.js';\nimport { BN } from './bn.js';\n/**\n * @name bnToBn\n * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.\n * @description\n * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToBn } from '@polkadot/util';\n *\n * bnToBn(0x1234); // => BN(0x1234)\n * bnToBn(new BN(0x1234)); // => BN(0x1234)\n * ```\n */\nexport function bnToBn(value) {\n    return value\n        ? BN.isBN(value)\n            ? value\n            : isHex(value)\n                ? hexToBn(value.toString())\n                : isBigInt(value)\n                    ? new BN(value.toString())\n                    : isToBn(value)\n                        ? value.toBn()\n                        : isToBigInt(value)\n                            ? new BN(value.toBigInt().toString())\n                            : new BN(value)\n        : new BN(0);\n}\n","import { u8aToHex } from '../u8a/index.js';\nimport { bnToU8a } from './toU8a.js';\n/**\n * @name bnToHex\n * @summary Creates a hex value from a BN.js bignumber object.\n * @description\n * `null` inputs returns a `0x` result, BN values return the actual value as a `0x` prefixed hex value. Anything that is not a BN object throws an error. With `bitLength` set, it fixes the number to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToHex } from '@polkadot/util';\n *\n * bnToHex(new BN(0x123456)); // => '0x123456'\n * ```\n */\nexport function bnToHex(value, { bitLength = -1, isLe = false, isNegative = false } = {}) {\n    return u8aToHex(bnToU8a(value, { bitLength, isLe, isNegative }));\n}\n","import { bnToBn } from './toBn.js';\nconst DEFAULT_OPTS = { bitLength: -1, isLe: true, isNegative: false };\n/**\n * @name bnToU8a\n * @summary Creates a Uint8Array object from a BN.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.\n * @example\n * <BR>\n *\n * ```javascript\n * import { bnToU8a } from '@polkadot/util';\n *\n * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]\n * ```\n */\nexport function bnToU8a(value, { bitLength = -1, isLe = true, isNegative = false } = DEFAULT_OPTS) {\n    const valueBn = bnToBn(value);\n    const byteLength = bitLength === -1\n        ? Math.ceil(valueBn.bitLength() / 8)\n        : Math.ceil((bitLength || 0) / 8);\n    if (!value) {\n        return bitLength === -1\n            ? new Uint8Array(1)\n            : new Uint8Array(byteLength);\n    }\n    const output = new Uint8Array(byteLength);\n    const bn = isNegative\n        ? valueBn.toTwos(byteLength * 8)\n        : valueBn;\n    output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);\n    return output;\n}\n","/**\n * @name bufferToU8a\n * @summary Creates a Uint8Array value from a Buffer object.\n * @description\n * `null` inputs returns an empty result, `Buffer` values return the actual value as a `Uint8Array`. Anything that is not a `Buffer` object throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { bufferToU8a } from '@polkadot/util';\n *\n * bufferToU8a(Buffer.from([1, 2, 3]));\n * ```\n */\nexport function bufferToU8a(buffer) {\n    return new Uint8Array(buffer || []);\n}\n","import { u8aConcatStrict } from '../u8a/index.js';\nimport { compactToU8a } from './toU8a.js';\n/**\n * @name compactAddLength\n * @description Adds a length prefix to the input value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactAddLength } from '@polkadot/util';\n *\n * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])\n * ```\n */\nexport function compactAddLength(input) {\n    return u8aConcatStrict([\n        compactToU8a(input.length),\n        input\n    ]);\n}\n","import { BN } from '../bn/index.js';\nimport { u8aToBn, u8aToU8a } from '../u8a/index.js';\n/**\n * @name compactFromU8a\n * @description Retrives the offset and encoded length from a compact-prefixed value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactFromU8a } from '@polkadot/util';\n *\n * const [offset, length] = compactFromU8a(new Uint8Array([254, 255, 3, 0]));\n *\n * console.log('value offset=', offset, 'length=', length); // 4, 0xffff\n * ```\n */\nexport function compactFromU8a(input) {\n    const u8a = u8aToU8a(input);\n    // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster\n    // than doing an additional call to u8aToBn (as with variable length)\n    switch (u8a[0] & 0b11) {\n        case 0b00:\n            return [1, new BN(u8a[0] >>> 2)];\n        case 0b01:\n            return [2, new BN((u8a[0] + (u8a[1] << 8)) >>> 2)];\n        case 0b10:\n            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n            // 32-bit, in the case where the top-most bit is set this yields a negative value\n            return [4, new BN((u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + (u8a[3] * 16777216)) >>> 2)];\n        // 0b11\n        default: {\n            // add 5 to shifted (4 for base length, 1 for this byte)\n            const offset = (u8a[0] >>> 2) + 5;\n            // we unroll the loop\n            switch (offset) {\n                // there still could be 4 bytes data, similar to 0b10 above (with offsets)\n                case 5:\n                    // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n                    // 32-bit, in the case where the top-most bit is set this yields a negative value\n                    return [5, new BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] * 16777216))];\n                case 6:\n                    return [6, new BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + ((u8a[4] + (u8a[5] << 8)) * 16777216))];\n                // 6 bytes data is the maximum, 48 bits (56 would overflow)\n                case 7:\n                    return [7, new BN(u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + ((u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 16777216))];\n                // for anything else, use the non-unrolled version\n                default:\n                    return [offset, u8aToBn(u8a.subarray(1, offset))];\n            }\n        }\n    }\n}\n/**\n * @name compactFromU8aLim\n * @description A limited version of [[compactFromU8a]], accepting only Uint8Array inputs for values <= 48 bits\n */\nexport function compactFromU8aLim(u8a) {\n    // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster\n    // than doing an additional call to u8aToBn (as with variable length)\n    switch (u8a[0] & 0b11) {\n        case 0b00:\n            return [1, u8a[0] >>> 2];\n        case 0b01:\n            return [2, (u8a[0] + (u8a[1] << 8)) >>> 2];\n        case 0b10:\n            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n            // 32-bit, in the case where the top-most bit is set this yields a negative value\n            return [4, (u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + (u8a[3] * 16777216)) >>> 2];\n        // 0b11\n        default: {\n            // add 5 to shifted (4 for base length, 1 for this byte)\n            // we unroll the loop\n            switch ((u8a[0] >>> 2) + 5) {\n                // there still could be 4 bytes data, similar to 0b10 above (with offsets)\n                case 5:\n                    return [5, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] * 16777216)];\n                case 6:\n                    return [6, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + ((u8a[4] + (u8a[5] << 8)) * 16777216)];\n                // 6 bytes data is the maximum, 48 bits (56 would overflow)\n                case 7:\n                    return [7, u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + ((u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 16777216)];\n                // for anything else, we are above the actual MAX_SAFE_INTEGER - bail out\n                default:\n                    throw new Error('Compact input is > Number.MAX_SAFE_INTEGER');\n            }\n        }\n    }\n}\n","import { compactFromU8a } from './fromU8a.js';\n/**\n * @name compactStripLength\n * @description Removes the length prefix, returning both the total length (including the value + compact encoding) and the decoded value with the correct length\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactStripLength } from '@polkadot/util';\n *\n * console.log(compactStripLength(new Uint8Array([2 << 2, 0xde, 0xad]))); // [2, Uint8Array[0xde, 0xad]]\n * ```\n */\nexport function compactStripLength(input) {\n    const [offset, length] = compactFromU8a(input);\n    const total = offset + length.toNumber();\n    return [\n        total,\n        input.subarray(offset, total)\n    ];\n}\n","import { BN, BN_ONE, BN_TWO, bnToBn, bnToU8a } from '../bn/index.js';\nimport { u8aConcatStrict } from '../u8a/index.js';\nconst MAX_U8 = BN_TWO.pow(new BN(8 - 2)).isub(BN_ONE);\nconst MAX_U16 = BN_TWO.pow(new BN(16 - 2)).isub(BN_ONE);\nconst MAX_U32 = BN_TWO.pow(new BN(32 - 2)).isub(BN_ONE);\nconst BL_16 = { bitLength: 16 };\nconst BL_32 = { bitLength: 32 };\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\nexport function compactToU8a(value) {\n    const bn = bnToBn(value);\n    if (bn.lte(MAX_U8)) {\n        return new Uint8Array([bn.toNumber() << 2]);\n    }\n    else if (bn.lte(MAX_U16)) {\n        return bnToU8a(bn.shln(2).iadd(BN_ONE), BL_16);\n    }\n    else if (bn.lte(MAX_U32)) {\n        return bnToU8a(bn.shln(2).iadd(BN_TWO), BL_32);\n    }\n    const u8a = bnToU8a(bn);\n    let length = u8a.length;\n    // adjust to the minimum number of bytes\n    while (u8a[length - 1] === 0) {\n        length--;\n    }\n    if (length < 4) {\n        throw new Error('Invalid length, previous checks match anything less than 2^30');\n    }\n    return u8aConcatStrict([\n        // subtract 4 as minimum (also catered for in decoding)\n        new Uint8Array([((length - 4) << 2) + 0b11]),\n        u8a.subarray(0, length)\n    ]);\n}\n","/**\n * @name floatToU8a\n * @description Converts a float into a U8a representation (While we don't use BE in SCALE\n * we still allow for either representation, although, as elsewhere, isLe is default)\n */\nexport function floatToU8a(value = 0.0, { bitLength = 32, isLe = true } = {}) {\n    if (bitLength !== 32 && bitLength !== 64) {\n        throw new Error('Invalid bitLength provided, expected 32 or 64');\n    }\n    const result = new Uint8Array(bitLength / 8);\n    const dv = new DataView(result.buffer, result.byteOffset);\n    if (bitLength === 32) {\n        dv.setFloat32(0, Number(value), isLe);\n    }\n    else {\n        dv.setFloat64(0, Number(value), isLe);\n    }\n    return result;\n}\n","import { bnToBn } from '../bn/toBn.js';\nimport { isBoolean } from '../is/boolean.js';\nimport { formatDecimal } from './formatDecimal.js';\nimport { getSeparator } from './getSeparator.js';\nimport { calcSi, findSi, SI, SI_MID } from './si.js';\nconst DEFAULT_DECIMALS = 0;\nconst DEFAULT_UNIT = SI[SI_MID].text;\nlet defaultDecimals = DEFAULT_DECIMALS;\nlet defaultUnit = DEFAULT_UNIT;\nfunction _formatBalance(input, { decimals = defaultDecimals, forceUnit, locale = 'en', withAll = false, withSi = true, withSiFull = false, withUnit = true, withZero = true } = {}) {\n    // we only work with string inputs here - convert anything\n    // into the string-only value\n    let text = bnToBn(input).toString();\n    if (text.length === 0 || text === '0') {\n        return '0';\n    }\n    // strip the negative sign so we can work with clean groupings, re-add this in the\n    // end when we return the result (from here on we work with positive numbers)\n    let sign = '';\n    if (text[0].startsWith('-')) {\n        sign = '-';\n        text = text.substring(1);\n    }\n    // We start at midpoint (8) minus 1 - this means that values display as\n    // 123.4567 instead of 0.1234 k (so we always have the most relevant).\n    const si = calcSi(text, decimals, forceUnit);\n    const mid = text.length - (decimals + si.power);\n    const pre = mid <= 0 ? '0' : text.substring(0, mid);\n    // get the post from the midpoint onward and then first add max decimals\n    // before trimming to the correct (calculated) amount of decimals again\n    let post = text\n        .padStart(mid < 0 ? decimals : 1, '0')\n        .substring(mid < 0 ? 0 : mid)\n        .padEnd(withAll ? Math.max(decimals, 4) : 4, '0')\n        .substring(0, withAll ? Math.max(4, decimals + si.power) : 4);\n    // remove all trailing 0's (if required via flag)\n    if (!withZero) {\n        let end = post.length - 1;\n        // This looks inefficient, however it is better to do the checks and\n        // only make one final slice than it is to do it in multiples\n        do {\n            if (post[end] === '0') {\n                end--;\n            }\n        } while (post[end] === '0');\n        post = post.substring(0, end + 1);\n    }\n    // the display unit\n    const unit = isBoolean(withUnit)\n        ? SI[SI_MID].text\n        : withUnit;\n    // format the units for display based on the flags\n    const units = withSi || withSiFull\n        ? si.value === '-'\n            ? withUnit\n                ? ` ${unit}`\n                : ''\n            : ` ${withSiFull ? `${si.text}${withUnit ? ' ' : ''}` : si.value}${withUnit ? unit : ''}`\n        : '';\n    const { decimal, thousand } = getSeparator(locale);\n    return `${sign}${formatDecimal(pre, thousand)}${post && `${decimal}${post}`}${units}`;\n}\nexport const formatBalance = _formatBalance;\nformatBalance.calcSi = (text, decimals = defaultDecimals) => calcSi(text, decimals);\nformatBalance.findSi = findSi;\nformatBalance.getDefaults = () => {\n    return {\n        decimals: defaultDecimals,\n        unit: defaultUnit\n    };\n};\nformatBalance.getOptions = (decimals = defaultDecimals) => {\n    return SI.filter(({ power }) => power < 0\n        ? (decimals + power) >= 0\n        : true);\n};\nformatBalance.setDefaults = ({ decimals, unit }) => {\n    defaultDecimals = (Array.isArray(decimals)\n        ? decimals[0]\n        : decimals) ?? defaultDecimals;\n    defaultUnit = (Array.isArray(unit)\n        ? unit[0]\n        : unit) ?? defaultUnit;\n    SI[SI_MID].text = defaultUnit;\n};\n","/** @internal */\nfunction zeroPad(value) {\n    return value.toString().padStart(2, '0');\n}\n/**\n * @name formatDate\n * @description Formats a date in CCYY-MM-DD HH:MM:SS format\n */\nexport function formatDate(date) {\n    const year = date.getFullYear().toString();\n    const month = zeroPad((date.getMonth() + 1));\n    const day = zeroPad(date.getDate());\n    const hour = zeroPad(date.getHours());\n    const minute = zeroPad(date.getMinutes());\n    const second = zeroPad(date.getSeconds());\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n}\n","const NUMBER_REGEX = new RegExp('(\\\\d+?)(?=(\\\\d{3})+(?!\\\\d)|$)', 'g');\n/**\n * @name formatDecimal\n * @description Formats a number into string format with thousand separators\n */\nexport function formatDecimal(value, separator = ',') {\n    // We can do this by adjusting the regx, however for the sake of clarity\n    // we rather strip and re-add the negative sign in the output\n    const isNegative = value[0].startsWith('-');\n    const matched = isNegative\n        ? value.substring(1).match(NUMBER_REGEX)\n        : value.match(NUMBER_REGEX);\n    return matched\n        ? `${isNegative ? '-' : ''}${matched.join(separator)}`\n        : value;\n}\n","import { bnToBn } from '../bn/toBn.js';\nimport { formatDecimal } from './formatDecimal.js';\nimport { getSeparator } from './getSeparator.js';\n/**\n * @name formatNumber\n * @description Formats a number into string format with thousand separators\n */\nexport function formatNumber(value, { locale = 'en' } = {}) {\n    const { thousand } = getSeparator(locale);\n    return formatDecimal(bnToBn(value).toString(), thousand);\n}\n","/**\n * Get the decimal and thousand separator of a locale\n * @param locale\n * @returns {decimal: string, thousand: string}\n */\nexport function getSeparator(locale) {\n    return {\n        decimal: (0.1).toLocaleString(locale).substring(1, 2),\n        thousand: (1000).toLocaleString(locale).substring(1, 2)\n    };\n}\n","/** @internal */\nexport const SI_MID = 8;\n/** @internal */\nexport const SI = [\n    { power: -24, text: 'yocto', value: 'y' },\n    { power: -21, text: 'zepto', value: 'z' },\n    { power: -18, text: 'atto', value: 'a' },\n    { power: -15, text: 'femto', value: 'f' },\n    { power: -12, text: 'pico', value: 'p' },\n    { power: -9, text: 'nano', value: 'n' },\n    { power: -6, text: 'micro', value: 'µ' },\n    { power: -3, text: 'milli', value: 'm' },\n    { power: 0, text: 'Unit', value: '-' }, // position 8\n    { power: 3, text: 'Kilo', value: 'k' },\n    { power: 6, text: 'Mill', value: 'M' }, // Mega, M\n    { power: 9, text: 'Bill', value: 'B' }, // Giga, G\n    { power: 12, text: 'Tril', value: 'T' }, // Tera, T\n    { power: 15, text: 'Peta', value: 'P' },\n    { power: 18, text: 'Exa', value: 'E' },\n    { power: 21, text: 'Zeta', value: 'Z' },\n    { power: 24, text: 'Yotta', value: 'Y' }\n];\n/** @internal */\nexport function findSi(type) {\n    // use a loop here, better RN support (which doesn't have [].find)\n    for (let i = 0, count = SI.length; i < count; i++) {\n        if (SI[i].value === type) {\n            return SI[i];\n        }\n    }\n    return SI[SI_MID];\n}\n/** @internal */\nexport function calcSi(text, decimals, forceUnit) {\n    if (forceUnit) {\n        return findSi(forceUnit);\n    }\n    const siDefIndex = (SI_MID - 1) + Math.ceil((text.length - decimals) / 3);\n    return SI[siDefIndex] || SI[siDefIndex < 0 ? 0 : SI.length - 1];\n}\n","import { REGEX_HEX_NOPREFIX, REGEX_HEX_PREFIXED } from '../is/hex.js';\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\nexport function hexStripPrefix(value) {\n    if (!value || value === '0x') {\n        return '';\n    }\n    else if (REGEX_HEX_PREFIXED.test(value)) {\n        return value.substring(2);\n    }\n    else if (REGEX_HEX_NOPREFIX.test(value)) {\n        return value;\n    }\n    throw new Error(`Expected hex value to convert, found '${value}'`);\n}\n","import { BigInt } from '@polkadot/x-bigint';\nimport { u8aToBigInt } from '../u8a/toBigInt.js';\nimport { hexToU8a } from './toU8a.js';\n/**\n * @name hexToBigInt\n * @summary Creates a BigInt instance object from a hex string.\n */\nexport function hexToBigInt(value, { isLe = false, isNegative = false } = {}) {\n    return !value || value === '0x'\n        ? BigInt(0)\n        : u8aToBigInt(hexToU8a(value), { isLe, isNegative });\n}\n","import { BN } from '../bn/bn.js';\nimport { hexStripPrefix } from './stripPrefix.js';\n/**\n * @name hexToBn\n * @summary Creates a BN.js object from a hex string.\n * @description\n * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @param _value The value to convert\n * @param _options Options to pass while converting\n * @param _options.isLe Convert using Little Endian\n * @param _options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToBn } from '@polkadot/util';\n *\n * hexToBn('0x123480001f'); // => BN(0x123480001f)\n * ```\n */\nexport function hexToBn(value, { isLe = false, isNegative = false } = {}) {\n    if (!value || value === '0x') {\n        return new BN(0);\n    }\n    const stripped = hexStripPrefix(value);\n    const bn = new BN(stripped, 16, isLe ? 'le' : 'be');\n    // fromTwos takes as parameter the number of bits, which is the hex length\n    // multiplied by 4 (2 bytes being 8 bits)\n    return isNegative\n        ? bn.fromTwos(stripped.length * 4)\n        : bn;\n}\n","import { hexToBn } from './toBn.js';\n/**\n * @name hexToNumber\n * @summary Creates a Number value from a Buffer object.\n * @description\n * `null` inputs returns an NaN result, `hex` values return the actual value as a `Number`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToNumber } from '@polkadot/util';\n *\n * hexToNumber('0x1234'); // => 0x1234\n * ```\n */\nexport function hexToNumber(value) {\n    return value\n        ? hexToBn(value).toNumber()\n        : NaN;\n}\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/x-textdecoder', path: (({ url: getAbsoluteUrl('ules/@polkadot/x-textdecoder/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/x-textdecoder/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/x-textdecoder/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/x-textdecoder/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.6.2' };\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/x-textencoder', path: (({ url: getAbsoluteUrl('ules/@polkadot/x-textencoder/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/x-textencoder/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/x-textencoder/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/x-textencoder/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.6.2' };\n","import { packageInfo as decoderInfo } from '@polkadot/x-textdecoder';\nimport { packageInfo as encoderInfo } from '@polkadot/x-textencoder';\nexport default [decoderInfo, encoderInfo];\n","import others from './detectOther.js';\nimport { packageInfo } from './packageInfo.js';\nimport { detectPackage } from './versionDetect.js';\ndetectPackage(packageInfo, null, others);\n","/**\n * @name arrayFilter\n * @summary Filters undefined and (optionally) null values from an array\n * @description\n * Returns a new array with all `undefined` values removed. Optionally, when `allowNulls = false`, it removes the `null` values as well\n * @example\n * <BR>\n *\n * ```javascript\n * import { arrayFilter } from '@polkadot/util';\n *\n * arrayFilter([0, void 0, true, null, false, '']); // [0, true, null, false, '']\n * arrayFilter([0, void 0, true, null, false, ''], false); // [0, true, false, '']\n * ```\n */\nexport function arrayFilter(array, allowNulls = true) {\n    return array.filter((v) => v !== undefined &&\n        (allowNulls || v !== null));\n}\n","/**\n * @name arrayRange\n * @summary Returns a range of numbers ith the size and the specified offset\n * @description\n * Returns a new array of numbers with the specific size. Optionally, when `startAt`, is provided, it generates the range to start at a specific value.\n * @example\n * <BR>\n *\n * ```javascript\n * import { arrayRange } from '@polkadot/util';\n *\n * arrayRange(5); // [0, 1, 2, 3, 4]\n * arrayRange(3, 5); // [5, 6, 7]\n * ```\n */\nexport function arrayRange(size, startAt = 0) {\n    if (size <= 0) {\n        throw new Error('Expected non-zero, positive number as a range size');\n    }\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = i + startAt;\n    }\n    return result;\n}\n","/**\n * @name arrayShuffle\n * @description Shuffles the input array (unlike sort, this is not done in-place)\n */\nexport function arrayShuffle(input) {\n    const result = input.slice();\n    let curr = result.length;\n    // noop for the single entry\n    if (curr === 1) {\n        return result;\n    }\n    while (curr !== 0) {\n        // ~~ is more performant than Math.floor\n        const rand = ~~(Math.random() * curr);\n        curr--;\n        [result[curr], result[rand]] = [result[rand], result[curr]];\n    }\n    return result;\n}\n","/**\n * @name arrayUnzip\n * @description Splits a single [K, V][] into [K[], V[]]\n */\nexport function arrayUnzip(entries) {\n    const count = entries.length;\n    const keys = new Array(count);\n    const values = new Array(count);\n    for (let i = 0; i < count; i++) {\n        [keys[i], values[i]] = entries[i];\n    }\n    return [keys, values];\n}\n","/**\n * @name arrayZip\n * @description Combines 2 distinct key/value arrays into a single [K, V] array\n */\nexport function arrayZip(keys, values) {\n    const count = keys.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        result[i] = [keys[i], values[i]];\n    }\n    return result;\n}\n","import { createCmp } from './helpers.js';\n/**\n * @name nMax\n * @summary Finds and returns the highest value in an array of bigint.\n */\nexport const nMax = /*#__PURE__*/ createCmp((a, b) => a > b);\n/**\n * @name nMin\n * @summary Finds and returns the lowest value in an array of bigint.\n */\nexport const nMin = /*#__PURE__*/ createCmp((a, b) => a < b);\n","import { BigInt } from '@polkadot/x-bigint';\nimport { _0n, _1n, _2pow53n, _sqrt2pow53n } from './consts.js';\nimport { nToBigInt } from './toBigInt.js';\n/**\n * @name nSqrt\n * @summary Calculates the integer square root of a bigint\n */\nexport function nSqrt(value) {\n    const n = nToBigInt(value);\n    if (n < _0n) {\n        throw new Error('square root of negative numbers is not supported');\n    }\n    // https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/\n    // shortcut <= 2^53 - 1 to use the JS utils\n    if (n <= _2pow53n) {\n        // ~~ is more performant that Math.floor\n        return BigInt(~~Math.sqrt(Number(n)));\n    }\n    // Use sqrt(MAX_SAFE_INTEGER) as starting point. since we already know the\n    // output will be larger than this, we expect this to be a safe start\n    let x0 = _sqrt2pow53n;\n    while (true) {\n        const x1 = ((n / x0) + x0) >> _1n;\n        if (x0 === x1 || (x0 === (x1 - _1n))) {\n            return x0;\n        }\n        x0 = x1;\n    }\n}\n","import { u8aToHex } from '../u8a/index.js';\nimport { nToU8a } from './toU8a.js';\n/**\n * @name nToHex\n * @summary Creates a hex value from a bigint object.\n */\nexport function nToHex(value, { bitLength = -1, isLe = false, isNegative = false } = {}) {\n    return u8aToHex(nToU8a(value || 0, { bitLength, isLe, isNegative }));\n}\n","const MIN_MS = 60 * 1000;\nconst HR_MS = MIN_MS * 60;\nconst DAY_MS = HR_MS * 24;\nconst ZERO = { days: 0, hours: 0, milliseconds: 0, minutes: 0, seconds: 0 };\n/** @internal */\nfunction add(a, b) {\n    return {\n        days: (a.days || 0) + b.days,\n        hours: (a.hours || 0) + b.hours,\n        milliseconds: (a.milliseconds || 0) + b.milliseconds,\n        minutes: (a.minutes || 0) + b.minutes,\n        seconds: (a.seconds || 0) + b.seconds\n    };\n}\n/** @internal */\nfunction extractSecs(ms) {\n    const s = ms / 1000;\n    if (s < 60) {\n        const seconds = ~~s;\n        return add({ seconds }, extractTime(ms - (seconds * 1000)));\n    }\n    const m = s / 60;\n    if (m < 60) {\n        const minutes = ~~m;\n        return add({ minutes }, extractTime(ms - (minutes * MIN_MS)));\n    }\n    const h = m / 60;\n    if (h < 24) {\n        const hours = ~~h;\n        return add({ hours }, extractTime(ms - (hours * HR_MS)));\n    }\n    const days = ~~(h / 24);\n    return add({ days }, extractTime(ms - (days * DAY_MS)));\n}\n/**\n * @name extractTime\n * @summary Convert a quantity of seconds to Time array representing accumulated {days, minutes, hours, seconds, milliseconds}\n * @example\n * <BR>\n *\n * ```javascript\n * import { extractTime } from '@polkadot/util';\n *\n * const { days, minutes, hours, seconds, milliseconds } = extractTime(6000); // 0, 0, 10, 0, 0\n * ```\n */\nexport function extractTime(milliseconds) {\n    return !milliseconds\n        ? ZERO\n        : milliseconds < 1000\n            ? add({ milliseconds }, ZERO)\n            : extractSecs(milliseconds);\n}\n","import { bnToBn } from '../bn/toBn.js';\n/** @internal */\nfunction formatValue(elapsed) {\n    if (elapsed < 15) {\n        return `${elapsed.toFixed(1)}s`;\n    }\n    else if (elapsed < 60) {\n        return `${elapsed | 0}s`;\n    }\n    else if (elapsed < 3600) {\n        return `${elapsed / 60 | 0}m`;\n    }\n    return `${elapsed / 3600 | 0}h`;\n}\n/**\n * @name formatElapsed\n * @description Formats an elapsed value into s, m, h or day segments\n */\nexport function formatElapsed(now, value) {\n    const tsNow = now?.getTime() || 0;\n    const tsValue = value instanceof Date\n        ? value.getTime()\n        : bnToBn(value).toNumber();\n    return (tsNow && tsValue)\n        ? formatValue(Math.max(Math.abs(tsNow - tsValue), 0) / 1000)\n        : '0.0s';\n}\n","import { isHex } from '../is/hex.js';\n/**\n * @name hexHasPrefix\n * @summary Tests for the existence of a `0x` prefix.\n * @description\n * Checks for a valid hex input value and if the start matched `0x`\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexHasPrefix } from '@polkadot/util';\n *\n * console.log('has prefix', hexHasPrefix('0x1234')); // => true\n * ```\n */\nexport function hexHasPrefix(value) {\n    return !!value && isHex(value, -1);\n}\n","import { hexHasPrefix } from './hasPrefix.js';\n/**\n * @name hexAddPrefix\n * @summary Adds the `0x` prefix to string values.\n * @description\n * Returns a `0x` prefixed string from the input value. If the input is already prefixed, it is returned unchanged.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexAddPrefix } from '@polkadot/util';\n *\n * console.log('With prefix', hexAddPrefix('0a0b12')); // => 0x0a0b12\n * ```\n */\nexport function hexAddPrefix(value) {\n    return value && hexHasPrefix(value)\n        ? value\n        : `0x${value && value.length % 2 === 1 ? '0' : ''}${value || ''}`;\n}\n","import { hexAddPrefix } from './addPrefix.js';\nimport { hexStripPrefix } from './stripPrefix.js';\n/**\n * @name hexFixLength\n * @summary Shifts a hex string to a specific bitLength\n * @description\n * Returns a `0x` prefixed string with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length. Input values with less bits are returned as-is by default. When `withPadding` is set, shorter values are padded with `0`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexFixLength } from '@polkadot/util';\n *\n * console.log('fixed', hexFixLength('0x12', 16)); // => 0x12\n * console.log('fixed', hexFixLength('0x12', 16, true)); // => 0x0012\n * console.log('fixed', hexFixLength('0x0012', 8)); // => 0x12\n * ```\n */\nexport function hexFixLength(value, bitLength = -1, withPadding = false) {\n    const strLength = Math.ceil(bitLength / 4);\n    const hexLength = strLength + 2;\n    return hexAddPrefix((bitLength === -1 || value.length === hexLength || (!withPadding && value.length < hexLength))\n        ? hexStripPrefix(value)\n        : (value.length > hexLength)\n            ? hexStripPrefix(value).slice(-1 * strLength)\n            : `${'0'.repeat(strLength)}${hexStripPrefix(value)}`.slice(-1 * strLength));\n}\n","import { u8aToString } from '../u8a/toString.js';\nimport { hexToU8a } from './toU8a.js';\n/**\n * @name hexToU8a\n * @summary Creates a Uint8Array object from a hex string.\n * @description\n * Hex input values return the actual bytes value converted to a string. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToString } from '@polkadot/util';\n *\n * hexToU8a('0x68656c6c6f'); // hello\n * ```\n */\nexport function hexToString(_value) {\n    return u8aToString(hexToU8a(_value));\n}\n","/**\n * @name isArray\n * @summary Tests for a Array instance.\n */\nexport function isArray(value) {\n    return Array.isArray(value);\n}\n","/**\n * @name isError\n * @summary Tests for a `Error` object instance.\n * @description\n * Checks to see if the input object is an instance of `Error`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isError } from '@polkadot/util';\n *\n * console.log('isError', isError(new Error('message'))); // => true\n * ```\n */\nexport function isError(value) {\n    return (((value && value.constructor) === Error) ||\n        value instanceof Error);\n}\n","/**\n * @name isInstanceOf\n * @summary Tests for a instance of a class.\n * @description\n * Checks to see if the input value is an instance of the test class.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isInstanceOf } from '@polkadot/util';\n *\n * console.log('isInstanceOf', isInstanceOf(new Array(0), Array)); // => true\n * ```\n */\nexport function isInstanceOf(value, Clazz) {\n    return (((value && value.constructor) === Clazz) ||\n        value instanceof Clazz);\n}\n","const v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\nconst v6s = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6s}:){7}(?:${v6s}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6s}:){6}(?:${v4}|:${v6s}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6s}:){5}(?::${v4}|(?::${v6s}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6s}:){4}(?:(?::${v6s}){0,1}:${v4}|(?::${v6s}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6s}:){3}(?:(?::${v6s}){0,2}:${v4}|(?::${v6s}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6s}:){2}(?:(?::${v6s}){0,3}:${v4}|(?::${v6s}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6s}:){1}(?:(?::${v6s}){0,4}:${v4}|(?::${v6s}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6s}){0,5}:${v4}|(?::${v6s}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n/**\n * @name isIp\n * @summary Tests if the value is a valid IP address\n * @description\n * Checks to see if the value is a valid IP address. Optionally check for either v4/v6\n * @example\n * <BR>\n *\n * ```javascript\n * import { isIp } from '@polkadot/util';\n *\n * isIp('192.168.0.1')); // => true\n * isIp('1:2:3:4:5:6:7:8'); // => true\n * isIp('192.168.0.1', 'v6')); // => false\n * isIp('1:2:3:4:5:6:7:8', 'v4'); // => false\n * ```\n */\nexport function isIp(value, type) {\n    switch (type) {\n        case 'v4': return v4exact.test(value);\n        case 'v6': return v6exact.test(value);\n        default: return v46Exact.test(value);\n    }\n}\n","import { stringify } from '../stringify.js';\n/**\n * @name isJsonObject\n * @summary Tests for a valid JSON `object`.\n * @description\n * Checks to see if the input value is a valid JSON object.\n * It returns false if the input is JSON parsable, but not an Javascript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isJsonObject } from '@polkadot/util';\n *\n * isJsonObject({}); // => true\n * isJsonObject({\n *  \"Test\": \"1234\",\n *  \"NestedTest\": {\n *   \"Test\": \"5678\"\n *  }\n * }); // => true\n * isJsonObject(1234); // JSON parsable, but not an object =>  false\n * isJsonObject(null); // JSON parsable, but not an object => false\n * isJsonObject('not an object'); // => false\n * ```\n */\nexport function isJsonObject(value) {\n    const str = typeof value !== 'string'\n        ? stringify(value)\n        : value;\n    try {\n        const obj = JSON.parse(str);\n        return typeof obj === 'object' && obj !== null;\n    }\n    catch {\n        return false;\n    }\n}\n","import { isOn } from './helpers.js';\n/**\n * @name isBObservable\n * @summary Tests for a `Observable` object instance.\n * @description\n * Checks to see if the input object is an instance of `BN` (bn.js).\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObservable } from '@polkadot/util';\n *\n * console.log('isObservable', isObservable(...));\n * ```\n */\nexport const isObservable = /*#__PURE__*/ isOn('next');\n","import { isOnObject } from './helpers.js';\nexport const isPromise = /*#__PURE__*/ isOnObject('catch', 'then');\n","import { u8aEq } from '../u8a/eq.js';\nimport { isU8a } from './u8a.js';\nconst ELF_MAGIC = new Uint8Array([0x7f, 0x45, 0x4c, 0x46]); // ELF magic bytes: 0x7f, 'E', 'L', 'F'\nconst PVM_MAGIC = new Uint8Array([0x50, 0x56, 0x4d, 0x00]); // 'P', 'V', 'M', 0x00\n/**\n * @name isRiscV\n * @summary Tests if the input has a RISC-V header\n * @description\n * Checks to see if the input Uint8Array contains a valid RISC-V header\n */\nexport function isRiscV(bytes) {\n    if (isU8a(bytes)) {\n        const start = bytes.subarray(0, 4);\n        return u8aEq(start, PVM_MAGIC) || u8aEq(start, ELF_MAGIC);\n    }\n    return false;\n}\n","const REGEX_DEV = /(Development|Local Testnet)$/;\nexport function isTestChain(chain) {\n    if (!chain) {\n        return false;\n    }\n    return !!REGEX_DEV.test(chain.toString());\n}\n","import { u8aEq } from '../u8a/eq.js';\nimport { isU8a } from './u8a.js';\nconst WASM_MAGIC = new Uint8Array([0, 97, 115, 109]); // \\0asm\n/**\n * @name isWasm\n * @summary Tests if the input has a WASM header\n * @description\n * Checks to see if the input Uint8Array contains a valid WASM header\n */\nexport function isWasm(value) {\n    return isU8a(value) && u8aEq(value.subarray(0, 4), WASM_MAGIC);\n}\n","import { hexFixLength } from '../hex/fixLength.js';\n/**\n * @name numberToHex\n * @summary Creates a hex value from a number.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `0x` result. `number` input values return the actual bytes value converted to a `hex`. With `bitLength` set, it converts the number to the equivalent size.\n * @example\n * <BR>\n *\n * ```javascript\n * import { numberToHex } from '@polkadot/util';\n *\n * numberToHex(0x1234); // => '0x1234'\n * numberToHex(0x1234, 32); // => 0x00001234\n * ```\n */\nexport function numberToHex(value, bitLength = -1) {\n    const hex = (!value || Number.isNaN(value) ? 0 : value).toString(16);\n    return hexFixLength(hex.length % 2 ? `0${hex}` : hex, bitLength, true);\n}\n","import { hexToU8a } from '../hex/toU8a.js';\nimport { numberToHex } from './toHex.js';\n/**\n * @name numberToU8a\n * @summary Creates a Uint8Array object from a number.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `number` input values return the actual bytes value converted to a `Uint8Array`. With `bitLength`, it converts the value to the equivalent size.\n * @example\n * <BR>\n *\n * ```javascript\n * import { numberToU8a } from '@polkadot/util';\n *\n * numberToU8a(0x1234); // => [0x12, 0x34]\n * ```\n */\nexport function numberToU8a(value, bitLength = -1) {\n    return hexToU8a(numberToHex(value, bitLength));\n}\n","import { objectSpread } from './spread.js';\n/**\n * @name objectCopy\n * @summary Creates a shallow clone of the input object\n */\nexport function objectCopy(source) {\n    return objectSpread({}, source);\n}\n","/**\n * @name objectEntries\n * @summary A version of Object.entries that is typed for TS\n */\nexport function objectEntries(obj) {\n    return Object.entries(obj);\n}\n","/**\n * @name objectKeys\n * @summary A version of Object.keys that is typed for TS\n */\nexport function objectKeys(value) {\n    return Object.keys(value);\n}\n","/**\n * @name objectValues\n * @summary A version of Object.values that is typed for TS\n */\nexport function objectValues(obj) {\n    return Object.values(obj);\n}\n","/**\n * @name promisify\n * @summary Wraps an async callback into a `Promise`\n * @description\n * Wraps the supplied async function `fn` that has a standard JS callback `(error: Error, result: any)` into a `Promise`, passing the supplied parameters. When `error` is set, the Promise is rejected, else the Promise resolves with the `result` value.\n * @example\n * <BR>\n *\n * ```javascript\n * const { promisify } from '@polkadot/util';\n *\n * await promisify(null, ((a, cb) => cb(null, a), true); // resolves with `true`\n * await promisify(null, (cb) => cb(new Error('error!'))); // rejects with `error!`\n * ```\n */\nexport function promisify(self, fn, ...params) {\n    return new Promise((resolve, reject) => {\n        fn.apply(self, params.concat((error, result) => {\n            if (error) {\n                reject(error);\n            }\n            else {\n                resolve(result);\n            }\n        }));\n    });\n}\n","/**\n * @name stringShorten\n * @summary Returns a string with maximum length\n * @description\n * Checks the string against the `prefixLength`, if longer than double this, shortens it by placing `..` in the middle of it\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringShorten } from '@polkadot/util';\n *\n * stringShorten('1234567890', 2); // => 12..90\n * ```\n */\nexport function stringShorten(value, prefixLength = 6) {\n    return value.length <= 2 + 2 * prefixLength\n        ? value.toString()\n        : `${value.substring(0, prefixLength)}…${value.slice(-prefixLength)}`;\n}\n","import { xglobal } from '@polkadot/x-global';\nimport { hasBuffer } from '../has.js';\n/**\n * @name u8aToBuffer\n * @summary Creates a Buffer object from a hex string.\n * @description\n * `null` inputs returns an empty `Buffer` result. `UInt8Array` input values return the actual bytes value converted to a `Buffer`. Anything that is not a `UInt8Array` throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToBuffer } from '@polkadot/util';\n *\n * console.log('Buffer', u8aToBuffer(new Uint8Array([1, 2, 3])));\n * ```\n */\nexport function u8aToBuffer(value) {\n    return hasBuffer\n        ? xglobal.Buffer.from(value || [])\n        : new Uint8Array(value || []);\n}\n","import { u8aToU8a } from '../u8a/toU8a.js';\nimport { isHex } from './hex.js';\nimport { isString } from './string.js';\n/** @internal */\nfunction isAsciiStr(str) {\n    for (let i = 0, count = str.length; i < count; i++) {\n        const b = str.charCodeAt(i);\n        // check is inlined here, it is faster than making a call\n        if (b < 32 || b > 126) {\n            return false;\n        }\n    }\n    return true;\n}\n/** @internal */\nfunction isAsciiBytes(u8a) {\n    for (let i = 0, count = u8a.length; i < count; i++) {\n        const b = u8a[i] | 0;\n        // check is inlined here, it is faster than making a call\n        if (b < 32 || b > 126) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @name isAscii\n * @summary Tests if the input is printable ASCII\n * @description\n * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters\n */\nexport function isAscii(value) {\n    return isString(value)\n        ? isHex(value)\n            ? isAsciiBytes(u8aToU8a(value))\n            : isAsciiStr(value)\n        : value\n            ? isAsciiBytes(value)\n            : false;\n}\n","/**\n * @name isBigInt\n * @summary Tests for a `BigInt` object instance.\n * @description\n * Checks to see if the input object is an instance of `BigInt`\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBigInt } from '@polkadot/util';\n *\n * console.log('isBigInt', isBigInt(123_456n)); // => true\n * ```\n */\nexport function isBigInt(value) {\n    return typeof value === 'bigint';\n}\n","import { BN } from '../bn/bn.js';\n/**\n * @name isBn\n * @summary Tests for a `BN` object instance.\n * @description\n * Checks to see if the input object is an instance of `BN` (bn.js).\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { isBn } from '@polkadot/util';\n *\n * console.log('isBn', isBn(new BN(1))); // => true\n * ```\n */\nexport function isBn(value) {\n    return BN.isBN(value);\n}\n","/**\n * @name isBoolean\n * @summary Tests for a boolean value.\n * @description\n * Checks to see if the input value is a JavaScript boolean.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBoolean } from '@polkadot/util';\n *\n * isBoolean(false); // => true\n * ```\n */\nexport function isBoolean(value) {\n    return typeof value === 'boolean';\n}\n","import { isClass } from './class.js';\n/**\n * @name isChildClass\n * @summary Tests if the child extends the parent Class\n * @description\n * Checks to see if the child Class extends the parent Class\n * @example\n * <BR>\n *\n * ```javascript\n * import { isChildClass } from '@polkadot/util';\n *\n * console.log('isChildClass', isChildClass(BN, BN); // => true\n * console.log('isChildClass', isChildClass(BN, Uint8Array); // => false\n * ```\n */\nexport function isChildClass(Parent, Child) {\n    // https://stackoverflow.com/questions/30993434/check-if-a-constructor-inherits-another-in-es6/30993664\n    return isClass(Child) && isClass(Parent)\n        // eslint-disable-next-line no-prototype-builtins\n        ? Parent === Child || Parent.isPrototypeOf(Child)\n        : false;\n}\n","import { isOnFunction } from './helpers.js';\n/**\n * @name isClass\n * Tests if the supplied argument is a Class\n */\nexport const isClass = /*#__PURE__*/ isOnFunction('isPrototypeOf', 'hasOwnProperty');\n","import { isOnObject } from './helpers.js';\nconst checkCodec = /*#__PURE__*/ isOnObject('toHex', 'toHuman', 'toU8a');\nconst checkRegistry = /*#__PURE__*/ isOnObject('get');\nexport function isCodec(value) {\n    return checkCodec(value) && checkRegistry(value.registry);\n}\n","import { isOnObject } from './helpers.js';\n/**\n * @name isCompact\n * @summary Tests for SCALE-Compact-like object instance.\n */\nexport const isCompact = /*#__PURE__*/ isOnObject('toBigInt', 'toBn', 'toNumber', 'unwrap');\n","import { isFunction } from './function.js';\nimport { isObject } from './object.js';\nexport function isOn(...fns) {\n    return (value) => (isObject(value) || isFunction(value)) &&\n        fns.every((f) => isFunction(value[f]));\n}\nexport function isOnFunction(...fns) {\n    return (value) => isFunction(value) &&\n        fns.every((f) => isFunction(value[f]));\n}\nexport function isOnObject(...fns) {\n    return (value) => isObject(value) &&\n        fns.every((f) => isFunction(value[f]));\n}\n","/**\n * @name isNull\n * @summary Tests for a `null` values.\n * @description\n * Checks to see if the input value is `null`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNull } from '@polkadot/util';\n *\n * console.log('isNull', isNull(null)); // => true\n * ```\n */\nexport function isNull(value) {\n    return value === null;\n}\n","/**\n * @name isNumber\n * @summary Tests for a JavaScript number.\n * @description\n * Checks to see if the input value is a valid number.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isNumber } from '@polkadot/util';\n *\n * console.log('isNumber', isNumber(1234)); // => true\n * ```\n */\nexport function isNumber(value) {\n    return typeof value === 'number';\n}\n","/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */\nexport function isObject(value) {\n    return !!value && typeof value === 'object';\n}\n","/**\n * @name isString\n * @summary Tests for a string.\n * @description\n * Checks to see if the input value is a JavaScript string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isString } from '@polkadot/util';\n *\n * console.log('isString', isString('test')); // => true\n * ```\n */\nexport function isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\n","import { isOn } from './helpers.js';\nexport const isToBigInt = /*#__PURE__*/ isOn('toBigInt');\n","import { isOn } from './helpers.js';\nexport const isToBn = /*#__PURE__*/ isOn('toBn');\n","/**\n * @name isUndefined\n * @summary Tests for a `undefined` values.\n * @description\n * Checks to see if the input value is `undefined`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUndefined } from '@polkadot/util';\n *\n * console.log('isUndefined', isUndefined(void(0))); // => true\n * ```\n */\nexport function isUndefined(value) {\n    return value === undefined;\n}\n","import { u8aToU8a } from '../u8a/toU8a.js';\nimport { isString } from './string.js';\n/**\n * @name isUtf8\n * @summary Tests if the input is valid Utf8\n * @description\n * Checks to see if the input string or Uint8Array is valid Utf8\n */\nexport function isUtf8(value) {\n    if (!value) {\n        return isString(value);\n    }\n    const u8a = u8aToU8a(value);\n    const len = u8a.length;\n    let i = 0;\n    while (i < len) {\n        if (u8a[i] <= 0x7F) /* 00..7F */ {\n            i += 1;\n        }\n        else if (u8a[i] >= 0xC2 && u8a[i] <= 0xDF) /* C2..DF 80..BF */ {\n            if (i + 1 < len) /* Expect a 2nd byte */ {\n                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n                    // *message = \"After a first byte between C2 and DF, expecting a 2nd byte between 80 and BF\";\n                    // *faulty_bytes = 2;\n                    return false;\n                }\n            }\n            else {\n                // *message = \"After a first byte between C2 and DF, expecting a 2nd byte.\";\n                // *faulty_bytes = 1;\n                return false;\n            }\n            i += 2;\n        }\n        else if (u8a[i] === 0xE0) /* E0 A0..BF 80..BF */ {\n            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {\n                if (u8a[i + 1] < 0xA0 || u8a[i + 1] > 0xBF) {\n                    // *message = \"After a first byte of E0, expecting a 2nd byte between A0 and BF.\";\n                    // *faulty_bytes = 2;\n                    return false;\n                }\n                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n                    // *message = \"After a first byte of E0, expecting a 3nd byte between 80 and BF.\";\n                    // *faulty_bytes = 3;\n                    return false;\n                }\n            }\n            else {\n                // *message = \"After a first byte of E0, expecting two following bytes.\";\n                // *faulty_bytes = 1;\n                return false;\n            }\n            i += 3;\n        }\n        else if (u8a[i] >= 0xE1 && u8a[i] <= 0xEC) /* E1..EC 80..BF 80..BF */ {\n            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {\n                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n                    // *message = \"After a first byte between E1 and EC, expecting the 2nd byte between 80 and BF.\";\n                    // *faulty_bytes = 2;\n                    return false;\n                }\n                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n                    // *message = \"After a first byte between E1 and EC, expecting the 3rd byte between 80 and BF.\";\n                    // *faulty_bytes = 3;\n                    return false;\n                }\n            }\n            else {\n                // *message = \"After a first byte between E1 and EC, expecting two following bytes.\";\n                // *faulty_bytes = 1;\n                return false;\n            }\n            i += 3;\n        }\n        else if (u8a[i] === 0xED) /* ED 80..9F 80..BF */ {\n            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {\n                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x9F) {\n                    // *message = \"After a first byte of ED, expecting 2nd byte between 80 and 9F.\";\n                    // *faulty_bytes = 2;\n                    return false;\n                }\n                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n                    // *message = \"After a first byte of ED, expecting 3rd byte between 80 and BF.\";\n                    // *faulty_bytes = 3;\n                    return false;\n                }\n            }\n            else {\n                // *message = \"After a first byte of ED, expecting two following bytes.\";\n                // *faulty_bytes = 1;\n                return false;\n            }\n            i += 3;\n        }\n        else if (u8a[i] >= 0xEE && u8a[i] <= 0xEF) /* EE..EF 80..BF 80..BF */ {\n            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {\n                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n                    // *message = \"After a first byte between EE and EF, expecting 2nd byte between 80 and BF.\";\n                    // *faulty_bytes = 2;\n                    return false;\n                }\n                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n                    // *message = \"After a first byte between EE and EF, expecting 3rd byte between 80 and BF.\";\n                    // *faulty_bytes = 3;\n                    return false;\n                }\n            }\n            else {\n                // *message = \"After a first byte between EE and EF, two following bytes.\";\n                // *faulty_bytes = 1;\n                return false;\n            }\n            i += 3;\n        }\n        else if (u8a[i] === 0xF0) /* F0 90..BF 80..BF 80..BF */ {\n            if (i + 3 < len) /* Expect a 2nd, 3rd 3th byte */ {\n                if (u8a[i + 1] < 0x90 || u8a[i + 1] > 0xBF) {\n                    // *message = \"After a first byte of F0, expecting 2nd byte between 90 and BF.\";\n                    // *faulty_bytes = 2;\n                    return false;\n                }\n                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n                    // *message = \"After a first byte of F0, expecting 3rd byte between 80 and BF.\";\n                    // *faulty_bytes = 3;\n                    return false;\n                }\n                if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n                    // *message = \"After a first byte of F0, expecting 4th byte between 80 and BF.\";\n                    // *faulty_bytes = 4;\n                    return false;\n                }\n            }\n            else {\n                // *message = \"After a first byte of F0, expecting three following bytes.\";\n                // *faulty_bytes = 1;\n                return false;\n            }\n            i += 4;\n        }\n        else if (u8a[i] >= 0xF1 && u8a[i] <= 0xF3) /* F1..F3 80..BF 80..BF 80..BF */ {\n            if (i + 3 < len) /* Expect a 2nd, 3rd 3th byte */ {\n                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {\n                    // *message = \"After a first byte of F1, F2, or F3, expecting a 2nd byte between 80 and BF.\";\n                    // *faulty_bytes = 2;\n                    return false;\n                }\n                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n                    // *message = \"After a first byte of F1, F2, or F3, expecting a 3rd byte between 80 and BF.\";\n                    // *faulty_bytes = 3;\n                    return false;\n                }\n                if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n                    // *message = \"After a first byte of F1, F2, or F3, expecting a 4th byte between 80 and BF.\";\n                    // *faulty_bytes = 4;\n                    return false;\n                }\n            }\n            else {\n                // *message = \"After a first byte of F1, F2, or F3, expecting three following bytes.\";\n                // *faulty_bytes = 1;\n                return false;\n            }\n            i += 4;\n        }\n        else if (u8a[i] === 0xF4) /* F4 80..8F 80..BF 80..BF */ {\n            if (i + 3 < len) /* Expect a 2nd, 3rd 3th byte */ {\n                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x8F) {\n                    // *message = \"After a first byte of F4, expecting 2nd byte between 80 and 8F.\";\n                    // *faulty_bytes = 2;\n                    return false;\n                }\n                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {\n                    // *message = \"After a first byte of F4, expecting 3rd byte between 80 and BF.\";\n                    // *faulty_bytes = 3;\n                    return false;\n                }\n                if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {\n                    // *message = \"After a first byte of F4, expecting 4th byte between 80 and BF.\";\n                    // *faulty_bytes = 4;\n                    return false;\n                }\n            }\n            else {\n                // *message = \"After a first byte of F4, expecting three following bytes.\";\n                // *faulty_bytes = 1;\n                return false;\n            }\n            i += 4;\n        }\n        else {\n            // *message = \"Expecting bytes in the following ranges: 00..7F C2..F4.\";\n            // *faulty_bytes = 1;\n            return false;\n        }\n    }\n    return true;\n}\n","/**\n * @name lazyMethod\n * @description\n * Creates a lazy, on-demand getter for the specific value. Upon get the value will be evaluated.\n */\nexport function lazyMethod(result, item, creator, getName, index = 0) {\n    const name = getName\n        ? getName(item, index)\n        : item.toString();\n    let value;\n    Object.defineProperty(result, name, {\n        // This allows for re-configuration with the embedded defineProperty below\n        // and ensures that on tested browsers and Node, it _will_ be redefined\n        // and thus short-circuited for future access\n        configurable: true,\n        enumerable: true,\n        // Use a function here, we don't want to capture the outer this, i.e.\n        // don't use arrow functions in this context since we have a this inside\n        get: function () {\n            // This check should _always_ be false and unneeded, since we override\n            // with a value below ... however we ensure we are quire vigilant against\n            // all environment failures, so we are rather be safe than sorry\n            if (value === undefined) {\n                value = creator(item, index, this);\n                try {\n                    // re-define the property as a value, next time around this\n                    // getter will only return the computed value\n                    Object.defineProperty(this, name, { value });\n                }\n                catch {\n                    // ignore any errors, since this _should_ not happen due to\n                    // the \"configurable\" property above. But if it ever does\n                    // from here-on we will be the cached value the next time\n                    // around (with a very slight dip in performance)\n                }\n            }\n            return value;\n        }\n    });\n}\n/**\n * @name lazyMethods\n * @description\n * Creates lazy, on-demand getters for the specific values.\n */\nexport function lazyMethods(result, items, creator, getName) {\n    for (let i = 0, count = items.length; i < count; i++) {\n        lazyMethod(result, items[i], creator, getName, i);\n    }\n    return result;\n}\n","import { xglobal } from '@polkadot/x-global';\nimport { formatDate } from './format/formatDate.js';\nimport { isBn } from './is/bn.js';\nimport { isBuffer } from './is/buffer.js';\nimport { isFunction } from './is/function.js';\nimport { isObject } from './is/object.js';\nimport { isU8a } from './is/u8a.js';\nimport { u8aToHex } from './u8a/toHex.js';\nimport { u8aToU8a } from './u8a/toU8a.js';\nimport { noop } from './noop.js';\nconst logTo = {\n    debug: 'log',\n    error: 'error',\n    log: 'log',\n    warn: 'warn'\n};\nfunction formatOther(value) {\n    if (value && isObject(value) && value.constructor === Object) {\n        const result = {};\n        for (const [k, v] of Object.entries(value)) {\n            result[k] = loggerFormat(v);\n        }\n        return result;\n    }\n    return value;\n}\nexport function loggerFormat(value) {\n    if (Array.isArray(value)) {\n        return value.map(loggerFormat);\n    }\n    else if (isBn(value)) {\n        return value.toString();\n    }\n    else if (isU8a(value) || isBuffer(value)) {\n        return u8aToHex(u8aToU8a(value));\n    }\n    return formatOther(value);\n}\nfunction formatWithLength(maxLength) {\n    return (v) => {\n        if (maxLength <= 0) {\n            return v;\n        }\n        const r = `${v}`;\n        return r.length < maxLength\n            ? v\n            : `${r.substring(0, maxLength)} ...`;\n    };\n}\nfunction apply(log, type, values, maxSize = -1) {\n    if (values.length === 1 && isFunction(values[0])) {\n        const fnResult = values[0]();\n        return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult], maxSize);\n    }\n    console[logTo[log]](formatDate(new Date()), type, ...values\n        .map(loggerFormat)\n        .map(formatWithLength(maxSize)));\n}\nfunction isDebugOn(e, type) {\n    return !!e && (e === '*' ||\n        type === e ||\n        (e.endsWith('*') &&\n            type.startsWith(e.slice(0, -1))));\n}\nfunction isDebugOff(e, type) {\n    return !!e && (e.startsWith('-') &&\n        (type === e.slice(1) ||\n            (e.endsWith('*') &&\n                type.startsWith(e.slice(1, -1)))));\n}\nfunction getDebugFlag(env, type) {\n    let flag = false;\n    for (const e of env) {\n        if (isDebugOn(e, type)) {\n            flag = true;\n        }\n        else if (isDebugOff(e, type)) {\n            flag = false;\n        }\n    }\n    return flag;\n}\nfunction parseEnv(type) {\n    const maxSize = parseInt(xglobal.process?.env?.['DEBUG_MAX'] || '-1', 10);\n    return [\n        getDebugFlag((xglobal.process?.env?.['DEBUG'] || '').toLowerCase().split(','), type),\n        isNaN(maxSize)\n            ? -1\n            : maxSize\n    ];\n}\n/**\n * @name Logger\n * @summary Creates a consistent log interface for messages\n * @description\n * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.\n * @example\n * <BR>\n *\n * ```javascript\n * import { logger } from '@polkadot/util';\n *\n * const l = logger('test');\n * ```\n */\nexport function logger(origin) {\n    const type = `${origin.toUpperCase()}:`.padStart(16);\n    const [isDebug, maxSize] = parseEnv(origin.toLowerCase());\n    return {\n        debug: isDebug\n            ? (...values) => apply('debug', type, values, maxSize)\n            : noop,\n        error: (...values) => apply('error', type, values),\n        log: (...values) => apply('log', type, values),\n        noop,\n        warn: (...values) => apply('warn', type, values)\n    };\n}\n","import { stringify } from './stringify.js';\nfunction defaultGetId() {\n    return 'none';\n}\n/**\n * @name memoize\n * @description Memomize the function with a specific instanceId\n */\nexport function memoize(fn, { getInstanceId = defaultGetId } = {}) {\n    const cache = {};\n    const memoized = (...args) => {\n        const stringParams = stringify(args);\n        const instanceId = getInstanceId();\n        if (!cache[instanceId]) {\n            cache[instanceId] = {};\n        }\n        if (cache[instanceId][stringParams] === undefined) {\n            cache[instanceId][stringParams] = fn(...args);\n        }\n        return cache[instanceId][stringParams];\n    };\n    memoized.unmemoize = (...args) => {\n        const stringParams = stringify(args);\n        const instanceId = getInstanceId();\n        if (cache[instanceId]?.[stringParams] !== undefined) {\n            delete cache[instanceId][stringParams];\n        }\n    };\n    return memoized;\n}\n","/**\n * @name nextTick\n * @description Defer the operation to the queue for evaluation on the next tick\n */\nexport function nextTick(onExec, onError) {\n    // While Promise.resolve().then(...) would defer to the nextTick, this\n    // actually does not play as nicely in browsers like the setTimeout(...)\n    // approach. So the safer, though less optimal approach is the one taken here\n    setTimeout(() => {\n        Promise\n            .resolve()\n            .then(() => {\n            onExec();\n        })\n            .catch((error) => {\n            if (onError) {\n                onError(error);\n            }\n            else {\n                console.error(error);\n            }\n        });\n    }, 0);\n}\n","/**\n * A sharable identity function. Returns the input as-is with no transformation applied.\n */\nexport function identity(value) {\n    return value;\n}\n/**\n * A sharable noop function. As the name suggests, does nothing\n */\nexport function noop() {\n    // noop\n}\n","/**\n * @name objectClear\n * @summary Removes all the keys from the input object\n */\nexport function objectClear(value) {\n    const keys = Object.keys(value);\n    for (let i = 0, count = keys.length; i < count; i++) {\n        delete value[keys[i]];\n    }\n    return value;\n}\n","/**\n * @name objectProperty\n * @summary Assign a get property on the input object\n */\nexport function objectProperty(that, key, getter, getName, index = 0) {\n    const name = getName\n        ? getName(key, index)\n        : key;\n    // There are 3 approaches here -\n    //  - Object.prototype.hasOwnProperty.call(that, key) - this only checks the current class, i.e\n    //    will retuirn false if the property is set in the parent class\n    //  - isUndefined(...) - this may yield a false positive when the property is there, but not set.\n    //    Additionally, on pre-defined getters it may make a call\n    //  - key in that - Does not need to be combined with either of the above and checks the full chain\n    if (!(name in that)) {\n        Object.defineProperty(that, name, {\n            enumerable: true,\n            // Unlike in lazy, we always call into the upper function, i.e. this method\n            // does not cache old values (it is expected to be used for dynamic values)\n            get: function () {\n                return getter(key, index, this);\n            }\n        });\n    }\n}\n/**\n * @name objectProperties\n * @summary Assign get properties on the input object\n */\nexport function objectProperties(that, keys, getter, getName) {\n    for (let i = 0, count = keys.length; i < count; i++) {\n        objectProperty(that, keys[i], getter, getName, i);\n    }\n}\n","/**\n * @name objectSpread\n * @summary Concats all sources into the destination\n */\nexport function objectSpread(dest, ...sources) {\n    for (let i = 0, count = sources.length; i < count; i++) {\n        const src = sources[i];\n        if (src) {\n            if (typeof src.entries === 'function') {\n                for (const [key, value] of src.entries()) {\n                    dest[key] = value;\n                }\n            }\n            else {\n                Object.assign(dest, src);\n            }\n        }\n    }\n    return dest;\n}\n","\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_public_path__;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += typeof window !=='undefined' ? window.location.protocol + '//' + window.location.host : 'https://1key.so';\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\nexport const packageInfo = { name: '@polkadot/util', path: (({ url: getAbsoluteUrl('ules/@polkadot/util/packageInfo.js') }) && ({ url: getAbsoluteUrl('ules/@polkadot/util/packageInfo.js') }).url) ? new URL(({ url: getAbsoluteUrl('ules/@polkadot/util/packageInfo.js') }).url).pathname.substring(0, new URL(({ url: getAbsoluteUrl('ules/@polkadot/util/packageInfo.js') }).url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '12.6.2' };\n","export const CC_TO_UP = new Array(256);\nexport const CC_TO_LO = new Array(256);\nfor (let i = 0, count = CC_TO_UP.length; i < count; i++) {\n    CC_TO_LO[i] = String.fromCharCode(i).toLowerCase();\n    CC_TO_UP[i] = String.fromCharCode(i).toUpperCase();\n}\n/** @internal */\nfunction formatAllCaps(w) {\n    return w.slice(0, w.length - 1).toLowerCase() + CC_TO_UP[w.charCodeAt(w.length - 1)];\n}\n/**\n * @internal\n *\n * Inspired by https://stackoverflow.com/a/2970667\n *\n * This is not as optimal as the original SO answer (we split into per-word),\n * however it does pass the tests (which the SO version doesn't) and is still\n * a major improvement over the original camelcase npm package -\n *\n *   camelcase: 20.88 μs/op\n *        this:  1.00 μs/op\n *\n * Caveat of this: only Ascii, but acceptable for the intended usecase\n */\nfunction converter(format) {\n    return (value) => {\n        const parts = value\n            // replace all separators (including consequtive) with spaces\n            .replace(/[-_., ]+/g, ' ')\n            // we don't want leading or trailing spaces\n            .trim()\n            // split into words\n            .split(' ');\n        let result = '';\n        for (let i = 0, count = parts.length; i < count; i++) {\n            const w = parts[i];\n            // apply the formatting\n            result += format(/^[\\dA-Z]+$/.test(w)\n                // all full uppercase + letters are changed to lowercase\n                ? w.toLowerCase()\n                // all consecutive capitals + letters are changed to lowercase\n                // e.g. UUID64 -> uuid64, while preserving splits, eg. NFTOrder -> nftOrder\n                : w.replace(/^[\\dA-Z]{2,}[^a-z]/, formatAllCaps), i);\n        }\n        return result;\n    };\n}\n/**\n * @name stringCamelCase\n * @summary Convert a dash/dot/underscore/space separated Ascii string/String to camelCase\n */\nexport const stringCamelCase = /*#__PURE__*/ converter((w, i) => \n(i ? CC_TO_UP[w.charCodeAt(0)] : CC_TO_LO[w.charCodeAt(0)]) + w.slice(1));\n/**\n * @name stringPascalCase\n * @summary Convert a dash/dot/underscore/space separated Ascii string/String to PascalCase\n */\nexport const stringPascalCase = /*#__PURE__*/ converter((w) => \nCC_TO_UP[w.charCodeAt(0)] + w.slice(1));\n","import { CC_TO_LO, CC_TO_UP } from './camelCase.js';\n/** @internal */\nfunction converter(map) {\n    return (value) => value\n        ? map[value.charCodeAt(0)] + value.slice(1)\n        : '';\n}\n/**\n * @name stringLowerFirst\n * @summary Lowercase the first letter of a string\n * @description\n * Lowercase the first letter of a string\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringLowerFirst } from '@polkadot/util';\n *\n * stringLowerFirst('ABC'); // => 'aBC'\n * ```\n */\nexport const stringLowerFirst = /*#__PURE__*/ converter(CC_TO_LO);\n/**\n * @name stringUpperFirst\n * @summary Uppercase the first letter of a string\n * @description\n * Lowercase the first letter of a string\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringUpperFirst } from '@polkadot/util';\n *\n * stringUpperFirst('abc'); // => 'Abc'\n * ```\n */\nexport const stringUpperFirst = /*#__PURE__*/ converter(CC_TO_UP);\n","import { u8aToHex } from '../u8a/toHex.js';\nimport { stringToU8a } from './toU8a.js';\n/**\n * @name stringToHex\n * @summary Creates a hex string from a utf-8 string\n * @description\n * String input values return the actual encoded hex value.\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringToHex } from '@polkadot/util';\n *\n * stringToU8a('hello'); // 0x68656c6c6f\n * ```\n */\nexport function stringToHex(value) {\n    return u8aToHex(stringToU8a(value));\n}\n","import { isBigInt } from './is/bigInt.js';\n/** @internal */\nfunction replacer(_, v) {\n    return isBigInt(v)\n        ? v.toString()\n        : v;\n}\n/**\n * @name stringify\n * @summary Performs a JSON.stringify, with BigInt handling\n * @description A wrapper for JSON.stringify that handles BigInt values transparently, converting them to string. No differences from the native JSON.stringify function otherwise.\n */\nexport function stringify(value, space) {\n    return JSON.stringify(value, replacer, space);\n}\n","import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aCmp\n * @summary Compares two Uint8Arrays for sorting.\n * @description\n * For `UInt8Array` (or hex string) input values returning -1, 0 or +1\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aCmp } from '@polkadot/util';\n *\n * u8aCmp(new Uint8Array([0x67, 0x65]), new Uint8Array([0x68, 0x65])); // -1\n * u8aCmp(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // 0\n * u8aCmp(new Uint8Array([0x69, 0x65]), new Uint8Array([0x68, 0x65])); // +1\n * ```\n */\nexport function u8aCmp(a, b) {\n    const u8aa = u8aToU8a(a);\n    const u8ab = u8aToU8a(b);\n    let i = 0;\n    while (true) {\n        const overA = i >= u8aa.length;\n        const overB = i >= u8ab.length;\n        if (overA && overB) {\n            // both ends reached\n            return 0;\n        }\n        else if (overA) {\n            // a has no more data, b has data\n            return -1;\n        }\n        else if (overB) {\n            // b has no more data, a has data\n            return 1;\n        }\n        else if (u8aa[i] !== u8ab[i]) {\n            // the number in this index doesn't match\n            // (we don't use u8aa[i] - u8ab[i] since that doesn't match with localeCompare)\n            return u8aa[i] > u8ab[i]\n                ? 1\n                : -1;\n        }\n        i++;\n    }\n}\n","/**\n * @name u8aEmpty\n * @summary Tests for a `Uint8Array` for emptyness\n * @description\n * Checks to see if the input `Uint8Array` has zero length or contains all 0 values.\n */\nexport function u8aEmpty(value) {\n    const len = value.length | 0;\n    // on smaller sizes, the byte-by-byte compare is faster than allocating\n    // another object for DataView (on very large arrays the DataView is faster)\n    for (let i = 0; i < len; i++) {\n        if (value[i] | 0) {\n            return false;\n        }\n    }\n    return true;\n}\n","/**\n * @name u8aFixLength\n * @summary Shifts a Uint8Array to a specific bitLength\n * @description\n * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aFixLength } from '@polkadot/util';\n *\n * u8aFixLength('0x12') // => 0x12\n * u8aFixLength('0x12', 16) // => 0x0012\n * u8aFixLength('0x1234', 8) // => 0x12\n * ```\n */\nexport function u8aFixLength(value, bitLength = -1, atStart = false) {\n    const byteLength = Math.ceil(bitLength / 8);\n    if (bitLength === -1 || value.length === byteLength) {\n        return value;\n    }\n    else if (value.length > byteLength) {\n        return value.subarray(0, byteLength);\n    }\n    const result = new Uint8Array(byteLength);\n    result.set(value, atStart ? 0 : (byteLength - value.length));\n    return result;\n}\n","import { u8aCmp } from './cmp.js';\n/**\n * @name u8aSorted\n * @summary Sorts an array of Uint8Arrays\n * @description\n * For input `UInt8Array[]` return the sorted result\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aSorted} from '@polkadot/util';\n *\n * u8aSorted([new Uint8Array([0x69]), new Uint8Array([0x68])]); // [0x68, 0x69]\n * ```\n */\nexport function u8aSorted(u8as) {\n    return u8as.sort(u8aCmp);\n}\n","import { BigInt } from '@polkadot/x-bigint';\nimport { _1n } from '../bi/consts.js';\nconst U8_MAX = BigInt(256);\nconst U16_MAX = BigInt(256 * 256);\nconst U64_MAX = BigInt('0x10000000000000000');\n/**\n * @name u8aToBigInt\n * @summary Creates a BigInt from a Uint8Array object.\n */\nexport function u8aToBigInt(value, { isLe = true, isNegative = false } = {}) {\n    // slice + reverse is expensive, however SCALE is LE by default so this is the path\n    // we are most interested in (the BE is added for the sake of being comprehensive)\n    if (!isLe) {\n        value = value.slice().reverse();\n    }\n    const count = value.length;\n    if (isNegative && count && (value[count - 1] & 0x80)) {\n        switch (count) {\n            case 0:\n                return BigInt(0);\n            case 1:\n                return BigInt(((value[0] ^ 255) * -1) - 1);\n            case 2:\n                return BigInt((((value[0] + (value[1] << 8)) ^ 65535) * -1) - 1);\n            case 4:\n                return BigInt((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) * -1) - 1);\n        }\n        const dvI = new DataView(value.buffer, value.byteOffset);\n        if (count === 8) {\n            return dvI.getBigInt64(0, true);\n        }\n        let result = BigInt(0);\n        const mod = count % 2;\n        for (let i = count - 2; i >= mod; i -= 2) {\n            result = (result * U16_MAX) + BigInt(dvI.getUint16(i, true) ^ 0xffff);\n        }\n        if (mod) {\n            result = (result * U8_MAX) + BigInt(value[0] ^ 0xff);\n        }\n        return (result * -_1n) - _1n;\n    }\n    switch (count) {\n        case 0:\n            return BigInt(0);\n        case 1:\n            return BigInt(value[0]);\n        case 2:\n            return BigInt(value[0] + (value[1] << 8));\n        case 4:\n            return BigInt(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216));\n    }\n    const dvI = new DataView(value.buffer, value.byteOffset);\n    switch (count) {\n        case 8:\n            return dvI.getBigUint64(0, true);\n        case 16:\n            return (dvI.getBigUint64(8, true) * U64_MAX) + dvI.getBigUint64(0, true);\n        default: {\n            let result = BigInt(0);\n            const mod = count % 2;\n            for (let i = count - 2; i >= mod; i -= 2) {\n                result = (result * U16_MAX) + BigInt(dvI.getUint16(i, true));\n            }\n            if (mod) {\n                result = (result * U8_MAX) + BigInt(value[0]);\n            }\n            return result;\n        }\n    }\n}\n","import { BN } from '../bn/bn.js';\n/**\n * @name u8aToBn\n * @summary Creates a BN from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.\n * @param value The value to convert\n * @param options Options to pass while converting\n * @param options.isLe Convert using Little Endian (default)\n * @param options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToBn } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\nexport function u8aToBn(value, { isLe = true, isNegative = false } = {}) {\n    // slice + reverse is expensive, however SCALE is LE by default so this is the path\n    // we are most interested in (the BE is added for the sake of being comprehensive)\n    if (!isLe) {\n        value = value.slice().reverse();\n    }\n    const count = value.length;\n    // shortcut for <= u48 values - in this case the manual conversion\n    // here seems to be more efficient than passing the full array\n    if (isNegative && count && (value[count - 1] & 0x80)) {\n        // Most common case i{8, 16, 32} default LE SCALE-encoded\n        // For <= 32, we also optimize the xor to a single op\n        switch (count) {\n            case 0:\n                return new BN(0);\n            case 1:\n                return new BN(((value[0] ^ 255) * -1) - 1);\n            case 2:\n                return new BN((((value[0] + (value[1] << 8)) ^ 65535) * -1) - 1);\n            case 3:\n                return new BN((((value[0] + (value[1] << 8) + (value[2] << 16)) ^ 16777215) * -1) - 1);\n            case 4:\n                // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n                // 32-bit, in the case where the top-most bit is set this yields a negative value\n                return new BN((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) * -1) - 1);\n            case 5:\n                return new BN(((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) + ((value[4] ^ 0xff) * 4294967296)) * -1) - 1);\n            case 6:\n                return new BN(((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) + (((value[4] + (value[5] << 8)) ^ 65535) * 4294967296)) * -1) - 1);\n            default:\n                return new BN(value, 'le').fromTwos(count * 8);\n        }\n    }\n    // Most common case - u{8, 16, 32} default LE SCALE-encoded\n    //\n    // There are some slight benefits in unrolling this specific loop,\n    // however it comes with diminishing returns since here the actual\n    // `new BN` does seem to take up the bulk of the time\n    switch (count) {\n        case 0:\n            return new BN(0);\n        case 1:\n            return new BN(value[0]);\n        case 2:\n            return new BN(value[0] + (value[1] << 8));\n        case 3:\n            return new BN(value[0] + (value[1] << 8) + (value[2] << 16));\n        case 4:\n            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n            // 32-bit, in the case where the top-most bit is set this yields a negative value\n            return new BN(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216));\n        case 5:\n            return new BN(value[0] + (value[1] << 8) + (value[2] << 16) + ((value[3] + (value[4] << 8)) * 16777216));\n        case 6:\n            return new BN(value[0] + (value[1] << 8) + (value[2] << 16) + ((value[3] + (value[4] << 8) + (value[5] << 16)) * 16777216));\n        default:\n            return new BN(value, 'le');\n    }\n}\n","/**\n * @name u8aToFloat\n * @description Converts a Uint8Array value into the float (either 32 or 64-bit)\n * representation.\n */\nexport function u8aToFloat(value, { bitLength = 32, isLe = true } = {}) {\n    if (bitLength !== 32 && bitLength !== 64) {\n        throw new Error('Invalid bitLength provided, expected 32 or 64');\n    }\n    else if (value.length < (bitLength / 8)) {\n        throw new Error(`Invalid input buffer provided, expected at least ${bitLength / 8} bytes, found ${value.length}`);\n    }\n    const dv = new DataView(value.buffer, value.byteOffset);\n    return bitLength === 32\n        ? dv.getFloat32(0, isLe)\n        : dv.getFloat64(0, isLe);\n}\n","/**\n * @name u8aToNumber\n * @summary Creates a number from a Uint8Array object.\n */\nexport function u8aToNumber(value, { isLe = true, isNegative = false } = {}) {\n    // slice + reverse is expensive, however SCALE is LE by default so this is the path\n    // we are most interested in (the BE is added for the sake of being comprehensive)\n    if (!isLe) {\n        value = value.slice().reverse();\n    }\n    const count = value.length;\n    // When the value is a i{8, 16, 24, 32, 40, 40} values and the top-most bit\n    // indicates a signed value, we use a two's complement conversion. If one of these\n    // flags are not set, we just do a normal unsigned conversion (the same shortcut\n    // applies in both the u8aTo{BigInt, Bn} conversions as well)\n    if (isNegative && count && (value[count - 1] & 0x80)) {\n        switch (count) {\n            case 0:\n                return 0;\n            case 1:\n                return (((value[0] ^ 255) * -1) - 1);\n            case 2:\n                return ((((value[0] + (value[1] << 8)) ^ 65535) * -1) - 1);\n            case 3:\n                return ((((value[0] + (value[1] << 8) + (value[2] << 16)) ^ 16777215) * -1) - 1);\n            case 4:\n                // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n                // 32-bit, in the case where the top-most bit is set this yields a negative value\n                return ((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) * -1) - 1);\n            case 5:\n                return (((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) + ((value[4] ^ 0xff) * 4294967296)) * -1) - 1);\n            case 6:\n                return (((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216)) ^ 4294967295) + (((value[4] + (value[5] << 8)) ^ 65535) * 4294967296)) * -1) - 1);\n            default:\n                throw new Error('Value more than 48-bits cannot be reliably converted');\n        }\n    }\n    switch (count) {\n        case 0:\n            return 0;\n        case 1:\n            return value[0];\n        case 2:\n            return value[0] + (value[1] << 8);\n        case 3:\n            return value[0] + (value[1] << 8) + (value[2] << 16);\n        case 4:\n            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to\n            // 32-bit, in the case where the top-most bit is set this yields a negative value\n            return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 16777216);\n        case 5:\n            return value[0] + (value[1] << 8) + (value[2] << 16) + ((value[3] + (value[4] << 8)) * 16777216);\n        case 6:\n            return value[0] + (value[1] << 8) + (value[2] << 16) + ((value[3] + (value[4] << 8) + (value[5] << 16)) * 16777216);\n        default:\n            throw new Error('Value more than 48-bits cannot be reliably converted');\n    }\n}\n","import { u8aConcatStrict } from './concat.js';\nimport { u8aEq } from './eq.js';\nimport { u8aToU8a } from './toU8a.js';\n/** @internal */\nexport const U8A_WRAP_ETHEREUM = /*#__PURE__*/ u8aToU8a('\\x19Ethereum Signed Message:\\n');\n/** @internal */\nexport const U8A_WRAP_PREFIX = /*#__PURE__*/ u8aToU8a('<Bytes>');\n/** @internal */\nexport const U8A_WRAP_POSTFIX = /*#__PURE__*/ u8aToU8a('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\n/** @internal */\nexport function u8aIsWrapped(u8a, withEthereum) {\n    return ((u8a.length >= WRAP_LEN &&\n        u8aEq(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) &&\n        u8aEq(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX)) ||\n        (withEthereum &&\n            u8a.length >= U8A_WRAP_ETHEREUM.length &&\n            u8aEq(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM)));\n}\n/**\n * @name u8aUnwrapBytes\n * @description Removes all <Bytes>...</Bytes> wrappers from the supplied value\n */\nexport function u8aUnwrapBytes(bytes) {\n    const u8a = u8aToU8a(bytes);\n    // we don't want to unwrap Ethereum-style wraps\n    return u8aIsWrapped(u8a, false)\n        ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length)\n        : u8a;\n}\n/**\n * @name u8aWrapBytes\n * @description\n * Adds a <Bytes>...</Bytes> wrapper to the supplied value, if\n * - We don't already have a Bytes wrapper\n * - The message is not an Ethereum-style message\n */\nexport function u8aWrapBytes(bytes) {\n    const u8a = u8aToU8a(bytes);\n    return u8aIsWrapped(u8a, true)\n        ? u8a\n        : u8aConcatStrict([U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX]);\n}\n","import { xglobal } from '@polkadot/x-global';\nimport { isFunction } from './is/function.js';\nconst DEDUPE = 'Either remove and explicitly install matching versions or dedupe using your package manager.\\nThe following conflicting packages were found:';\nexport const POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG = 'POLKADOTJS_DISABLE_ESM_CJS_WARNING';\n/** @internal */\nfunction getEntry(name) {\n    const _global = xglobal;\n    if (!_global.__polkadotjs) {\n        _global.__polkadotjs = {};\n    }\n    if (!_global.__polkadotjs[name]) {\n        _global.__polkadotjs[name] = [];\n    }\n    return _global.__polkadotjs[name];\n}\n/** @internal */\nfunction formatDisplay(all, fmt) {\n    let max = 0;\n    for (let i = 0, count = all.length; i < count; i++) {\n        max = Math.max(max, all[i].version.length);\n    }\n    return all\n        .map((d) => `\\t${fmt(d.version.padEnd(max), d).join('\\t')}`)\n        .join('\\n');\n}\n/** @internal */\nfunction formatInfo(version, { name }) {\n    return [\n        version,\n        name\n    ];\n}\n/** @internal */\nfunction formatVersion(version, { path, type }) {\n    let extracted;\n    if (path && path.length >= 5) {\n        const nmIndex = path.indexOf('node_modules');\n        extracted = nmIndex === -1\n            ? path\n            : path.substring(nmIndex);\n    }\n    else {\n        extracted = '<unknown>';\n    }\n    return [\n        `${`${type || ''}`.padStart(3)} ${version}`,\n        extracted\n    ];\n}\n/** @internal */\nfunction getPath(infoPath, pathOrFn) {\n    if (infoPath) {\n        return infoPath;\n    }\n    else if (isFunction(pathOrFn)) {\n        try {\n            return pathOrFn() || '';\n        }\n        catch {\n            return '';\n        }\n    }\n    return pathOrFn || '';\n}\n/** @internal */\nfunction warn(pre, all, fmt) {\n    console.warn(`${pre}\\n${DEDUPE}\\n${formatDisplay(all, fmt)}`);\n}\n/**\n * @name detectPackage\n * @summary Checks that a specific package is only imported once\n * @description A `@polkadot/*` version detection utility, checking for one occurrence of a package in addition to checking for dependency versions.\n */\nexport function detectPackage({ name, path, type, version }, pathOrFn, deps = []) {\n    if (!name.startsWith('@polkadot')) {\n        throw new Error(`Invalid package descriptor ${name}`);\n    }\n    const entry = getEntry(name);\n    entry.push({ path: getPath(path, pathOrFn), type, version });\n    // if we have more than one entry at DIFFERENT version types then warn. If there is more than one entry at the same\n    // version and ESM/CJS dual warnings are disabled, then do not display warnings\n    const entriesSameVersion = entry.every((e) => e.version === version);\n    const esmCjsWarningDisabled = xglobal.process?.env?.[POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG] === '1';\n    const multipleEntries = entry.length !== 1;\n    const disableWarnings = esmCjsWarningDisabled && entriesSameVersion;\n    if (multipleEntries && !disableWarnings) {\n        warn(`${name} has multiple versions, ensure that there is only one installed.`, entry, formatVersion);\n    }\n    else {\n        const mismatches = deps.filter((d) => d && d.version !== version);\n        if (mismatches.length) {\n            warn(`${name} requires direct dependencies exactly matching version ${version}.`, mismatches, formatInfo);\n        }\n    }\n}\n"],"names":["Object","defineProperty","exports","value","createSignedTx","__1","unsigned","signature","options","metadataRpc","registry","asCallsOnlyArg","asSpecifiedCallsOnlyV14","signedExtensions","userExtensions","metadata","createMetadata","setMetadata","extrinsic","createType","method","version","addSignature","address","toHex","createSigningPayload","assetId","includes","Error","createSigningPayloadToU8a","extrinsicPayloadU8a","toU8a","length","hash","encodeUnsignedTransaction","getTxHash","util_crypto_1","signedTx","blake2AsHex","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","decode","decodeSignedTx_1","decodeSigningPayload_1","decodeUnsignedTx_1","data","decodedInfo","decodeSigningPayload","decodeSignedTx","decodeUnsignedTx","util_1","tx","hexToU8a","isSigned","methodCall","toTxMethod","tip","toNumber","_error","toString","signer","eraPeriod","era","asMortalEra","period","nonce","create_1","Extrinsic_1","signingPayload","payload","createTypeUnsafe","EXTRINSIC_VERSION","isMortalEra","metadataHash","inner","isSome","blockHash","genesisHash","specVersion","transactionVersion","decodeUnsignedHexTx","encodedUnsignedTx","decodedTx","toJSON","isImmortalEra","hexToNumber","blockNumber","construct","getSpecTypes","defineMethod","getRegistryBase","construct_1","decode_1","metadata_1","method_1","types_known_1","signingPayloadToU8a","txHash","createDecoratedConstants","createDecoratedTx","decorate_1","createMetadata_1","decorateExtrinsics","asLatest","decorateConstants","_a","_b","__importDefault","mod","createMetadataUnmemoized","types_1","MetadataVersioned_1","memoizee_1","toSpecifiedCallsOnlyV14_1","Metadata","MetadataVersioned","magicNumber","toSpecifiedCallsOnlyV14","asV14","asCallsOnly","default","max","isBrowser","TXWRAPPER_METADATA_CACHE_MAX","parseInt","maxAge","TXWRAPPER_METADATA_CACHE_MAX_AGE","chainProperties","specTypes","typesBundle","additionalTypes","TypeRegistry","generatedMetadata","register","setKnownTypes","setChainProperties","removeDocs","type","def","isVariant","mapVariant","asVariant","variants","map","name","fields","index","removeDocsFromFields","docs","typeDef","Variant","objectSpread","isComposite","Composite","asComposite","typeName","tryAddType","lookupId","cache","stack","lookupStr","has","add","push","findLookupIdsInTypeDef","forEach","f","v","isSequence","asSequence","isArray","asArray","isTuple","asTuple","id","isCompact","asCompact","isBitSequence","asBitSequence","bitStoreType","bitOrderType","findLookupIdsInParams","params","unwrap","latestMetadata","includePallets","typeCache","Set","pallets","filter","toLowerCase","calls","pallet","storage","items","item","isPlain","asPlain","isMap","key","asMap","events","constants","c","errors","findLookupIdsInPallet","unwrapOr","extrinsicTypeId","val","str","pop","idx","parseFloat","lookup","types","lookupTypes","createEra","MethodErrorMessages","DEFAULTS","InvalidEraPeriodTooLow","InvalidEraPeriodTooHigh","kind","current","info","InvalidPalletOrMethod","methodFunction","meta","args","arg","stringCamelCase","extrinsicEra","mode","types_2","types_codec_1","argsDef","JSON","parse","Type","keys","reduce","accumulator","jsonArg","codec","Compact","UInt","AbstractInt","section","deriveAddress","keyring_1","TYPE_ADDRESS","ecdsa","blake2AsU8a","ed25519","sr25519","publicKey","ss58Format","scheme","raw","isHex","input","Keyring","encodeAddress","importPrivateKey","privateKey","keyring","setSS58Format","addFromSeed","window","PolkadotSS58Format","__setModuleDefault","__importStar","result","getRegistry","methods","txwrapper_core_1","txwrapper_substrate_1","polkadotMethods","balances","utility","proxy","democracy","session","staking","system","vesting","multisig","crowdloan","assets","xcmPallet","KNOWN_CHAIN_PROPERTIES","kusama","tokenDecimals","tokenSymbol","polkadot","westend","statemint","statemine","westmint","specName","chainName","properties","addMemo","contribute","withdraw","limitedReserveTransferAssets","limitedTeleportAssets","reserveTransferAssets","teleportAssets","approveTransfer","cancelApproval","transfer","transferApproved","transferKeepAlive","transferAll","transferAllowDeath","vote","nominationPools","foreignAssets","approveAsMulti","asMulti","cancelAsMulti","bondExtra","bondExtraOther","chill","claimCommission","claimPayout","claimPayoutOther","createWithPoolId","join","nominate","poolWithdrawUnbonded","setClaimPermission","setCommission","setCommissionChangeRate","setCommissionMax","setConfigs","setState","unbond","updateRoles","withdrawUnbonded","addProxy","announce","createPure","killPure","proxyAnnounced","rejectAnnouncement","removeProxies","removeProxy","setKeys","proof","bond","payoutStakers","rebond","setController","setPayee","validate","remark","asDerivative","batch","batchAll","vest","vestOther","TX_EMPTY_SIZE","TX_INPUT_BASE","TX_INPUT_PUBKEYHASH","TX_OUTPUT_BASE","TX_OUTPUT_PUBKEYHASH","OP_RETURN_OVERHEAD","inputBytes","script","outputBytes","output","dustThreshold","feeRate","transactionBytes","inputs","outputs","a","x","uintOrNaN","NaN","isFinite","Math","floor","sumOrNaN","range","BLANK_OUTPUT","module","finalize","bytesAccum","feeAfterExtraOutput","remainderAfterExtraOutput","concat","fee","sumForgiving","getAbsoluteUrl","relativeUrl","publicPath","url","indexOf","location","protocol","host","packageInfo","path","URL","pathname","substring","lastIndexOf","PKCS8_DIVIDER","Uint8Array","PKCS8_HEADER","PUB_LENGTH","SEC_LENGTH","SEED_LENGTH","SEED_OFFSET","SIG_TYPE_NONE","TYPE_FROM_SEED","ethereum","TYPE_PREFIX","TYPE_SIGNATURE","isLocked","secretKey","vrfHash","context","extra","createPair","toSS58","encoded","encTypes","decodePkcs8","passphrase","userEncoded","decoded","decodePair","encrypted","_encType","encType","Array","decrypted","header","subarray","divOffset","divider","pubOffset","pair","recode","encodePair","password","salt","addressRaw","slice","derive","suri","derived","encodePkcs8","lock","setMeta","additional","sign","message","withType","toJson","pairToJson","isEncrypted","unlock","verify","signerPublic","isValid","vrfSign","vrfVerify","vrfResult","DEV_PHRASE","DEV_SEED","Pairs","__internal__map","all","values","remove","PairFromSeed","seed","pairToPublic","__internal__pairs","__internal__type","__internal__ss58","decodeAddress","constructor","pairs","getPairs","publicKeys","getPublicKeys","addPair","addFromAddress","ignoreChecksum","addFromJson","json","createFromJson","addFromMnemonic","mnemonic","addFromUri","addFromPair","createFromPair","createFromUri","encoding","content","cryptoType","_suri","startsWith","derivePath","phrase","isPhraseHex","parts","split","padEnd","getPair","removePair","ss58","PAIRSSR25519","s","PAIRSETHEREUM","createMeta","isTesting","replace","createTestKeyring","isDerived","_passphrase","_encoded","_meta","_message","_signature","_context","_extra","_vrfResult","createTestPairs","nobody","AbstractArray","createdAtHash","initialU8aLength","isStorageFallback","Symbol","species","super","encodedLength","count","total","i","isEmpty","eq","other","inspect","inspectInner","outer","toArray","from","toHuman","isExtended","disableAscii","toPrimitive","isBare","toU8aInner","AbstractBase","__internal__raw","isLe","valueOf","MUL_P","FORMATTERS","decodeAbstractInt","isNegative","Number","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","isToBn","toBn","isUnsigned","__internal__bitLength","bitLength","isNeg","maxBits","toRawType","isZero","isMax","b","toBigInt","BigInt","_isExpanded","rawType","decimals","chainDecimals","withSi","withUnit","chainTokens","divisor","find","toPercentage","mul","div","toFixed","onlyHex","createClassUnsafe","base","_isBare","__internal__Type","definition","setDefinition","decodedLength","decodeCompact","bn","d","getClassName","DoNotConstruct","__internal__neverError","extractDef","_def","isBasic","isIndexed","isRustEnum","defValues","some","every","Types","entries","getEntryType","checkIdx","createFromU8a","createFromValue","decodeFromJSON","keyLower","error","Enum","__internal__def","__internal__entryIndex","__internal__indexes","__internal__isBasic","__internal__isIndexed","decodeEnum","u8a","asKeys","isKeys","_","self","isNone","defIndexes","defKeys","entry","_toRawStruct","out","_enum","Int","Null","None","Option","decodeOption","wrapped","set","defaultValue","unwrapOrDefault","Result","Ok","Err","asErr","isErr","asOk","isOk","Tuple","__internal__Types","Classes","decodeTuple","T","l","decodeVec","startAt","Vec","decodeFrom","decodeVecLength","check","VecFixed","BTreeMap","keyType","valType","decodeSet","ValClass","decodeSetFromU8a","offset","decodeSetFromSet","BTreeSet","__internal__ValClass","rawValue","len","size","strings","decodeBitVec","decodeBitVecU8a","ceil","BitVec","__internal__decodedLength","__internal__isMsb","isMsb","toBoolArray","off","j","reverse","bitVec","MAX_LENGTH","Bytes","decodeBytesU8a","clength","HashMap","EMPTY","Linkage","previous","with","next","withKey","decodeMapFromMap","KeyClass","Map","isComplex","decodeMap","decodeMapFromU8a","CodecMap","__internal__KeyClass","isAscii","toUtf8","OptionBool","decodeU8a","isFalse","isTrue","Range","__internal__rangeName","rangeName","start","end","RangeInclusive","setOverride","U8aFixed","decodeU8aFixed","byteLength","WrapperKeepOpaque","__internal__decoded","__internal__opaqueName","opaqueName","decodeRaw","instance","isDecoded","WrapperOpaque","VecAny","BITLENGTH","U8A_OPTS","decodeDate","Date","CodecDate","getTime","toISOString","bool","Boolean","Float","Json","decodeJson","getT","Raw","isUtf8","_isExtended","text","encodeSet","setValues","ior","decodeSetNumber","_value","and","computed","decodeSetArray","CodecSet","__internal__allowed","__internal__byteLength","valueEncoded","sort","_set","noopSetDefinition","Struct","__internal__jsonMap","jsonMap","typeMap","decodeStructFromObject","jsonObj","typeofArray","typeofMap","jsonKey","assign","e","ecount","getAtIndex","Text","String","__internal__override","decodeText","override","f32","__FloatType","f64","i128","__IntType","i16","i256","i32","i64","i8","isize","u128","__UIntType","u16","u256","u32","u64","u8","usize","compareArray","compareMapArray","notEntry","hasMismatch","compareMap","compareSetArray","compareSet","formatFailure","fn","_result","decodeU8aStruct","decodeU8aVec","BOUNDED","ALLOWED_BOXES","BOX_PRECEDING","mappings","alias","cleanupCompact","findClosing","removeExtensions","removeTraits","from1","from2","from3","from4","from5","from6","lastIndex","removePairOf","replacer","replaceTagWith","removeWrap","removeGenerics","box","flattenSingleTuple","removeColons","trim","depth","src","dest","withChecks","RegExp","to","matcher","isSized","tag","sanitizeMap","sanitize","startValue","memoized","isArrayLike","isEnum","isOption","isNumberLike","checkForDuplicates","container","seen","hex","sortAsc","cmp","sortArray","sortRes","minLen","min","sortSet","sortMap","keyA","keyB","typeToConstructor","typesToConstructors","mapToTypeMap","typesToMap","hasEq","getTypeDefType","lookupName","getSubDefArray","sub","getSubType","getSubDef","getTypeClassMap","subs","getTypeClassArray","createInt","Clazz","displayName","createHashMap","valueType","createWithSub","infoMapping","_registry","Plain","getOrUnknown","Si","getTypeClass","getTypeDef","constructTypeClass","__fallbackType","fallbackType","getUnsafe","isLookupType","checkInstance","created","initType","isFallback","isOptional","isPedantic","checkPedantic","firstError","TypeDefInfo","stringIdentity","INFO_WRAP","paramsNotation","transform","encodeWithParams","encodeTypeDef","encodeSubTypes","asEnum","names","n","encoders","lookupIndex","createLookupType","_typeDef","_bitLength","_alias","encodeType","withLookup","withTypeString","KNOWN_INTERNALS","getTypeString","typeOrObj","_decodeEnum","details","_decodeTuple","subType","_decodeAnyInt","clazz","strLength","hasWrapper","nestedExtraction","_decodeFixedVec","vecType","_decodeStruct","parsed","_fallback","_decodeSet","_decodeInt","_decodeUInt","_decodeDoNotConstruct","NAME_LENGTH","wrappedExtraction","extractSubType","_type","nested","typeSplit","t","XCM_MAPPINGS","mapXcmTypes","typesChain","sharedTypes","AnchorData","anchoredBlock","docRoot","DispatchErrorModule","PreCommitData","expirationBlock","identity","signingRoot","Fee","price","MultiAccountData","deposit","depositor","signatories","threshold","ChainId","DepositNonce","ResourceId","RegistryId","TokenId","AssetId","registryId","tokenId","AssetInfo","MintInfo","anchorId","proofs","staticHashes","Proof","leafHash","sortedHashes","ProofMint","hashes","property","RegistryInfo","ownerCanBurn","ProxyType","standaloneTypes","AccountInfo","Address","LookupSource","Multiplier","RefCount","versioned","minmax","CompactAssignments","RawSolution","Keys","Weight","addrIndicesTypes","ValidatorPrefs","addrAccountIdTypes","Any","NonTransfer","Governance","Staking","UnusedSudoBalances","IdentityJudgement","CancelProxy","Auction","FullIdentification","TAssetBalance","typesSpec","BalanceLock","DispatchError","DispatchInfo","Heartbeat","IdentityInfo","OpenTip","ReferendumInfo","Scheduled","SlashingSpans","StakingLedger","Votes","node","rococo","shell","TAssetConversion","upgrades","NET_EXTRA","mapRaw","network","versions","chain","apis","withNames","filterVersions","getSpecExtensions","knownTypes","spec","_specVersion","getSpecHasher","hasher","getSpecRpc","rpc","getSpecRuntime","runtime","getSpecAlias","typesAlias","getUpgradeVersion","known","u","last","gt","lte","createClass","lazyVariants","getName","creator","getSiType","emptyCheck","LimitParathreadCommits","OnlyStakingAndClaims","PrevalidateAttests","RestrictFunctionality","TransactionCallFilter","ValidateDoubleVoteReports","DisallowSigned","CheckMortality","ChargeTransactionPayment","substrate","CheckBlockGasLimit","CheckEra","CheckGenesis","CheckMetadataHash","CheckNonZeroSender","CheckNonce","CheckSpecVersion","CheckTxVersion","CheckVersion","CheckWeight","LockStakingStatus","SkipCheckIfFeeless","ValidateEquivocationReport","allExtensions","ChargeAssetTxPayment","fallbackExtensions","expandExtensionTypes","extensions","DEFAULT_FIRST_CALL_IDX","logger","sortDecimalStrings","valueToString","getFieldArgs","clearRecord","record","getVariantStringIdx","__internal__chainProperties","__internal__classes","__internal__definitions","__internal__firstCallIndex","__internal__hasher","__internal__knownTypes","__internal__lookup","__internal__metadata","__internal__metadataVersion","__internal__signedExtensions","__internal__unknownTypes","__internal__userExtensions","__internal__knownDefaults","__internal__knownDefaultsEntries","__internal__knownDefinitions","__internal__metadataCalls","__internal__metadataErrors","__internal__metadataEvents","__internal__moduleMap","definitions","allKnown","allDecimals","chainIsEthereum","isEthereum","chainSS58","allTokens","formatBalance","getDefaults","unit","firstCallIndex","test","assert","unknownTypes","clearCache","findMetaCall","callIndex","findMetaError","errorIndex","findMetaEvent","eventIndex","withUnknown","knownTypeDef","BaseType","warn","getChainProperties","getDefinition","getModuleInstances","moduleName","instances","getOrThrow","getSignedExtensionExtra","getSignedExtensionTypes","hasClass","hasDef","hasType","arg1","arg2","__internal__registerObject","obj","stringify","delete","setHasher","setLookup","__internal__registerLookup","weightv2","refTime","proofSize","noInitWarn","injectExtrinsics","mapping","filtered","sectionIndex","sectionName","allCalls","lazy","variant","palletIdx","findIndex","injectErrors","injectEvents","defSection","defMethod","setSignedExtensions","identifier","extractProperties","original","unknown","findUnknownExtensions","VERSIONS","newFromValue","GenericExtrinsic","decodeExtrinsic","ExtrinsicBase","signKeys","getter","is","__internal__hashCache","static","account","signFake","isExpanded","BIT_SIGNED","BIT_UNSIGNED","EMPTY_U8A","DEFAULT_VERSION","IMMORTAL_ERA","UNMASK_VERSION","GenericExtrinsicV4","GenericEventData","__internal__meta","__internal__method","__internal__names","__internal__section","__internal__typeDef","sanitizeField","GenericEvent","DataType","decodeEvent","convertType","convertCompact","convertFields","convertSequence","convertDef","convertArray","convertBitSequence","BitSequence","convertComposite","convertPhantom","console","convertPrimitive","prim","Primitive","asPrimitive","convertTuple","convertVariant","discriminant","toV1","decodeMortalEra","decodeMortalU8a","U64","first","second","quantizeFactor","phase","decodeMortalObject","calPeriod","pow","log2","quantizedPhase","decodeExtrinsicEra","GenericExtrinsicEra","mortal","immortal","MortalEra","ImmortalEra","formatNumber","getTrailingZeros","binary","birth","death","asImmortalEra","GenericExtrinsicPayload","decodeExtrinsicPayload","signerPair","GenericExtrinsicPayloadUnknown","GenericExtrinsicUnknown","runtimeVersion","GenericSignerPayload","__internal__extraTypes","extensionTypes","toPayload","toRaw","GenericExtrinsicPayloadV4","__internal__signOptions","FAKE_SIGNATURE","fill","toAddress","GenericExtrinsicSignatureV4","__internal__signKeys","signTypes","decodeExtrinsicSignature","multiSignature","_injectSignature","createPayload","decodeAccountId","BaseAccountId","allowedBits","encode","GenericAccountId","GenericAccountId33","MAX_1BYTE","MAX_2BYTE","shln","MAX_4BYTE","decodeAccountIndex","GenericAccountIndex","calcLength","lt","readLength","writeLength","GenericBlock","extrinsics","contentHash","getArgsDef","decodeCall","decodeCallViaU8a","decodeCallViaObject","GenericCallIndex","GenericCall","argsEntries","createValue","decodeValue","GenericChainProperties","CID_AURA","CID_BABE","CID_GRPA","CID_POW","CID_NMBS","GenericConsensusEngineId","isAura","isBabe","isGrandpa","isPow","isNimbus","extractAuthor","bytes","sessionValidators","getAuraAuthor","slotNumber","getBabeAuthor","getBytesAsAuthor","ACCOUNT_ID_PREFIX","decodeAddressOrIndex","GenericLookupSource","decodeString","rawLength","_rawLength","Id","Address20","Index","GenericMultiAddress","Address32","decodeMultiAny","AYE_BITS","NAY_BITS","DEF_CONV","decodeVoteBool","decodeVote","decodeVoteU8a","Bool","decodeVoteType","aye","conviction","GenericVote","__internal__aye","__internal__conviction","isAye","isNay","GenericEthereumAccountId","GenericEthereumLookupSource","decodeData","decodeDataU8a","indicator","Data","BlakeTwo256","Sha256","Keccak256","ShaThree256","isRaw","asRaw","asBlakeTwo256","asKeccak256","asSha256","asShaThree256","isBlakeTwo256","isKeccak256","isSha256","isShaThree256","HASHER_MAP","Blake2_128","Blake2_128Concat","Blake2_256","Identity","Twox128","Twox256","Twox64Concat","decodeArgsFromMeta","hashers","decodeHashers","hashLen","canDecode","getSiName","h","StorageKey","__internal__args","__internal__outputType","decodeStorageKey","getType","outputType","getMeta","META_V1_TO_V2","description","Si1Variant","v1","Si1Field","Si1LookupTypeId","Si1Path","Si1Type","Si1TypeDef","Sequence","HistoricMetaCompat","Si1TypeDefArray","Si1TypeDefBitSequence","Si1TypeDefCompact","Si1TypeDefComposite","Si1TypeDefPrimitive","Si1TypeDefSequence","Si1TypeDefTuple","Si1TypeParameter","Si1TypeDefVariant","metadata_at_version","metadata_versions","ErrorMetadataV9","EventMetadataV9","FunctionArgumentMetadataV9","FunctionMetadataV9","MetadataV9","modules","ModuleConstantMetadataV9","ModuleMetadataV9","StorageEntryMetadataV9","modifier","fallback","StorageEntryModifierV9","StorageEntryTypeV9","linked","DoubleMap","key1","key2","key2Hasher","StorageHasherV9","StorageMetadataV9","prefix","ErrorMetadataV10","EventMetadataV10","FunctionArgumentMetadataV10","FunctionMetadataV10","MetadataV10","ModuleConstantMetadataV10","ModuleMetadataV10","StorageEntryModifierV10","StorageEntryMetadataV10","StorageEntryTypeV10","StorageMetadataV10","StorageHasherV10","ErrorMetadataV11","EventMetadataV11","ExtrinsicMetadataV11","FunctionArgumentMetadataV11","FunctionMetadataV11","MetadataV11","ModuleConstantMetadataV11","ModuleMetadataV11","StorageEntryModifierV11","StorageEntryMetadataV11","StorageEntryTypeV11","StorageMetadataV11","StorageHasherV11","ErrorMetadataV12","EventMetadataV12","ExtrinsicMetadataV12","FunctionArgumentMetadataV12","FunctionMetadataV12","MetadataV12","ModuleConstantMetadataV12","ModuleMetadataV12","StorageEntryModifierV12","StorageEntryMetadataV12","StorageEntryTypeV12","StorageMetadataV12","StorageHasherV12","ErrorMetadataV13","EventMetadataV13","ExtrinsicMetadataV13","FunctionArgumentMetadataV13","FunctionMetadataV13","MetadataV13","ModuleConstantMetadataV13","ModuleMetadataV13","StorageEntryModifierV13","StorageEntryMetadataV13","StorageEntryTypeV13","NMap","keyVec","StorageMetadataV13","StorageHasherV13","PortableTypeV14","ErrorMetadataV14","EventMetadataV14","FunctionArgumentMetadataV14","FunctionMetadataV14","ExtrinsicMetadataV14","MetadataV14","PalletCallMetadataV14","PalletConstantMetadataV14","PalletErrorMetadataV14","PalletEventMetadataV14","PalletMetadataV14","PalletStorageMetadataV14","SignedExtensionMetadataV14","additionalSigned","StorageEntryMetadataV14","StorageEntryModifierV14","StorageEntryTypeV14","StorageHasherV14","CustomMetadata15","CustomValueMetadata15","ExtrinsicMetadataV15","addressType","callType","signatureType","extraType","OuterEnums15","eventType","errorType","PalletMetadataV15","RuntimeApiMetadataV15","RuntimeApiMethodMetadataV15","RuntimeApiMethodParamMetadataV15","MetadataV15","outerEnums","custom","ErrorMetadataLatest","EventMetadataLatest","ExtrinsicMetadataLatest","FunctionArgumentMetadataLatest","FunctionMetadataLatest","MetadataLatest","PalletCallMetadataLatest","PalletConstantMetadataLatest","PalletErrorMetadataLatest","PalletEventMetadataLatest","PalletMetadataLatest","PalletStorageMetadataLatest","PortableType","RuntimeApiMetadataLatest","SignedExtensionMetadataLatest","StorageEntryMetadataLatest","StorageEntryModifierLatest","StorageEntryTypeLatest","StorageHasher","OpaqueMetadata","MetadataAll","V0","V1","V2","V3","V4","V5","V6","V7","V8","V9","V10","V11","V12","V13","V14","V15","Si0Field","Si0LookupTypeId","Si0Path","Si0Type","Si0TypeDef","Phantom","Si0TypeDefArray","Si0TypeDefBitSequence","Si0TypeDefCompact","Si0TypeDefComposite","Si0TypeDefPhantom","Si0TypeDefVariant","Si0TypeDefPrimitive","Si0TypeDefSequence","Si0TypeDefTuple","Si0TypeParameter","Si0Variant","SiField","SiLookupTypeId","SiPath","SiType","SiTypeDef","SiTypeDefArray","SiTypeDefBitSequence","SiTypeDefCompact","SiTypeDefComposite","SiTypeDefPrimitive","SiTypeDefSequence","SiTypeDefTuple","SiTypeParameter","SiTypeDefVariant","SiVariant","AssetConversionApi","get_reserves","quote_price_exact_tokens_for_tokens","quote_price_tokens_for_exact_tokens","AssetsApi","account_balances","AssetApprovalKey","owner","delegate","AssetApproval","amount","AssetBalance","balance","isFrozen","isSufficient","AssetDestroyWitness","accounts","sufficients","approvals","AssetDetails","issuer","admin","freezer","supply","minBalance","AssetMetadata","symbol","TAssetDepositBalance","AuraApi","authorities","slot_duration","RawAuraPreDigest","UncleEntryItem","InclusionHeight","Uncle","V1_V2_SHARED","current_epoch","current_epoch_start","generate_key_ownership_proof","next_epoch","submit_report_equivocation_unsigned_extrinsic","epochAuthorship","isUnsafe","BabeApi","configuration","AllowedSlots","BabeAuthorityWeight","BabeEpochConfiguration","allowedSlots","BabeBlockWeight","BabeEquivocationProof","offender","firstHeader","secondHeader","BabeGenesisConfiguration","slotDuration","epochLength","genesisAuthorities","randomness","BabeGenesisConfigurationV1","secondarySlots","BabeWeight","MaybeRandomness","MaybeVrf","Epoch","epochIndex","startSlot","duration","config","EpochAuthorship","primary","secondary","secondary_vrf","NextConfigDescriptor","NextConfigDescriptorV1","OpaqueKeyOwnershipProof","Randomness","RawBabePreDigest","Primary","SecondaryPlain","SecondaryVRF","RawBabePreDigestPrimary","authorityIndex","vrfOutput","vrfProof","RawBabePreDigestSecondaryPlain","RawBabePreDigestSecondaryVRF","RawBabePreDigestTo159","Secondary","RawBabePreDigestPrimaryTo159","weight","RawBabePreDigestSecondaryTo159","RawBabePreDigestCompat","Zero","One","Two","Three","SlotNumber","VrfData","VrfOutput","VrfProof","AccountData","free","reserved","miscFrozen","feeFrozen","BalanceLockTo212","until","reasons","BalanceStatus","Reasons","ReserveData","ReserveIdentifier","VestingSchedule","perBlock","startingBlock","WithdrawReasons","TransactionPayment","Transfer","Reserve","Tip","BEEFY_V1_V3","beefy_genesis","validator_set","getFinalizedHead","subscribeJustifications","pubsub","BeefyApi","BeefyMmrApi","authority_set_proof","next_authority_set_proof","BeefyAuthoritySet","root","BeefyCommitment","validatorSetId","BeefyId","BeefyEquivocationProof","BeefyCompactSignedCommitment","commitment","signaturesFrom","validatorSetLen","signaturesCompact","BeefySignedCommitment","signatures","BeefyVersionedFinalityProof","BeefyNextAuthoritySet","BeefyPayload","BeefyPayloadId","BeefyVoteMessage","MmrRootHash","ValidatorSetId","ValidatorSet","validators","Benchmark","benchmark_metadata","dispatch_benchmark","BenchmarkBatch","benchmark","results","BenchmarkConfig","selectedComponents","internalRepeats","BenchmarkList","benchmarks","BenchmarkMetadata","components","BenchmarkParameter","BenchmarkResult","extrinsicTime","storageRootTime","reads","repeatReads","writes","repeatWrites","benchKeys","BB_V2_TO_V4","random_seed","BB_V2_TO_V5","apply_extrinsic","BB_V2_TO_V6","check_inherents","inherent_extrinsics","BB_V3_TO_V6","finalize_block","BlockBuilder","finalise_block","CheckInherentsResult","okay","fatalError","InherentData","InherentIdentifier","CollectiveOrigin","Members","Member","MemberCount","ProposalIndex","VotesTo230","ayes","nays","AuthorityId","RawVRFOutput","SHARED_V1_V2","get_storage","upload_code","deprecated","isHistoric","getStorage","instantiate","rentProjection","uploadCode","endpoint","ContractsApi","AliveContractInfo","trieId","storageSize","pairCount","codeHash","rentAllowance","rentPaid","deductBlock","lastWrite","_reserved","CodeHash","CodeSource","Upload","Existing","CodeUploadRequest","origin","code","storageDepositLimit","CodeUploadResult","CodeUploadResultValue","ContractCallRequest","gasLimit","inputData","ContractExecResultSuccessTo255","status","ContractExecResultTo255","Success","ContractExecResultSuccessTo260","flags","gasConsumed","ContractExecResultTo260","ContractExecResultOk","ContractExecResultResult","ContractExecResultTo267","debugMessage","ContractExecResult","gasRequired","storageDeposit","ContractExecResultU64","ContractInfo","Alive","Tombstone","ContractCallFlags","ForwardInput","CloneInput","TailCall","AllowReentry","ContractReturnFlags","Revert","ContractStorageKey","DeletedContract","ExecReturnValue","Gas","HostFnWeightsTo264","caller","gasLeft","valueTransferred","minimumBalance","tombstoneDeposit","now","weightToFee","gas","inputPerByte","return","returnPerByte","terminate","restoreTo","restoreToPerDelta","random","depositEvent","depositEventPerTopic","depositEventPerByte","setRentAllowance","setStorage","setStoragePerByte","clearStorage","getStoragePerByte","callTransferSurcharge","callPerInputByte","callPerOutputByte","instantiatePerInputByte","instantiatePerOutputByte","hashSha2256","hashSha2256PerByte","hashKeccak256","hashKeccak256PerByte","hashBlake2256","hashBlake2256PerByte","hashBlake2128","hashBlake2128PerByte","HostFnWeights","terminatePerCodeByte","restoreToPerCallerCodeByte","restoreToPerTombstoneCodeByte","callPerCodeByte","instantiatePerCodeByte","instantiatePerSaltByte","rentParams","InstantiateRequestV1","InstantiateRequestV2","InstantiateRequest","ContractInstantiateResultTo267","ContractInstantiateResultTo299","ContractInstantiateResult","ContractInstantiateResultU64","InstantiateReturnValueTo267","accountId","InstantiateReturnValueOk","InstantiateReturnValue","InstructionWeights","i64const","i64load","i64store","select","rIf","br","brIf","brIable","brIablePerEntry","callIndirect","callIndirectPerParam","localGet","localSet","local_tee","globalGet","globalSet","memoryCurrent","memoryGrow","i64clz","i64ctz","i64popcnt","i64eqz","i64extendsi32","i64extendui32","i32wrapi64","i64eq","i64ne","i64lts","i64ltu","i64gts","i64gtu","i64les","i64leu","i64ges","i64geu","i64add","i64sub","i64mul","i64divs","i64divu","i64rems","i64remu","i64and","i64or","i64xor","i64shl","i64shrs","i64shru","i64rotl","i64rotr","LimitsTo264","eventTopics","stackHeight","globals","parameters","memoryPages","tableSize","brTableSize","subjectLen","codeSize","Limits","PrefabWasmModule","scheduleVersion","initial","maximum","refcount","originalCodeLen","RentProjection","EvictionAt","NoEviction","ScheduleTo212","putCodePerByteCost","growMemCost","regularOpCost","returnDataPerByteCost","eventDataPerByteCost","eventPerTopicCost","eventBaseCost","sandboxDataReadCost","sandboxDataWriteCost","maxEventTopics","maxStackHeight","maxMemoryPages","enablePrintln","maxSubjectLen","ScheduleTo258","transferCost","ScheduleTo264","limits","instructionWeights","hostFnWeights","Schedule","SeedOf","StorageDeposit","Refund","Charge","TombstoneContractInfo","TrieId","AccountVote","Standard","Split","AccountVoteSplit","nay","AccountVoteStandard","Conviction","Delegations","votes","capital","PreimageStatus","Missing","Available","PreimageStatusAvailable","provider","since","expiry","PriorLock","PropIndex","Proposal","ProxyState","Open","Active","ReferendumIndex","ReferendumInfoTo239","proposalHash","delay","Ongoing","Finished","ReferendumInfoFinished","approved","ReferendumStatus","tally","Tally","turnout","Voting","Direct","Delegating","VotingDirect","delegations","prior","VotingDirectVote","VotingDelegating","target","getBlockStats","BlockStats","witnessLen","witnessCompactLen","blockLen","blockNumExtrinsics","AuthorityDiscoveryApi","ApprovalFlag","DefunctVoter","who","voteCount","candidateCount","Renouncing","RunnerUp","Candidate","SetIndex","Vote","VoteIndex","VoterInfo","lastActive","lastWin","pot","stake","VoteThreshold","createBlock","finalizeBlock","CreatedBlock","aux","ImportedAux","headerOnly","clearJustificationRequests","needsJustification","badJustification","needsFinalityProof","isNewBest","EvmAccount","EvmCallInfo","exitReason","usedGas","logs","EvmCreateInfo","EvmCallInfoV2","weightInfo","EvmCreateInfoV2","EvmLog","topics","EvmVicinity","gasPrice","EvmWeightInfo","refTimeLimit","proofSizeLimit","refTimeUsage","proofSizeUsage","ExitError","StackUnderflow","StackOverflow","InvalidJump","InvalidRange","DesignatedInvalid","CallTooDeep","CreateCollision","CreateContractLimit","OutOfOffset","OutOfGas","OutOfFund","PCUnderflow","CreateEmpty","Other","ExitFatal","NotSupported","UnhandledInterrupt","CallErrorAsFatal","ExitReason","Succeed","Fatal","ExitRevert","ExitSucceed","Extrinsic","ExtrinsicEra","ExtrinsicPayload","ExtrinsicSignature","ExtrinsicV4","ExtrinsicPayloadV4","ExtrinsicSignatureV4","ExtrinsicUnknown","ExtrinsicPayloadUnknown","Era","AnySignature","MultiSignature","Ed25519","Sr25519","Ecdsa","Signature","SignerPayload","EcdsaSignature","Ed25519Signature","Sr25519Signature","FungiblesApi","query_account_balances","FungiblesAccessError","AssetOptions","initalIssuance","permissions","Owner","PermissionsV1","update","mint","burn","PermissionVersions","PermissionLatest","GenesisBuilder","build_config","create_default_config","GenesisBuildErr","ActiveGilt","proportion","ActiveGiltsTotal","frozen","ActiveIndex","GiltBid","GRANDPA_V2_V3","grandpa_authorities","proveFinality","roundState","GrandpaApi","current_set_id","AuthorityIndex","AuthorityList","AuthoritySet","currentAuthorities","setId","pendingStandardChanges","pendingForcedChanges","authoritySetChanges","ForkTreePendingChange","roots","bestFinalizedNumber","ForkTreePendingChangeNode","number","children","AuthoritySetChange","AuthoritySetChanges","AuthorityWeight","DelayKind","Finalized","Best","DelayKindBest","medianLastFinalized","EncodedFinalityProofs","GrandpaEquivocation","Prevote","Precommit","GrandpaEquivocationProof","equivocation","GrandpaEquivocationValue","roundNumber","GrandpaPrevote","targetHash","targetNumber","GrandpaCommit","precommits","GrandpaPrecommit","GrandpaSignedPrecommit","precommit","GrandpaJustification","round","commit","votesAncestries","JustificationNotification","KeyOwnerProof","NextAuthority","PendingChange","nextAuthorities","canonHeight","canonHash","delayKind","PendingPause","scheduledAt","PendingResume","Precommits","currentWeight","missing","Prevotes","ReportedRoundStates","best","background","RoundState","totalWeight","thresholdWeight","prevotes","SetId","StoredPendingChange","StoredState","Live","Paused","IdentityFields","Display","Legal","Web","Riot","Email","PgpFingerprint","Image","Twitter","IdentityInfoAdditional","IdentityInfoTo198","display","legal","web","riot","email","pgpFingerprint","image","twitter","Unknown","FeePaid","Reasonable","KnownGood","OutOfDate","LowQuality","Erroneous","RegistrationJudgement","RegistrationTo198","judgements","Registration","RegistrarIndex","RegistrarInfo","AuthIndex","AuthoritySignature","networkState","sessionIndex","validatorsLen","HeartbeatTo244","OpaqueMultiaddr","OpaquePeerId","OpaqueNetworkState","peerId","externalAddresses","CallIndex","LotteryConfig","repeat","MixnetApi","current_mixnodes","maybe_register","prev_mixnodes","session_status","Mixnode","kxPublic","MixnodesErr","InsufficientRegistrations","num","SessionPhase","SessionStatus","currentIndex","generateProof","verifyProof","verifyProofStateless","MmrApi","generate_proof","mmr_leaf_count","mmr_root","verify_proof","verify_proof_stateless","generate_batch_proof","verify_batch_proof","verify_batch_proof_stateless","MmrBatchProof","leafIndices","leafCount","MmrEncodableOpaqueLeaf","MmrError","MmrHash","MmrLeafBatchProof","leaves","MmrLeafIndex","MmrLeafProof","leaf","MmrNodeIndex","MmrProof","leafIndex","NftsApi","attribute","collection_attribute","collection_owner","custom_attribute","system_attribute","NftCollectionId","NftItemId","NominationPoolsApi","balance_to_points","pending_rewards","points_to_balance","NpApiError","NpPoolId","DeferredOffenceOf","Kind","OffenceDetails","reporters","Offender","OpaqueTimeSlot","ReportIdOf","Reporter","DifficultyApi","difficulty","TimestampApi","timestamp","ProxyDefinition","proxyType","ProxyAnnouncement","real","callHash","height","ActiveRecovery","friends","RecoveryConfig","delayPeriod","Period","Priority","SchedulePeriod","SchedulePriority","maybeId","priority","maybePeriodic","ScheduledTo254","TaskAddress","SessionKeys","decode_session_keys","generate_session_keys","BeefyKey","SessionKeys1","SessionKeys2","SessionKeys3","SessionKeys4","SessionKeys5","SessionKeys6","SessionKeys6B","SessionKeys7","SessionKeys7B","SessionKeys8","SessionKeys8B","SessionKeys9","SessionKeys9B","SessionKeys10","SessionKeys10B","IdentificationTuple","MembershipProof","trieNodes","validatorCount","SessionIndex","ValidatorCount","Bid","BidKind","Deposit","Vouch","SocietyJudgement","SocietyVote","StrikeCount","VouchingStatus","StakingApi","nominations_quota","Points","EraPoints","individual","CompactAssignmentsWith16","votes1","votes2","votes3","votes4","votes5","votes6","votes7","votes8","votes9","votes10","votes11","votes12","votes13","votes14","votes15","votes16","CompactAssignmentsWith24","votes17","votes18","votes19","votes20","votes21","votes22","votes23","votes24","CompactAssignmentsTo265","CompactAssignmentsTo257","CompactScore","CompactScoreCompact","ElectionCompute","ElectionPhase","Off","Signed","Unsigned","Emergency","ElectionResult","compute","slotStake","electedStashes","exposures","ElectionScore","ElectionSize","nominators","ElectionStatus","Close","ExtendedBalance","RawSolutionWith16","compact","score","RawSolutionWith24","RawSolutionTo265","ReadySolution","supports","RoundSnapshot","voters","targets","SeatHolder","SignedSubmission","solution","reward","SignedSubmissionTo276","SignedSubmissionOf","SolutionOrSnapshotSize","SolutionSupport","SolutionSupports","Supports","SubmissionIndicesOf","Voter","VoteWeight","ActiveEraInfo","EraIndex","EraRewardPoints","EraRewards","rewards","Exposure","own","others","Forcing","IndividualExposure","KeyType","MomentOf","Nominations","submittedIn","suppressed","NominatorIndex","NominatorIndexCompact","OffchainAccuracy","OffchainAccuracyCompact","PhragmenScore","RewardDestination","Staked","Stash","Controller","Account","RewardPoint","SlashJournalEntry","ownSlash","SlashingSpansTo204","spanIndex","lastStart","lastNonzeroSlash","SpanIndex","SpanRecord","slashed","paidOut","StakingLedgerTo223","stash","active","unlocking","StakingLedgerTo240","lastReward","claimedRewards","UnappliedSlashOther","UnappliedSlash","validator","payout","UnlockChunk","ValidatorIndex","ValidatorIndexCompact","ValidatorPrefsWithCommission","commission","ValidatorPrefsWithBlocked","blocked","ValidatorPrefsTo196","validatorPayment","ValidatorPrefsTo145","unstakeThreshold","ValidateStatement","valdate_statement","StatementStoreStatementSource","StatementStoreValidStatement","maxCount","maxSize","StatementStoreInvalidStatement","WeightToFeeCoefficient","coeffInteger","coeffFrac","negative","degree","genSyncSpec","accountNextIndex","addLogFilter","addReservedPeer","chainType","dryRun","health","noErrorLog","localListenAddresses","localPeerId","nodeRoles","peers","removeReservedPeer","reservedPeers","resetLogFilter","syncState","AccountNonceApi","account_nonce","AccountInfoWithRefCountU8","AccountInfoWithRefCount","AccountInfoWithDualRefCount","consumers","providers","AccountInfoWithProviders","AccountInfoWithTripleRefCount","ApplyExtrinsicResult","ApplyExtrinsicResultPre6","ArithmeticError","BlockLength","BlockWeights","baseBlock","maxBlock","perClass","ChainProperties","ChainType","Development","Local","Custom","ConsumedWeight","DigestOf","DispatchClass","CannotLookup","BadOrigin","Module","ConsumerRemaining","NoProviders","TooManyConsumers","Token","Arithmetic","Transactional","Exhausted","Corruption","Unavailable","DispatchErrorPre6","DispatchErrorPre6First","DispatchErrorModuleU8","DispatchErrorModuleU8a","DispatchErrorModulePre6","DispatchErrorTo198","class","paysFee","DispatchInfoTo190","DispatchInfoTo244","DispatchOutcome","DispatchOutcomePre6","DispatchResult","DispatchResultOf","DispatchResultTo198","Event","EventId","EventIndex","EventRecord","event","Health","isSyncing","shouldHavePeers","InvalidTransaction","Call","Payment","Future","Stale","BadProof","AncientBirthBlock","ExhaustsResources","BadMandatory","MandatoryDispatch","BadSigner","Key","LastRuntimeUpgradeInfo","NetworkState","listenedAddresses","connectedPeers","notConnectedPeers","averageDownloadPerSec","averageUploadPerSec","peerset","NetworkStatePeerset","messageQueue","nodes","NetworkStatePeersetInfo","connected","reputation","NodeRole","Full","LightClient","Authority","UnknownRole","NotConnectedPeer","knownAddresses","latestPingTime","versionString","Peer","enabled","open","PeerEndpoint","listening","PeerEndpointAddr","localAddr","sendBackAddr","PeerPing","nanos","secs","PeerInfo","roles","protocolVersion","bestHash","bestNumber","PerDispatchClassU32","normal","operational","mandatory","PerDispatchClassWeight","PerDispatchClassWeightsPerClass","Phase","ApplyExtrinsic","Finalization","Initialization","RawOrigin","Root","RefCountTo259","SyncState","currentBlock","highestBlock","SystemOrigin","TokenError","TransactionValidityError","Invalid","TransactionalError","UnknownTransaction","NoUnsignedValidator","WeightPerClass","baseExtrinsic","maxExtrinsic","maxTotal","Bounty","proposer","curatorDeposit","BountyIndex","BountyStatus","Proposed","Approved","Funded","CuratorProposed","PendingPayout","BountyStatusActive","curator","updateDue","BountyStatusCuratorProposed","BountyStatusPendingPayout","beneficiary","unlockAt","reason","finder","closes","tips","findersFee","OpenTipTo225","OpenTipFinderTo225","OpenTipTip","TreasuryProposal","TaggedTransactionQueue","validate_transaction","TransactionSource","TransactionValidity","ValidTransaction","requires","provides","longevity","propagate","ClassId","InstanceId","DepositBalance","DepositBalanceOf","ClassDetails","totalDeposit","freeHolding","instanceMetadatas","attributes","DestroyWitness","InstanceDetails","ClassMetadata","InstanceMetadata","Multisig","when","Timepoint","VestingInfo","locked","BlockAttestations","receipt","valid","invalid","IncludedBlocks","actualNumber","randomSeed","activeParachains","paraBlocks","MoreAttestations","BridgedBlockHash","BridgedBlockNumber","BridgedHeader","BridgeMessageId","CallOrigin","SourceRoot","TargetAccount","SourceAccount","DeliveredMessages","begin","dispatchResults","DispatchFeePayment","InboundLaneData","relayers","lastConfirmedNonce","InboundRelayer","InitializationData","authorityList","isHalted","LaneId","MessageData","MessagesDeliveryProofOf","bridgedHeaderHash","storageProof","lane","MessageKey","laneId","MessageNonce","MessagesProofOf","noncesStart","noncesEnd","OperatingMode","OutboundLaneData","oldestUnprunedNonce","latestReceivedNonce","latestGeneratedNonce","OutboundMessageFee","OutboundPayload","dispatchFeePayment","Parameter","RelayerId","UnrewardedRelayer","relayer","messages","UnrewardedRelayersState","unrewardedRelayer_Entries","messagesInOldestEntry","totalMessages","StatementKind","FundIndex","LastContribution","Never","PreEnding","Ending","FundInfo","verifier","raised","cap","lastContribution","firstPeriod","lastPeriod","trieIndex","TrieIndex","AuraUnincludedSegmentApi","can_build_upon","CollectCollationInfo","collect_collation_info","CollationInfo","upwardMessages","horizontalMessages","newValidationCode","processedDownwardMessages","hrmpWatermark","headData","CollationInfoV1","ConfigData","maxIndividual","MessageId","OverweightIndex","PageCounter","PageIndexData","beginUsed","endUsed","overweightCount","finalityV1","best_finalized","KusamaFinalityApi","PolkadotFinalityApi","RococoFinalityApi","WestendFinalityApi","PH_V1_TO_V2","assumed_validation_data","availability_cores","candidate_events","candidate_pending_availability","check_validation_outputs","dmq_contents","inbound_hrmp_channels_contents","on_chain_votes","persisted_validation_data","session_index_for_child","validation_code","validation_code_by_hash","validator_groups","PH_V2_TO_V3","pvfs_require_precheck","session_info","submit_pvf_check_statement","validation_code_hash","PH_V3","disputes","PH_V4","session_executor_params","PH_V5","key_ownership_proof","submit_report_dispute_lost","unapplied_slashes","PH_V6","minimum_backing_votes","PH_V7","async_backing_params","para_backing_state","PH_V8","disabled_validators","PH_V9","node_features","PH_V10","approval_voting_params","SlotRange10","SlotRange","ParachainHost","claim_queue","ServiceQuality","DisputeLocation","DisputeResult","DisputeState","validatorsFor","validatorsAgainst","concludedAt","DisputeStatement","Valid","DisputeStatementSet","candidateHash","statements","ExecutorParam","MaxMemoryPages","StackLogicalMax","StackNativeMax","PrecheckingMaxMemory","PvfPrepTimeout","PvfExecTimeout","ExecutorParamsHash","ExecutorParams","ExplicitDisputeStatement","InvalidDisputeStatementKind","MultiDisputeStatementSet","PvfExecTimeoutKind","PvfPrepTimeoutKind","ValidDisputeStatementKind","Explicit","BackingSeconded","BackingValid","ApprovalChecking","HrmpChannel","maxCapacity","maxTotalSize","maxMessageSize","msgCount","totalSize","mqcHead","senderDeposit","recipientDeposit","HrmpChannelId","sender","receiver","HrmpOpenChannelRequest","confirmed","age","ParachainProposal","genesisHead","RegisteredParachainInfo","Bidder","New","IncomingParachain","Unset","Fixed","Deploy","IncomingParachainDeploy","initialHeadData","IncomingParachainFixed","NewBidder","SubId","AuctionIndex","LeasePeriod","LeasePeriodOf","WinningData10","WinningData","WinningDataEntry","WinnersData10","WinnersData","WinnersDataTuple10","WinnersDataTuple","AbridgedCandidateReceipt","parachainIndex","relayParent","collator","povBlockHash","commitments","AbridgedHostConfiguration","maxCodeSize","maxHeadDataSize","maxUpwardQueueCount","maxUpwardQueueSize","maxUpwardMessageSize","maxUpwardMessageNumPerCandidate","hrmpMaxMessageNumPerCandidate","validationUpgradeFrequency","validationUpgradeDelay","AbridgedHrmpChannel","ApprovalVotingParams","maxApprovalCoalesceCount","AssignmentId","AssignmentKind","Parachain","Parathread","AsyncBackingParams","maxCandidateDepth","allowedAncestryLen","AttestedCandidate","candidate","validityVotes","validatorIndices","AuthorityDiscoveryId","AvailabilityBitfield","AvailabilityBitfieldRecord","bitfield","submittedTt","BackedCandidate","BackingState","constraints","pendingAvailability","BufferedSessionChange","applyAt","queued","CandidateCommitments","CandidateDescriptor","paraId","collatorId","persistedValidationDataHash","povHash","erasureRoot","paraHead","validationCodeHash","CandidateEvent","CandidateBacked","CandidateIncluded","CandidateTimedOut","CandidateHash","CandidateInfo","CandidatePendingAvailability","core","descriptor","availabilityVotes","backers","relayParentNumber","backedInNumber","backingGroup","CandidateReceipt","commitmentsHash","GlobalValidationData","CollatorId","CollatorSignature","CommittedCandidateReceipt","Constraints","minRelayParentNumber","maxPovSize","umpRemaining","umpRemainingBytes","maxUmpNumPerCandidate","dmpRemainingMessages","hrmpInbound","hrmpChannelsOut","maxHrmpNumPerCandidate","requiredParent","upgradeRestriction","futureValidationCode","CoreAssignment","groupIdx","CoreIndex","CoreOccupied","CoreState","Occupied","Free","DisputeProof","timeSlot","validatorIndex","validatorId","DisputesTimeSlot","DoubleVoteReport","signingContext","DownwardMessage","GroupIndex","GroupRotationInfo","sessionStartBlock","groupRotationFrequency","GlobalValidationSchedule","HeadData","HostConfiguration","maxDownwardMessageSize","preferredDispatchableUpwardMessagesStepWeight","hrmpMaxParachainOutboundChannels","hrmpMaxParathreadOutboundChannels","hrmpOpenRequestTtl","hrmpSenderDeposit","hrmpRecipientDeposit","hrmpChannelMaxCapacity","hrmpChannelMaxTotalSize","hrmpMaxParachainInboundChannels","hrmpMaxParathreadInboundChannels","hrmpChannelMaxMessageSize","codeRetentionPeriod","parathreadCores","parathreadRetries","chainAvailabilityPeriod","threadAvailabilityPeriod","schedulingLookahead","maxValidatorsPerCore","maxValidators","disputePeriod","disputePostConclusionAcceptancePeriod","disputeMaxSpamSlots","disputeConclusionByTimeOutPeriod","noShowSlots","nDelayTranches","zerothDelayTrancheWidth","neededApprovals","relayVrfModuloSamples","InboundDownwardMessage","pubSentAt","pubMsg","InboundHrmpMessage","sentAt","InboundHrmpLimitations","validWatermarks","InboundHrmpMessages","LocalValidationData","parentHead","codeUpgradeAllowed","MessageIngestionType","downwardMessages","MessageQueueChain","NodeFeatures","OccupiedCore","nextUpOnAvailable","occupiedSince","timeOutAt","nextUpOnTimeOut","availability","groupResponsible","candidateDescriptor","OccupiedCoreAssumption","OutboundHrmpChannelLimitations","bytesRemaining","messagesRemaining","OutboundHrmpMessage","recipient","PendingSlashes","slashKeys","ParachainDispatchOrigin","ParachainInherentData","validationData","relayChainState","ParachainsInherentData","bitfields","backedCandidates","parentHeader","ParaGenesisArgs","validationCode","parachain","ParaId","ParaInfo","manager","ParaLifecycle","ParaPastCodeMeta","upgradeTimes","lastPruned","ParaScheduling","ParathreadClaim","ParathreadClaimQueue","queue","nextCoreOffset","ParathreadEntry","claim","retries","ParaValidatorIndex","PersistedValidationData","relayParentStorageRoot","PvfCheckStatement","accept","subject","QueuedParathread","coreOffset","RelayBlockNumber","RelayChainBlockNumber","RelayHash","RelayChainHash","Remark","ReplacementTimes","expectedAt","activatedAt","Retriable","WithRetries","ScheduledCore","Scheduling","ScrapedOnChainVotes","backingValidatorsPerCandidate","SessionInfo","activeValidatorIndices","discoveryKeys","assignmentKeys","validatorGroups","nCores","OldV1SessionInfo","SessionInfoValidatorGroup","SignedAvailabilityBitfield","SignedAvailabilityBitfields","SigningContext","parentHash","SlashingOffenceKind","Statement","TransientValidationData","dmqLength","UpgradeGoAhead","UpgradeRestriction","UpwardMessage","ValidationFunctionParams","relayChainHeight","ValidationCode","ValidationCodeHash","ValidationData","persisted","transient","ValidationDataType","ValidatorSignature","ValidityAttestation","Implicit","MessagingStateSnapshot","relayDispatchQueueSize","egressChannels","MessagingStateSnapshotEgressEntry","SystemInherentData","VecInboundHrmpMessage","Approvals","AccountStatus","validity","freeBalance","lockedBalance","vat","AccountValidity","BodyId","Unit","Named","Executive","Technical","Legislative","Judicial","BodyPart","Voice","Fraction","nom","denom","AtLeastProportion","MoreThanProportion","InteriorMultiLocation","NetworkId","Polkadot","Kusama","XcmOrigin","Xcm","XcmpMessageFormat","XcmAssetId","Concrete","Abstract","InboundStatus","OutboundStatus","MultiAssets","FungibilityV0","WildFungibilityV0","AssetInstanceV0","Undefined","Index8","Index16","Index32","Index64","Index128","Array4","Array8","Array16","Array32","Blob","JunctionV0","Parent","AccountId32","AccountIndex64","AccountKey20","PalletInstance","GeneralIndex","GeneralKey","OnlyChild","Plurality","part","MultiAssetV0","All","AllFungible","AllNonFungible","AllAbstractFungible","AllAbstractNonFungible","AllConcreteFungible","AllConcreteNonFungible","AbstractFungible","AbstractNonFungible","ConcreteFungible","ConcreteNonFungible","MultiLocationV0","Here","X1","X2","X3","X4","X5","X6","X7","X8","OriginKindV0","ResponseV0","Assets","XcmV0","WithdrawAsset","effects","ReserveAssetDeposit","ReceiveTeleportedAsset","QueryResponse","queryId","response","TransferAsset","TransferReserveAsset","Transact","originType","requireWeightAtMost","HrmpNewChannelOpenRequest","HrmpChannelAccepted","HrmpChannelClosing","initiator","RelayedFrom","XcmErrorV0","Overflow","Unimplemented","UnhandledXcmVersion","UnhandledXcmMessage","UnhandledEffect","EscalationOfPrivilege","UntrustedReserveLocation","UntrustedTeleportLocation","DestinationBufferOverflow","SendFailed","CannotReachDestination","MultiLocationFull","FailedToDecode","ExceedsMaxMessageSize","FailedToTransactAsset","WeightLimitReached","Wildcard","TooMuchWeightRequired","NotHoldingFees","WeightNotComputable","Barrier","NotWithdrawable","LocationCannotHold","TooExpensive","AssetNotFound","RecursionLimitReached","XcmOrderV0","DepositAsset","DepositReserveAsset","ExchangeAsset","give","receive","InitiateReserveWithdraw","reserve","InitiateTeleport","QueryHolding","BuyExecution","fees","debt","haltOnError","xcm","AssetInstanceV1","FungibilityV1","Fungible","NonFungible","JunctionV1","JunctionsV1","MultiAssetsV1","MultiAssetV1","fungibility","MultiAssetFilterV1","Definite","Wild","MultiLocationV1","parents","interior","OriginKindV1","ResponseV1","WildFungibilityV1","WildMultiAssetV1","AllOf","XcmV1","XcmErrorV1","DestinationUnsupported","XcmOrderV1","Noop","maxAssets","instructions","AssetInstanceV2","FungibilityV2","JunctionV2","JunctionsV2","MultiAssetsV2","MultiAssetV2","MultiAssetFilterV2","MultiLocationV2","OriginKindV2","WildFungibilityV2","ResponseV2","ExecutionResult","ResponseV2Error","ResponseV2Result","WeightLimitV2","Unlimited","Limited","InstructionV2","ReserveAssetDeposited","maxWeight","ClearOrigin","DescendOrigin","ReportError","maxResponseWeight","query_id","maxResponse_Weight","weightLimit","RefundSurplus","SetErrorHandler","SetAppendix","ClearError","ClaimAsset","ticket","Trap","WildMultiAssetV2","XcmV2","XcmErrorV2","MultiLocationNotInvertible","Transport","Unroutable","UnknownWeightRequired","UnknownClaim","InvalidLocation","XcmOrderV2","DoubleEncodedCall","XcmOriginKind","Outcome","Complete","Incomplete","QueryId","QueryStatus","Pending","responder","maybeNotify","timeout","Ready","at","QueueConfigData","suspendThreshold","dropThreshold","resumeThreshold","weightRestrictDecay","VersionMigrationStage","MigrateSupportedVersion","MigrateVersionNotifiers","NotifyCurrentTargets","MigrateAndNotifyOldTargets","VersionedMultiAsset","VersionedMultiAssets","VersionedMultiLocation","VersionedResponse","VersionedXcm","XcmVersion","ContractCryptoHasher","ContractDiscriminant","ContractLayoutArray","cellsPerElem","layout","ContractLayoutCell","ty","ContractLayoutEnum","dispatchKey","ContractLayoutHash","strategy","ContractLayoutHashingStrategy","postfix","ContractLayoutKey","ContractLayoutStruct","ContractLayoutStructField","ContractStorageLayout","Cell","Hash","ContractConstructorSpecV0","selector","ContractConstructorSpecV1","ContractConstructorSpecV2","label","ContractConstructorSpecV3","payable","ContractConstructorSpecV4","returnType","ContractContractSpecV0","constructors","ContractContractSpecV1","ContractContractSpecV2","ContractContractSpecV3","ContractContractSpecV4","environment","ContractContractSpecV5","ContractDisplayName","ContractEventParamSpecV0","indexed","ContractEventParamSpecV2","ContractEventSpecV0","ContractEventSpecV1","ContractEventSpecV2","ContractEventSpecV3","module_path","signature_topic","ContractMessageParamSpecV0","ContractMessageParamSpecV2","ContractMessageSpecV0","mutates","ContractMessageSpecV1","ContractMessageSpecV2","ContractMessageSpecV3","ContractSelector","ContractTypeSpec","ContractConstructorSpecLatest","ContractEventSpecLatest","ContractEventParamSpecLatest","ContractMessageParamSpecLatest","ContractMessageSpecLatest","ContractMetadataLatest","ContractProjectInfo","source","contract","ContractMetadataV0","metadataVersion","ContractMetadataV1","ContractMetadataV2","ContractMetadataV3","ContractMetadataV4","ContractMetadataV5","ContractMetadata","ContractProjectV0","ContractProject","ContractProjectContract","authors","repository","homepage","license","ContractProjectSource","wasmHash","language","compiler","wasm","ContractEnvironmentV4","hashType","ethMethodsV4","account_basic","account_code_at","author","chain_id","current_all","current_block","current_receipts","current_transaction_statuses","elasticity","extrinsic_filter","gas_price","storage_at","aliasSection","peerCount","clientVersion","sha3","chainId","coinbase","estimateGas","feeHistory","getBalance","getBlockByHash","getBlockByNumber","getBlockTransactionCountByHash","getBlockTransactionCountByNumber","getCode","getFilterChanges","getFilterLogs","getLogs","getProof","getStorageAt","getTransactionByBlockHashAndIndex","getTransactionByBlockNumberAndIndex","getTransactionByHash","getTransactionCount","getTransactionReceipt","getUncleByBlockHashAndIndex","getUncleByBlockNumberAndIndex","getUncleCountByBlockHash","getUncleCountByBlockNumber","getWork","hashrate","maxPriorityFeePerGas","mining","newBlockFilter","newFilter","newPendingTransactionFilter","sendRawTransaction","sendTransaction","submitHashrate","submitWork","subscribe","syncing","uninstallFilter","ConvertTransactionRuntimeApi","convert_transaction","DebugRuntimeApi","trace_block","trace_transaction","EthereumRuntimeRPCApi","BlockV0","transactions","ommers","LegacyTransaction","action","TransactionV0","BlockV1","EIP2930Transaction","accessList","oddYParity","r","TransactionV1","Legacy","EIP2930","BlockV2","EIP1559Transaction","maxFeePerGas","TransactionV2","EIP1559","EthereumAccountId","EthereumAddress","EthereumLookupSource","EthereumSignature","EthAccessListItem","slots","EthAccessList","EthAccount","storageHash","accountProof","EthAddress","EthBlock","EthHeader","ommersHash","stateRoot","transactionsRoot","receiptsRoot","logsBloom","gasUsed","extraData","mixMash","EthRichBlock","blockSize","sha3Uncles","miner","totalDifficulty","sealFields","uncles","EthBloom","EthCallRequest","EthFeeHistory","oldestBlock","baseFeePerGas","gasUsedRatio","EthFilter","fromBlock","toBlock","EthFilterAddress","Single","Multiple","EthFilterChanges","Logs","Hashes","Empty","EthFilterTopic","EthFilterTopicEntry","EthFilterTopicInner","EthRichHeader","EthLog","transactionHash","transactionIndex","logIndex","transactionLogIndex","removed","EthReceipt","cumulativeGasUsed","contractAddress","statusCode","EthReceiptV0","EthReceiptV3","EthStorageProof","EthSubKind","EthSubParams","EthSubResult","Header","Log","TransactionHash","EthSyncInfo","warpChunksAmount","warpChunksProcessed","EthSyncStatus","Info","EthTransaction","creates","standardV","transactionType","EthTransactionSignature","EthTransactionAction","Create","EthTransactionCondition","block","time","EthTransactionRequest","EthTransactionStatus","EthWork","powHash","seedHash","AuthorFilterAPI","can_author","NimbusApi","OracleApi","get_all_values","get_value","TokensApi","query_existential_deposit","RpcMethods","hasKey","hasSessionKeys","insertKey","pendingExtrinsics","removeExtrinsic","rotateKeys","submitAndWatchExtrinsic","submitExtrinsic","ExtrinsicOrHash","ExtrinsicStatus","Broadcast","InBlock","Retracted","FinalityTimeout","Usurped","Dropped","getBlock","getBlockHash","getHeader","subscribeAllHeads","subscribeFinalizedHeads","subscribeNewHeads","BlockHash","getKeys","getKeysPaged","getStorageEntries","getStorageHash","getStorageSize","PrefixedStorageKey","localStorageGet","localStorageSet","OffchainWorkerApi","offchain_worker","StorageKind","PERSISTENT","LOCAL","V1_TO_V4_SHARED_PAY","query_fee_details","V1_TO_V3_SHARED_CALL","query_call_fee_details","V2_TO_V4_SHARED_PAY","query_info","V2_V3_SHARED_CALL","query_call_info","V3_SHARED_PAY_CALL","query_length_to_fee","query_weight_to_fee","queryFeeDetails","queryInfo","TransactionPaymentApi","TransactionPaymentCallApi","CALL","FeeDetails","inclusionFee","InclusionFee","baseFee","lenFee","adjustedWeightFee","RuntimeDispatchInfo","partialFee","RuntimeDispatchInfoV1","RuntimeDispatchInfoV2","getChildKeys","getChildReadProof","getChildStorage","getChildStorageHash","getChildStorageSize","getMetadata","getReadProof","getRuntimeVersion","queryStorage","queryStorageAt","subscribeRuntimeVersion","subscribeStorage","traceBlock","trieMigrationStatus","ApiId","BlockTrace","tracingTargets","storageKeys","spans","BlockTraceEvent","parentId","BlockTraceEventData","stringValues","BlockTraceSpan","KeyValueOption","MigrationStatusResult","topRemainingToMigrate","childRemainingToMigrate","ReadProof","RuntimeVersionApi","RuntimeVersion","implName","authoringVersion","implVersion","stateVersion","RuntimeVersionPre4","RuntimeVersionPre3","RuntimeVersionPartial","SpecVersion","StorageChangeSet","changes","TraceBlockResponse","TraceError","jsonrpc","isSubscription","CORE_V1_TO_V4","execute_block","CORE_V1_TO_V2","CORE_V2_TO_V4","initialize_block","CORE_V4_VERSION","CORE_V4_TO_V5","Core","initialise_block","knownOrigins","Council","System","TechnicalCommittee","XcmPallet","GeneralCouncil","Fixed64","FixedI64","FixedU64","Fixed128","FixedI128","FixedU128","I32F32","U32F32","PerU16","Perbill","Percent","Permill","Perquintill","AccountId","AccountId20","AccountId33","AccountIdOf","AccountIndex","Balance","BalanceOf","Block","BlockNumber","BlockNumberFor","BlockNumberOf","CallHash","CallHashOf","ChangesTrieConfiguration","digestInterval","digestLevels","ChangesTrieSignal","NewConfiguration","ConsensusEngineId","CodecHash","CrateVersion","major","minor","patch","Digest","DigestItem","AuthoritiesChange","ChangesTrieRoot","SealV0","Consensus","Seal","PreRuntime","RuntimeEnvironmentUpdated","ExtrinsicsWeight","H32","H64","H128","H160","H256","H512","H1024","H2048","extrinsicsRoot","digest","HeaderPartial","IndicesLookupSource","Justification","EncodedJustification","Justifications","KeyValue","KeyTypeId","LockIdentifier","LookupTarget","ModuleId","MultiAddress","MultiSigner","Moment","OpaqueCall","Origin","OriginCaller","PalletId","PalletsOrigin","PalletVersion","Pays","PhantomData","Releases","RuntimeCall","RuntimeEvent","RuntimeDbWeight","read","write","SignedBlock","SignedBlockWithJustification","justification","SignedBlockWithJustifications","justifications","Slot","SlotDuration","StorageData","StorageInfo","palletName","storage_name","maxValues","StorageProof","TransactionPriority","TransactionLongevity","TransactionTag","TransactionInfo","dataSize","chunkRoot","blockChunks","TransactionStorageProof","chunk","ValidatorId","ValidatorIdOf","WeightV0","WeightV1","WeightV2","WeightMultiplier","ExtrinsicInclusionMode","EMPTY_METADATA","VERSION_IDX","trimDocs","firstEmpty","toCallsOnly","flattenUniq","list","extractSubSingle","extractTypes","extractSubArray","unhandled","extractFieldTypes","getUniqTypes","throwError","validateTypes","getPalletNames","createStorageHasher","createStorageType","entryType","isDoubleMap","asDoubleMap","toV10","convertModule","toV11","toV12","toV13","v12","Approval","ApprovalKey","babe","EquivocationProof","Status","beefy","contracts","electionProviderMultiPhase","Receipt","Transaction","TransactionStatus","evm","Vicinity","grandpa","Equivocation","Judgement","inclusion","paraDisputes","paraInclusion","paraScheduler","paraShared","parachains","parasDisputes","parasInclusion","parasScheduler","parasShared","proposeParachain","Announcement","scheduler","shared","society","treasury","BOXES","compatType","specs","makeTupleType","makeVariantType","modName","variantType","setTypeOverride","sectionTypes","aliased","orig","dst","z","convertCalls","convertConstants","convertErrors","_sectionTypes","convertEvents","createMapEntry","isLinked","convertStorage","plain","dm","nm","asNMap","createPallet","getAliasTypes","toV14","v13","metaVersion","compatTypes","registerOriginCaller","convertExtrinsic","toV15","v14","unchecked","paramTypes","SpRuntimeUncheckedExtrinsic","FrameSystemEventRecord","toLatest","v15","_metaVersion","MAGIC_NUMBER","MagicNumber","U32","__internal__converted","__internal__assertVersion","__internal__getVersion","fromPrev","asCurr","asPrev","asV9","asV10","asV11","asV12","asV13","asV15","TYPE_UNWRAP","PRIMITIVE_ALIAS","Char","Str","PATHS_ALIAS","splitNamespace","PATHS_SET","BITVEC_NS_LSB","BITVEC_NS","WRAPPERS","RESERVED","PATH_RM_INDEX_1","sanitizeDocs","matchParts","suba","subb","extractNameFlat","portable","isInternal","camels","lowers","instanceType","extractName","rewriteDupes","rewrite","extractTypeInfo","nameInfo","extracted","lookups","dedup","removeDupeNames","allSame","nextDupeMatches","paramIdx","aIndex","sameCount","adjusted","isPrimitive","flat","PortableRegistry","__internal__alias","__internal__lookups","__internal__params","__internal__typeDefs","__internal__types","isContract","extractAliases","hasParams","registerTypes","addrParam","sigParam","siAddress","nsSignature","nsAccountId","isMultiAddress","idParam","endsWith","__internal__getLookupId","found","empty","__internal__extract","lookupNameRoot","nameField","nameOrig","__internal__createSiDef","namespace","aliasType","getAliasPath","__internal__extractAliasPath","__internal__extractArray","__internal__extractBitSequence","__internal__extractCompact","__internal__extractComposite","__internal__extractHistoric","asHistoricMetaCompat","__internal__extractPrimitive","__internal__extractSequence","__internal__extractTuple","__internal__extractVariant","bitOrder","bitStore","pathFirst","pathLast","__internal__extractCompositeSet","__internal__extractFields","isStruct","__internal__extractFieldsAlias","isFromSi","typeStr","ids","specialVariant","__internal__extractVariantEnum","bnIndex","_version","constant","variantToMeta","decorateErrors","errorMod","filterEventsSome","decorateEvents","eventRecord","filterCallsSome","createCallFunction","createUnchecked","callMetadata","expectedArgs","funcName","extrinsicFn","isTx","expandMetadata","latest","consts","query","DEFAULT_FN","HASHERS","NO_RAW_ARGS","filterDefined","assertArgs","createKeyRawParts","itemFn","createKeyInspect","createKeyRaw","createKey","createWithMeta","storageFn","createStorageFn","cacheKey","skipHashing","createStorageInspect","createFunction","extendPrefixedMap","iterKey","extendHeadMeta","iterFn","keysVec","keyPrefix","findSiPrimitive","isHistoricMetaCompat","findSiType","td","createRuntimeFunction","createSubstrateFn","changesTrieConfig","childStorageKeyPrefix","extrinsicIndex","heapPages","intrablockEntropy","VERSION_NAME","VERSION_KEY","VERSION_DOCS","decorateStorage","_prefix","palletVersion","convert","objectNameToCamel","objectNameToString","unwrapStorageType","unwrapStorageSi","checkAddress","ss58Decoded","allowedEncodedLengths","allowedDecodedLengths","chars","coder","withPadding","base64Validate","isBase64","base64Decode","base64Encode","BN_BE_OPTS","BN_LE_OPTS","BN_LE_16_OPTS","BN_BE_32_OPTS","BN_LE_32_OPTS","BN_BE_256_OPTS","BN_LE_256_OPTS","BN_LE_512_OPTS","cryptoIsReady","cryptoWaitReady","then","catch","HDKD","ed25519DeriveHard","chainCode","ed25519PairFromSeed","onlyJs","full","getPublicKey","ed25519Sign","messageU8a","privateU8a","ed25519Verify","publicKeyU8a","signatureU8a","ethereumEncode","addressOrPublic","u8aAddress","getH160","toUpperCase","isEthereumAddress","isEthereumChecksum","_address","char","byte","MASTER_SECRET","createCoded","deriveChild","hd","indexBuffer","I","hdEthereum","ledgerDerivePrivate","xprv","kl","kr","cc","iadd","imul","ED25519_CRYPTO","hdLedger","_mnemonic","words","ledgerMaster","priv","HARDENED","hdValidatePath","isNaN","JS_HASH","WA_MHAC","createSha","hmacShaAsU8a","u8aKey","hmacSha256AsU8a","hmacSha512AsU8a","addressToEvm","sr25519DerivePublic","filterHard","isHard","PREFIX","createKeyDerived","encodeDerivedAddress","addressToU8a","createKeyMulti","encodeMultiAddress","evmToAddress","evmAddress","validateAddress","isAddress","sortAddresses","addresses","radix2","alphabet","ipfs","base32Validate","isBase32","base32Decode","base32Encode","base64Pad","base64Trim","ed25519PairFromRandom","ed25519PairFromSecret","ed25519PairFromString","jsonDecrypt","jsonEncrypt","contentType","mnemonicGenerate","numWords","wordlist","BN_53","randomAsNumber","sr25519Agreement","secretKeyU8a","ENCODING","ENCODING_NONE","ENCODING_VERSION","NONCE_LENGTH","SCRYPT_LENGTH","jsonDecryptData","jsonEncryptFormat","keccakAsU8a","keccak256AsU8a","keccak512AsU8a","keccakAsHex","RE_NUMBER","DeriveJunction","__internal__chainCode","__internal__isHard","soft","harden","isSoft","hard","soften","RE_JUNCTION","keyExtractPath","match","constructed","RE_CAPTURE","keyExtractSuri","matches","generators","keyFromPath","keyHdkd","junction","createSeedDeriveFn","fromSeed","keypair","secp256k1DeriveHard","keyHdkdEcdsa","keyHdkdEd25519","keyHdkdSr25519","INVALID_MNEMONIC","INVALID_ENTROPY","INVALID_CHECKSUM","normalize","binaryToByte","bin","bytesToBinary","padStart","deriveChecksumBits","entropyBuffer","mnemonicToSeedSync","mnemonicToEntropy","bits","word","dividerIndex","entropyBits","checksumBits","matched","entropyBytes","entropy","generateMnemonic","entropyToMnemonic","mapped","validateMnemonic","mnemonicToLegacySeed","mnemonicToMiniSecret","mnemonicValidate","naclDecrypt","secret","naclEncrypt","L32","ld32","st32","inp","w","Uint32Array","y","sigma","crypto_stream_xor","cpos","mpos","crypto_stream_salsa20_xor","add1305","minusp","crypto_onetimeauth","outpos","g","crypto_secretbox_open","crypto_onetimeauth_verify","hpos","vn","xi","yi","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","checkLengths","checkArrayTypes","TypeError","naclSecretbox","msg","crypto_secretbox","naclSecretboxOpen","_0n","_1n","wNAF","constTimeNegate","condition","neg","negate","opts","W","windows","windowSize","unsafeLadder","elm","ZERO","double","precomputeWindow","points","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","wNAFCached","P","precomputesMap","_WINDOW_SIZE","comp","validateBasic","curve","Fp","Gx","Gy","nBitLength","nByteLength","freeze","ORDER","_2n","_3n","_4n","_5n","_8n","power","modulo","res","pow2","invert","q","FpSqrt","p1div4","sqrt3mod4","eql","sqr","c1","sqrt5mod8","n2","nv","ONE","tonelliShanks","legendreC","Q","S","Z","tonelliFast","Q1div2","tonelliSlow","t2","ge","isNegativeLE","FIELD_FIELDS","validateField","field","MASK","BYTES","BITS","nLength","_nBitLength","Field","bitLen","isLE","redef","sqrtP","is0","isOdd","lhs","rhs","FpPow","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","lst","FpInvertBatch","nums","tmp","lastMultiplied","acc","inverted","reduceRight","cmov","toBytes","fromBytes","bytesToNumberBE","FpSqrtEven","getFieldBytesLength","fieldOrder","getMinHashLength","mapHashToField","fieldLen","reduced","isBytes","hexes","bytesToHex","asciis","_0","_9","_A","_F","_f","asciiToBase16","hexToBytes","hl","al","array","ai","hi","n1","charCodeAt","bytesToNumberLE","numberToBytesBE","numberToBytesLE","ensureBytes","title","expectedLength","concatBytes","arrays","sum","pad","bitMask","u8n","u8fr","arr","createHmacDrbg","qByteLen","hmacFn","reset","reseed","gen","sl","pred","validatorFns","bigint","function","boolean","string","stringOrUint8Array","isSafeInteger","object","outputLen","validateObject","optValidators","checkField","fieldName","checkVal","VERIFY_DEFAULT","zip215","twistedEdwards","curveDef","CURVE","validateOpts","randomBytes","adjustScalarBytes","domain","uvRatio","mapToCurve","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","CURVE_ORDER","pointPrecomputes","isPoint","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","_setWindowSize","assertValidity","X","Y","Y2","Z2","Z4","aX2","equals","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","Y3","T3","Z3","T1","T2","subtract","wnaf","multiply","scalar","multiplyUnsafe","isSmallOrder","isTorsionFree","iz","ax","ay","zz","clearCofactor","fromHex","normed","lastByte","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","modN","modN_LE","hashed","head","pointBytes","hashDomainToScalar","msgs","verifyOpts","R","sig","SB","ExtendedPoint","utils","randomPrivateKey","precompute","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519_domain","ELL2_C1","b2n","h2b","DER","DERErr","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","shl","rhl","rl","weierstrassPoints","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","_c","_isCompressed","tail","weierstrassEquation","x2","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","lengths","assertPrjPoint","px","py","pz","left","right","hasEvenY","U1","U2","b3","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","weierstrass","hmac","bits2int","bits2int_modN","lowS","compressedLen","uncompressedLen","invN","cat","isValidFieldElement","numToNByteStr","isBiggerThanHalfOrder","slcNum","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","getSharedSecret","privateA","publicB","drbg","sg","_sig","derError","getHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","createCurve","defHash","a1","b1","a2","POW_2_128","c2","pbkdf2Encode","rounds","u8aPass","u8aSalt","dkLen","randomAsU8a","randomAsHex","DEFAULT_PARAMS","N","rotl","XorAndSalsa","prev","pi","ii","oi","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","x10","x11","x12","x13","x14","x15","BlockMix","scryptInit","_opts","asyncTick","maxmem","onProgress","blockSize32","memUsed","pbkdf2","sha256","B32","V","blockMixCb","totalBlockMix","callbackPer","blockMixCnt","scryptOutput","scrypt","Pi","pos","scryptEncode","sc","scryptFromU8a","scryptToU8a","secp256k1Compress","secp256k1Expand","secp256k1PairFromSeed","secp256k1Recover","secp256k1Sign","N_BI","N_BN","secp256k1PrivateKeyTweakAdd","seckey","tweak","onlyBn","addBn","isub","addBi","secp256k1Verify","signerAddr","inputAddr","shaAsU8a","sha256AsU8a","sha512AsU8a","secp256k1VerifyHasher","VERIFIERS_ECDSA","VERIFIERS","CRYPTO_TYPES","verifyDetect","verifiers","crypto","verifyMultisig","none","signatureVerify","addressOrPublicKey","isWrapped","isWrappedBytes","verifyFn","getVerifyFn","createDeriveFn","sr25519KeypairToU8a","sr25519DeriveHard","sr25519DeriveSoft","sr25519PairFromSeed","seedU8a","SEC_LEN","TOT_LEN","sr25519PairFromU8a","fullU8a","sr25519Sign","sr25519Verify","sr25519VrfSign","sr25519VrfVerify","signOutput","proofU8a","P64_1","P64_2","P64_3","P64_4","P64_5","_7n","_12n","_16n","_18n","_27n","_29n","_31n","_32n","_33n","_64n","_256n","fromU8a","bigints","xxhash64","initSeed","u8asize","v2","v4","init","state","limit","adjustV","h64","xxhashAsU8a","xxhashAsHex","arrayChunk","chunkSize","outputSize","arrayFlatten","assertReturn","assertUnreachable","_9n","_100n","_1000n","_1Mn","_1Bn","_1Qn","_2pow53n","_sqrt2pow53n","createCmp","nToBigInt","DIV","NEG_MASK","nToU8a","valueBi","withSigned","unshift","BN_ZERO","BN_ONE","BN_TWO","BN_THREE","BN_FOUR","BN_FIVE","BN_SIX","BN_SEVEN","BN_EIGHT","BN_NINE","BN_TEN","BN_HUNDRED","BN_THOUSAND","BN_MILLION","BN_BILLION","BN_QUINTILL","BN_MAX_INTEGER","BN_SQRT_MAX_INTEGER","bnMax","bnMin","bnSqrt","x0","clone","x1","ishrn","bnToBn","bnToHex","DEFAULT_OPTS","bnToU8a","valueBn","toTwos","bufferToU8a","buffer","compactAddLength","compactFromU8a","compactFromU8aLim","compactStripLength","MAX_U8","MAX_U16","MAX_U32","BL_16","BL_32","compactToU8a","floatToU8a","dv","DataView","byteOffset","setFloat32","setFloat64","DEFAULT_UNIT","SI","defaultDecimals","defaultUnit","_formatBalance","forceUnit","locale","withAll","withSiFull","withZero","si","mid","pre","post","units","decimal","thousand","calcSi","findSi","getOptions","setDefaults","zeroPad","formatDate","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","NUMBER_REGEX","formatDecimal","separator","getSeparator","toLocaleString","SI_MID","siDefIndex","hexStripPrefix","hexToBigInt","hexToBn","stripped","fromTwos","arrayFilter","allowNulls","arrayRange","arrayShuffle","curr","rand","arrayUnzip","arrayZip","nMax","nMin","nSqrt","nToHex","MIN_MS","HR_MS","DAY_MS","days","hours","milliseconds","minutes","seconds","extractTime","extractSecs","ms","formatElapsed","tsNow","tsValue","formatValue","elapsed","hexHasPrefix","hexAddPrefix","hexFixLength","hexLength","hexToString","isError","isInstanceOf","v6s","v6","v46Exact","v4exact","v6exact","isIp","isJsonObject","isObservable","isPromise","ELF_MAGIC","PVM_MAGIC","isRiscV","REGEX_DEV","isTestChain","WASM_MAGIC","isWasm","numberToHex","numberToU8a","objectCopy","objectEntries","objectKeys","objectValues","promisify","Promise","resolve","reject","apply","stringShorten","prefixLength","u8aToBuffer","Buffer","isAsciiBytes","isAsciiStr","isBigInt","isBn","isBoolean","isChildClass","Child","isPrototypeOf","isClass","checkCodec","checkRegistry","isCodec","isOn","fns","isOnFunction","isOnObject","isNull","isNumber","isObject","isString","isToBigInt","isUndefined","lazyMethod","lazyMethods","logTo","debug","log","loggerFormat","formatOther","fnResult","formatWithLength","maxLength","isDebugOn","isDebugOff","getDebugFlag","env","flag","isDebug","parseEnv","process","noop","defaultGetId","memoize","getInstanceId","stringParams","instanceId","unmemoize","nextTick","onExec","onError","setTimeout","objectClear","objectProperty","that","objectProperties","sources","CC_TO_UP","CC_TO_LO","fromCharCode","formatAllCaps","converter","format","stringPascalCase","stringLowerFirst","stringUpperFirst","stringToHex","space","u8aCmp","u8aa","u8ab","overA","overB","u8aEmpty","u8aFixLength","atStart","u8aSorted","u8as","U8_MAX","U16_MAX","U64_MAX","u8aToBigInt","dvI","getBigInt64","getUint16","getBigUint64","u8aToBn","u8aToFloat","getFloat32","getFloat64","u8aToNumber","U8A_WRAP_ETHEREUM","U8A_WRAP_PREFIX","U8A_WRAP_POSTFIX","WRAP_LEN","u8aIsWrapped","withEthereum","u8aUnwrapBytes","u8aWrapBytes","DEDUPE","POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG","formatInfo","formatVersion","nmIndex","getPath","infoPath","pathOrFn","fmt","formatDisplay","detectPackage","deps","getEntry","_global","__polkadotjs","entriesSameVersion","esmCjsWarningDisabled","mismatches"],"sourceRoot":""}