{"version":3,"file":"static/js/53871.a9be0d494f.chunk.js","mappings":"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","sources":["webpack://web/../../packages/core/src/chains/bch/sdkBch/index.ts","webpack://web/../../packages/kit-bg/src/vaults/impls/bch/KeyringHardware.ts","webpack://web/../../packages/kit-bg/src/vaults/impls/bch/KeyringHd.ts","webpack://web/../../packages/kit-bg/src/vaults/impls/bch/KeyringImported.ts","webpack://web/../../packages/kit-bg/src/vaults/impls/bch/KeyringQr.ts","webpack://web/../../packages/kit-bg/src/vaults/impls/bch/KeyringWatching.ts","webpack://web/../../packages/kit-bg/src/vaults/impls/bch/Vault.ts","webpack://web/../../node_modules/bchaddrjs/node_modules/bs58check/base.js","webpack://web/../../node_modules/bchaddrjs/node_modules/bs58check/index.js","webpack://web/../../node_modules/bchaddrjs/src/bchaddr.js","webpack://web/../../node_modules/cashaddrjs/node_modules/big-integer/BigInteger.js","webpack://web/../../node_modules/cashaddrjs/src/base32.js","webpack://web/../../node_modules/cashaddrjs/src/cashaddr.js","webpack://web/../../node_modules/cashaddrjs/src/convertBits.js","webpack://web/../../node_modules/cashaddrjs/src/validation.js"],"sourcesContent":["import{isCashAddress,isValidAddress,toCashAddress,toLegacyAddress}from'bchaddrjs';export function decodeAddress(address){if(!isValidAddress(address)||isCashAddress(address)&&!address.startsWith('bitcoincash:')){throw new Error(`Invalid address: ${address}`);}if(isCashAddress(address)){return toLegacyAddress(address);}return address;}export function encodeAddress(address){if(!isValidAddress(address)){throw new Error(`Invalid address: ${address}`);}if(!isCashAddress(address)){return toCashAddress(address);}return address;}","import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function(){return!!t;})();}import coreChainApi from'@onekeyhq/core/src/instance/coreChainApi';import{KeyringHardwareBtcBase}from\"../btc/KeyringHardwareBtcBase\";export var KeyringHardware=function(_KeyringHardwareBtcBa){_inherits(KeyringHardware,_KeyringHardwareBtcBa);var _super=_createSuper(KeyringHardware);function KeyringHardware(...args){var _this;_this=_super.call(this,...args);_this.coreApi=coreChainApi.bch.hd;_this.hwSdkNetwork='bch';return _this;}var _proto=KeyringHardware.prototype;_proto.buildHwAllNetworkPrepareAccountsParams=function(){var _buildHwAllNetworkPrepareAccountsParams=_asyncToGenerator(function*({template,index}){return{network:this.hwSdkNetwork,path:this.buildPrepareAccountsPrefixedPath({template,index}),showOnOneKey:false};});function buildHwAllNetworkPrepareAccountsParams(_x){return _buildHwAllNetworkPrepareAccountsParams.apply(this,arguments);}return buildHwAllNetworkPrepareAccountsParams;}();return _createClass(KeyringHardware);}(KeyringHardwareBtcBase);","import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function(){return!!t;})();}import coreChainApi from'@onekeyhq/core/src/instance/coreChainApi';import{KeyringHd as KeyringHdBtc}from\"../btc/KeyringHd\";export var KeyringHd=function(_KeyringHdBtc){_inherits(KeyringHd,_KeyringHdBtc);var _super=_createSuper(KeyringHd);function KeyringHd(...args){var _this;_this=_super.call(this,...args);_this.coreApi=coreChainApi.bch.hd;return _this;}return _createClass(KeyringHd);}(KeyringHdBtc);","import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function(){return!!t;})();}import coreChainApi from'@onekeyhq/core/src/instance/coreChainApi';import{KeyringImported as KeyringImportedBtc}from\"../btc/KeyringImported\";export var KeyringImported=function(_KeyringImportedBtc){_inherits(KeyringImported,_KeyringImportedBtc);var _super=_createSuper(KeyringImported);function KeyringImported(...args){var _this;_this=_super.call(this,...args);_this.coreApi=coreChainApi.bch.imported;return _this;}return _createClass(KeyringImported);}(KeyringImportedBtc);","import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function(){return!!t;})();}import{KeyringQr as KeyringQrBtc}from\"../btc/KeyringQr\";export var KeyringQr=function(_KeyringQrBtc){_inherits(KeyringQr,_KeyringQrBtc);var _super=_createSuper(KeyringQr);function KeyringQr(){return _super.apply(this,arguments);}return _createClass(KeyringQr);}(KeyringQrBtc);","import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function(){return!!t;})();}import coreChainApi from'@onekeyhq/core/src/instance/coreChainApi';import{KeyringWatching as KeyringWatchingBtc}from\"../btc/KeyringWatching\";export var KeyringWatching=function(_KeyringWatchingBtc){_inherits(KeyringWatching,_KeyringWatchingBtc);var _super=_createSuper(KeyringWatching);function KeyringWatching(...args){var _this;_this=_super.call(this,...args);_this.coreApi=coreChainApi.bch.hd;return _this;}return _createClass(KeyringWatching);}(KeyringWatchingBtc);","import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function(){return!!t;})();}import{decodeAddress,encodeAddress}from'@onekeyhq/core/src/chains/bch/sdkBch';import{validateBtcAddress}from'@onekeyhq/core/src/chains/btc/sdkBtc';import coreChainApi from'@onekeyhq/core/src/instance/coreChainApi';import VaultBtc from\"../btc/Vault\";import{KeyringHardware}from\"./KeyringHardware\";import{KeyringHd}from\"./KeyringHd\";import{KeyringImported}from\"./KeyringImported\";import{KeyringQr}from\"./KeyringQr\";import{KeyringWatching}from\"./KeyringWatching\";var Vault=function(_VaultBtc){_inherits(Vault,_VaultBtc);var _super=_createSuper(Vault);function Vault(...args){var _this;_this=_super.call(this,...args);_this.coreApi=coreChainApi.bch.hd;_this.keyringMap={hd:KeyringHd,qr:KeyringQr,hw:KeyringHardware,imported:KeyringImported,watching:KeyringWatching,external:KeyringWatching};return _this;}var _proto=Vault.prototype;_proto.validateAddress=function(){var _validateAddress=_asyncToGenerator(function*(address){var network=yield this.getBtcForkNetwork();if(address.startsWith('xpub')){return validateBtcAddress({address,network});}try{var _addressValidationRes;var addressValidationResult=validateBtcAddress({address:decodeAddress(address),network});var bchAddress=encodeAddress((_addressValidationRes=addressValidationResult.normalizedAddress)!=null?_addressValidationRes:addressValidationResult.displayAddress);if(!bchAddress){throw new Error('Invalid BCH address');}var result=_objectSpread(_objectSpread({},addressValidationResult),{},{normalizedAddress:bchAddress,displayAddress:bchAddress});return result;}catch(e){return Promise.resolve({isValid:false,normalizedAddress:'',displayAddress:''});}});function validateAddress(_x){return _validateAddress.apply(this,arguments);}return validateAddress;}();_proto.getBlockbookCoinName=function getBlockbookCoinName(){return'Bcash';};return _createClass(Vault);}(VaultBtc);export{Vault as default};","'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n","'use strict'\n\nvar createHash = require('create-hash')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n","/***\n * @license\n * https://github.com/ealmansi/bchaddrjs\n * Copyright (c) 2018-2020 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\nvar bs58check = require('bs58check')\nvar cashaddr = require('cashaddrjs')\nvar Buffer = require('buffer/').Buffer\n\n/**\n * General purpose Bitcoin Cash address detection and translation.<br />\n * Supports all major Bitcoin Cash address formats.<br />\n * Currently:\n * <ul>\n *    <li> Legacy format </li>\n *    <li> Bitpay format </li>\n *    <li> Cashaddr format </li>\n * </ul>\n * @module bchaddr\n */\n\n/**\n * @static\n * Supported Bitcoin Cash address formats.\n */\nvar Format = {}\nFormat.Legacy = 'legacy'\nFormat.Bitpay = 'bitpay'\nFormat.Cashaddr = 'cashaddr'\n\n/**\n * @static\n * Supported networks.\n */\nvar Network = {}\nNetwork.Mainnet = 'mainnet'\nNetwork.Testnet = 'testnet'\n\n/**\n * @static\n * Supported address types.\n */\nvar Type = {}\nType.P2PKH = 'p2pkh'\nType.P2SH = 'p2sh'\n\n/**\n * Returns a boolean indicating whether the given input is a valid Bitcoin Cash address.\n * @static\n * @param {*} input - Any input to check for validity.\n * @returns {boolean}\n */\nfunction isValidAddress (input) {\n  try {\n    decodeAddress(input)\n    return true\n  } catch (error) {\n    return false\n  }\n}\n\n/**\n * Detects what is the given address' format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction detectAddressFormat (address) {\n  return decodeAddress(address).format\n}\n\n/**\n * Detects what is the given address' network.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction detectAddressNetwork (address) {\n  return decodeAddress(address).network\n}\n\n/**\n * Detects what is the given address' type.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction detectAddressType (address) {\n  return decodeAddress(address).type\n}\n\n/**\n * Translates the given address into legacy format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toLegacyAddress (address) {\n  var decoded = decodeAddress(address)\n  if (decoded.format === Format.Legacy) {\n    return address\n  }\n  return encodeAsLegacy(decoded)\n}\n\n/**\n * Translates the given address into bitpay format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toBitpayAddress (address) {\n  var decoded = decodeAddress(address)\n  if (decoded.format === Format.Bitpay) {\n    return address\n  }\n  return encodeAsBitpay(decoded)\n}\n\n/**\n * Translates the given address into cashaddr format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {string}\n * @throws {InvalidAddressError}\n */\nfunction toCashAddress (address) {\n  var decoded = decodeAddress(address)\n  return encodeAsCashaddr(decoded)\n}\n\n/**\n * Version byte table for base58 formats.\n * @private\n */\nvar VERSION_BYTE = {}\nVERSION_BYTE[Format.Legacy] = {}\nVERSION_BYTE[Format.Legacy][Network.Mainnet] = {}\nVERSION_BYTE[Format.Legacy][Network.Mainnet][Type.P2PKH] = 0\nVERSION_BYTE[Format.Legacy][Network.Mainnet][Type.P2SH] = 5\nVERSION_BYTE[Format.Legacy][Network.Testnet] = {}\nVERSION_BYTE[Format.Legacy][Network.Testnet][Type.P2PKH] = 111\nVERSION_BYTE[Format.Legacy][Network.Testnet][Type.P2SH] = 196\nVERSION_BYTE[Format.Bitpay] = {}\nVERSION_BYTE[Format.Bitpay][Network.Mainnet] = {}\nVERSION_BYTE[Format.Bitpay][Network.Mainnet][Type.P2PKH] = 28\nVERSION_BYTE[Format.Bitpay][Network.Mainnet][Type.P2SH] = 40\nVERSION_BYTE[Format.Bitpay][Network.Testnet] = {}\nVERSION_BYTE[Format.Bitpay][Network.Testnet][Type.P2PKH] = 111\nVERSION_BYTE[Format.Bitpay][Network.Testnet][Type.P2SH] = 196\n\n/**\n * Decodes the given address into its constituting hash, format, network and type.\n * @private\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeAddress (address) {\n  try {\n    return decodeBase58Address(address)\n  } catch (error) {\n  }\n  try {\n    return decodeCashAddress(address)\n  } catch (error) {\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Length of a valid base58check encoding payload: 1 byte for\n * the version byte plus 20 bytes for a RIPEMD-160 hash.\n * @private\n */\nvar BASE_58_CHECK_PAYLOAD_LENGTH = 21\n\n/**\n * Attempts to decode the given address assuming it is a base58 address.\n * @private\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeBase58Address (address) {\n  try {\n    var payload = bs58check.decode(address)\n    if (payload.length !== BASE_58_CHECK_PAYLOAD_LENGTH) {\n      throw new InvalidAddressError()\n    }\n    var versionByte = payload[0]\n    var hash = Array.prototype.slice.call(payload, 1)\n    switch (versionByte) {\n      case VERSION_BYTE[Format.Legacy][Network.Mainnet][Type.P2PKH]:\n        return {\n          hash: hash,\n          format: Format.Legacy,\n          network: Network.Mainnet,\n          type: Type.P2PKH\n        }\n      case VERSION_BYTE[Format.Legacy][Network.Mainnet][Type.P2SH]:\n        return {\n          hash: hash,\n          format: Format.Legacy,\n          network: Network.Mainnet,\n          type: Type.P2SH\n        }\n      case VERSION_BYTE[Format.Legacy][Network.Testnet][Type.P2PKH]:\n        return {\n          hash: hash,\n          format: Format.Legacy,\n          network: Network.Testnet,\n          type: Type.P2PKH\n        }\n      case VERSION_BYTE[Format.Legacy][Network.Testnet][Type.P2SH]:\n        return {\n          hash: hash,\n          format: Format.Legacy,\n          network: Network.Testnet,\n          type: Type.P2SH\n        }\n      case VERSION_BYTE[Format.Bitpay][Network.Mainnet][Type.P2PKH]:\n        return {\n          hash: hash,\n          format: Format.Bitpay,\n          network: Network.Mainnet,\n          type: Type.P2PKH\n        }\n      case VERSION_BYTE[Format.Bitpay][Network.Mainnet][Type.P2SH]:\n        return {\n          hash: hash,\n          format: Format.Bitpay,\n          network: Network.Mainnet,\n          type: Type.P2SH\n        }\n    }\n  } catch (error) {\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Attempts to decode the given address assuming it is a cashaddr address.\n * @private\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeCashAddress (address) {\n  if (address.indexOf(':') !== -1) {\n    try {\n      return decodeCashAddressWithPrefix(address)\n    } catch (error) {\n    }\n  } else {\n    var prefixes = ['bitcoincash', 'bchtest', 'bchreg']\n    for (var i = 0; i < prefixes.length; ++i) {\n      try {\n        var prefix = prefixes[i]\n        return decodeCashAddressWithPrefix(prefix + ':' + address)\n      } catch (error) {\n      }\n    }\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Attempts to decode the given address assuming it is a cashaddr address with explicit prefix.\n * @private\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @return {object}\n * @throws {InvalidAddressError}\n */\nfunction decodeCashAddressWithPrefix (address) {\n  try {\n    var decoded = cashaddr.decode(address)\n    var hash = Array.prototype.slice.call(decoded.hash, 0)\n    var type = decoded.type === 'P2PKH' ? Type.P2PKH : Type.P2SH\n    switch (decoded.prefix) {\n      case 'bitcoincash':\n        return {\n          hash: hash,\n          format: Format.Cashaddr,\n          network: Network.Mainnet,\n          type: type\n        }\n      case 'bchtest':\n      case 'bchreg':\n        return {\n          hash: hash,\n          format: Format.Cashaddr,\n          network: Network.Testnet,\n          type: type\n        }\n    }\n  } catch (error) {\n  }\n  throw new InvalidAddressError()\n}\n\n/**\n * Encodes the given decoded address into legacy format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsLegacy (decoded) {\n  var versionByte = VERSION_BYTE[Format.Legacy][decoded.network][decoded.type]\n  var buffer = Buffer.alloc(1 + decoded.hash.length)\n  buffer[0] = versionByte\n  buffer.set(decoded.hash, 1)\n  return bs58check.encode(buffer)\n}\n\n/**\n * Encodes the given decoded address into bitpay format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsBitpay (decoded) {\n  var versionByte = VERSION_BYTE[Format.Bitpay][decoded.network][decoded.type]\n  var buffer = Buffer.alloc(1 + decoded.hash.length)\n  buffer[0] = versionByte\n  buffer.set(decoded.hash, 1)\n  return bs58check.encode(buffer)\n}\n\n/**\n * Encodes the given decoded address into cashaddr format.\n * @private\n * @param {object} decoded\n * @returns {string}\n */\nfunction encodeAsCashaddr (decoded) {\n  var prefix = decoded.network === Network.Mainnet ? 'bitcoincash' : 'bchtest'\n  var type = decoded.type === Type.P2PKH ? 'P2PKH' : 'P2SH'\n  var hash = new Uint8Array(decoded.hash)\n  return cashaddr.encode(prefix, type, hash)\n}\n\n/**\n * Returns a boolean indicating whether the address is in legacy format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isLegacyAddress (address) {\n  return detectAddressFormat(address) === Format.Legacy\n}\n\n/**\n * Returns a boolean indicating whether the address is in bitpay format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isBitpayAddress (address) {\n  return detectAddressFormat(address) === Format.Bitpay\n}\n\n/**\n * Returns a boolean indicating whether the address is in cashaddr format.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isCashAddress (address) {\n  return detectAddressFormat(address) === Format.Cashaddr\n}\n\n/**\n * Returns a boolean indicating whether the address is a mainnet address.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isMainnetAddress (address) {\n  return detectAddressNetwork(address) === Network.Mainnet\n}\n\n/**\n * Returns a boolean indicating whether the address is a testnet address.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isTestnetAddress (address) {\n  return detectAddressNetwork(address) === Network.Testnet\n}\n\n/**\n * Returns a boolean indicating whether the address is a p2pkh address.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isP2PKHAddress (address) {\n  return detectAddressType(address) === Type.P2PKH\n}\n\n/**\n * Returns a boolean indicating whether the address is a p2sh address.\n * @static\n * @param {string} address - A valid Bitcoin Cash address in any format.\n * @returns {boolean}\n * @throws {InvalidAddressError}\n */\nfunction isP2SHAddress (address) {\n  return detectAddressType(address) === Type.P2SH\n}\n\n/**\n * Error thrown when the address given as input is not a valid Bitcoin Cash address.\n * @constructor\n * InvalidAddressError\n */\nfunction InvalidAddressError () {\n  var error = new Error()\n  this.name = error.name = 'InvalidAddressError'\n  this.message = error.message = 'Received an invalid Bitcoin Cash address as input.'\n  this.stack = error.stack\n}\n\nInvalidAddressError.prototype = Object.create(Error.prototype)\n\nmodule.exports = {\n  Format: Format,\n  Network: Network,\n  Type: Type,\n  isValidAddress: isValidAddress,\n  detectAddressFormat: detectAddressFormat,\n  detectAddressNetwork: detectAddressNetwork,\n  detectAddressType: detectAddressType,\n  toLegacyAddress: toLegacyAddress,\n  toBitpayAddress: toBitpayAddress,\n  toCashAddress: toCashAddress,\n  isLegacyAddress: isLegacyAddress,\n  isBitpayAddress: isBitpayAddress,\n  isCashAddress: isCashAddress,\n  isMainnetAddress: isMainnetAddress,\n  isTestnetAddress: isTestnetAddress,\n  isP2PKHAddress: isP2PKHAddress,\n  isP2SHAddress: isP2SHAddress,\n  InvalidAddressError: InvalidAddressError\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\n    function Integer(v, radix) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        var value = n.value;\r\n        if (value === 0) return false;\r\n        if (value === 1) return true;\r\n        if (value === 2) return this.isEven();\r\n        return this.mod(n).equals(Integer[0]);\r\n    };\r\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n    \r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next : for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;    \r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n// Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if(bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits;\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.equals(bigInt.zero)) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n            (n instanceof BigInteger && n.value.length <= 1);\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var remQuo;\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = Math.min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var length = range.value.length - 1;\r\n        var result = [], restricted = true;\r\n        for (var i = length; i >= 0; i--) {\r\n            var top = restricted ? range.value[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.unshift(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        result = arrayToSmall(result);\r\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n    }\r\n    var parseBase = function (text, base) {\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        for (var i = 0; i < length; i++) {\r\n            var c = text[i].toLowerCase();\r\n            if (c === \"-\") continue;\r\n            if (/[a-z0-9]/.test(c)) {\r\n                if (/[0-9]/.test(c) && +c >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                } else if (c.charCodeAt(0) - 87 >= absBase) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        if (2 <= base && base <= 36) {\r\n            if (length <= LOG_MAX_INT / Math.log(base)) {\r\n                var result = parseInt(text, base);\r\n                if (isNaN(result)) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n                return new SmallInteger(parseInt(text, base));\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i].toLowerCase(),\r\n                charCode = c.charCodeAt(0);\r\n            if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n            else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\");\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit) {\r\n        if (digit <= 35) {\r\n            return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(+n - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.equals(1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(+n))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix);\r\n        return String(this.value);\r\n    };\r\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = new SmallInteger(i);\r\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","/**\n * @license\n * https://github.com/ealmansi/cashaddrjs\n * Copyright (c) 2017-2020 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\nvar validate = require('./validation').validate;\n\n/**\n * Base32 encoding and decoding.\n *\n * @module base32\n */\n\n/**\n * Charset containing the 32 symbols used in the base32 encoding.\n * @private\n */\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\n/**\n * Inverted index mapping each symbol into its index within the charset.\n * @private\n */\nvar CHARSET_INVERSE_INDEX = {\n  'q': 0, 'p': 1, 'z': 2, 'r': 3, 'y': 4, '9': 5, 'x': 6, '8': 7,\n  'g': 8, 'f': 9, '2': 10, 't': 11, 'v': 12, 'd': 13, 'w': 14, '0': 15,\n  's': 16, '3': 17, 'j': 18, 'n': 19, '5': 20, '4': 21, 'k': 22, 'h': 23,\n  'c': 24, 'e': 25, '6': 26, 'm': 27, 'u': 28, 'a': 29, '7': 30, 'l': 31,\n};\n\n/**\n * Encodes the given array of 5-bit integers as a base32-encoded string.\n *\n * @static\n * @param {Uint8Array} data Array of integers between 0 and 31 inclusive.\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction encode(data) {\n  validate(data instanceof Uint8Array, 'Invalid data: ' + data + '.');\n  var base32 = '';\n  for (var i = 0; i < data.length; ++i) {\n    var value = data[i];\n    validate(0 <= value && value < 32, 'Invalid value: ' + value + '.');\n    base32 += CHARSET[value];\n  }\n  return base32;\n}\n\n/**\n * Decodes the given base32-encoded string into an array of 5-bit integers.\n *\n * @static\n * @param {string} string\n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction decode(string) {\n  validate(typeof string === 'string', 'Invalid base32-encoded string: ' + string + '.');\n  var data = new Uint8Array(string.length);\n  for (var i = 0; i < string.length; ++i) {\n    var value = string[i];\n    validate(value in CHARSET_INVERSE_INDEX, 'Invalid value: ' + value + '.');\n    data[i] = CHARSET_INVERSE_INDEX[value];\n  }\n  return data;\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n};\n","/**\n * @license\n * https://github.com/ealmansi/cashaddrjs\n * Copyright (c) 2017-2020 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\nvar base32 = require('./base32');\nvar bigInt = require('big-integer');\nvar convertBits = require('./convertBits');\nvar validation = require('./validation');\nvar validate = validation.validate;\n\n/**\n * Encoding and decoding of the new Cash Address format for Bitcoin Cash. <br />\n * Compliant with the original cashaddr specification:\n * {@link https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/cashaddr.md}\n * @module cashaddr\n */\n\n/**\n * Encodes a hash from a given type into a Bitcoin Cash address with the given prefix.\n * \n * @static\n * @param {string} prefix Network prefix. E.g.: 'bitcoincash'.\n * @param {string} type Type of address to generate. Either 'P2PKH' or 'P2SH'.\n * @param {Uint8Array} hash Hash to encode represented as an array of 8-bit integers.\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction encode(prefix, type, hash) {\n  validate(typeof prefix === 'string' && isValidPrefix(prefix), 'Invalid prefix: ' + prefix + '.');\n  validate(typeof type === 'string', 'Invalid type: ' + type + '.');\n  validate(hash instanceof Uint8Array, 'Invalid hash: ' + hash + '.');\n  var prefixData = concat(prefixToUint5Array(prefix), new Uint8Array(1));\n  var versionByte = getTypeBits(type) + getHashSizeBits(hash);\n  var payloadData = toUint5Array(concat(new Uint8Array([versionByte]), hash));\n  var checksumData = concat(concat(prefixData, payloadData), new Uint8Array(8));\n  var payload = concat(payloadData, checksumToUint5Array(polymod(checksumData)));\n  return prefix + ':' + base32.encode(payload);\n}\n\n/**\n * Decodes the given address into its constituting prefix, type and hash. See [#encode()]{@link encode}.\n * \n * @static\n * @param {string} address Address to decode. E.g.: 'bitcoincash:qpm2qsznhks23z7629mms6s4cwef74vcwvy22gdx6a'.\n * @returns {object}\n * @throws {ValidationError}\n */\nfunction decode(address) {\n  validate(typeof address === 'string' && hasSingleCase(address), 'Invalid address: ' + address + '.');\n  var pieces = address.toLowerCase().split(':');\n  validate(pieces.length === 2, 'Missing prefix: ' + address + '.');\n  var prefix = pieces[0];\n  var payload = base32.decode(pieces[1]);\n  validate(validChecksum(prefix, payload), 'Invalid checksum: ' + address + '.');\n  var payloadData = fromUint5Array(payload.subarray(0, -8));\n  var versionByte = payloadData[0];\n  var hash = payloadData.subarray(1);\n  validate(getHashSize(versionByte) === hash.length * 8, 'Invalid hash size: ' + address + '.');\n  var type = getType(versionByte);\n  return {\n    prefix: prefix,\n    type: type,\n    hash: hash,\n  };\n}\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nvar ValidationError = validation.ValidationError;\n\n/**\n * Valid address prefixes.\n *\n * @private\n */\nvar VALID_PREFIXES = ['bitcoincash', 'bchtest', 'bchreg'];\n\n/**\n * Checks whether a string is a valid prefix; ie., it has a single letter case\n * and is one of 'bitcoincash', 'bchtest', or 'bchreg'.\n *\n * @private\n * @param {string} prefix \n * @returns {boolean}\n */\nfunction isValidPrefix(prefix) {\n  return hasSingleCase(prefix) && VALID_PREFIXES.indexOf(prefix.toLowerCase()) !== -1;\n}\n\n/**\n * Derives an array from the given prefix to be used in the computation\n * of the address' checksum.\n *\n * @private\n * @param {string} prefix Network prefix. E.g.: 'bitcoincash'. \n * @returns {Uint8Array}\n */\nfunction prefixToUint5Array(prefix) {\n  var result = new Uint8Array(prefix.length);\n  for (var i = 0; i < prefix.length; ++i) {\n    result[i] = prefix[i].charCodeAt(0) & 31;\n  }\n  return result;\n}\n\n/**\n * Returns an array representation of the given checksum to be encoded\n * within the address' payload.\n *\n * @private\n * @param {BigInteger} checksum Computed checksum.\n * @returns {Uint8Array}\n */\nfunction checksumToUint5Array(checksum) {\n  var result = new Uint8Array(8);\n  for (var i = 0; i < 8; ++i) {\n    result[7 - i] = checksum.and(31).toJSNumber();\n    checksum = checksum.shiftRight(5);\n  }\n  return result;\n}\n\n/**\n * Returns the bit representation of the given type within the version\n * byte.\n *\n * @private\n * @param {string} type Address type. Either 'P2PKH' or 'P2SH'.\n * @returns {number}\n * @throws {ValidationError}\n */\nfunction getTypeBits(type) {\n  switch (type) {\n  case 'P2PKH':\n    return 0;\n  case 'P2SH':\n    return 8;\n  default:\n    throw new ValidationError('Invalid type: ' + type + '.');\n  }\n}\n\n/**\n * Retrieves the address type from its bit representation within the\n * version byte.\n *\n * @private\n * @param {number} versionByte\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction getType(versionByte) {\n  switch (versionByte & 120) {\n  case 0:\n    return 'P2PKH';\n  case 8:\n    return 'P2SH';\n  default:\n    throw new ValidationError('Invalid address type in version byte: ' + versionByte + '.');\n  }\n}\n\n/**\n * Returns the bit representation of the length in bits of the given\n * hash within the version byte.\n *\n * @private\n * @param {Uint8Array} hash Hash to encode represented as an array of 8-bit integers.\n * @returns {number}\n * @throws {ValidationError}\n */\nfunction getHashSizeBits(hash) {\n  switch (hash.length * 8) {\n  case 160:\n    return 0;\n  case 192:\n    return 1;\n  case 224:\n    return 2;\n  case 256:\n    return 3;\n  case 320:\n    return 4;\n  case 384:\n    return 5;\n  case 448:\n    return 6;\n  case 512:\n    return 7;\n  default:\n    throw new ValidationError('Invalid hash size: ' + hash.length + '.');\n  }\n}\n\n/**\n * Retrieves the the length in bits of the encoded hash from its bit\n * representation within the version byte.\n *\n * @private\n * @param {number} versionByte\n * @returns {number}\n */\nfunction getHashSize(versionByte) {\n  switch (versionByte & 7) {\n  case 0:\n    return 160;\n  case 1:\n    return 192;\n  case 2:\n    return 224;\n  case 3:\n    return 256;\n  case 4:\n    return 320;\n  case 5:\n    return 384;\n  case 6:\n    return 448;\n  case 7:\n    return 512;\n  }\n}\n\n/**\n * Converts an array of 8-bit integers into an array of 5-bit integers,\n * right-padding with zeroes if necessary.\n *\n * @private\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction toUint5Array(data) {\n  return convertBits(data, 8, 5);\n}\n\n/**\n * Converts an array of 5-bit integers back into an array of 8-bit integers,\n * removing extra zeroes left from padding if necessary.\n * Throws a {@link ValidationError} if input is not a zero-padded array of 8-bit integers.\n *\n * @private\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction fromUint5Array(data) {\n  return convertBits(data, 5, 8, true);\n}\n\n/**\n * Returns the concatenation a and b.\n *\n * @private\n * @param {Uint8Array} a \n * @param {Uint8Array} b \n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction concat(a, b) {\n  var ab = new Uint8Array(a.length + b.length);\n  ab.set(a);\n  ab.set(b, a.length);\n  return ab;\n}\n\n/**\n * Computes a checksum from the given input data as specified for the CashAddr\n * format: https://github.com/Bitcoin-UAHF/spec/blob/master/cashaddr.md.\n *\n * @private\n * @param {Uint8Array} data Array of 5-bit integers over which the checksum is to be computed.\n * @returns {BigInteger}\n */\nfunction polymod(data) {\n  var GENERATOR = [0x98f2bc8e61, 0x79b76d99e2, 0xf33e5fb3c4, 0xae2eabe2a8, 0x1e4f43e470];\n  var checksum = bigInt(1);\n  for (var i = 0; i < data.length; ++i) {\n    var value = data[i];\n    var topBits = checksum.shiftRight(35);\n    checksum = checksum.and(0x07ffffffff).shiftLeft(5).xor(value);\n    for (var j = 0; j < GENERATOR.length; ++j) {\n      if (topBits.shiftRight(j).and(1).equals(1)) {\n        checksum = checksum.xor(GENERATOR[j]);\n      }\n    }\n  }\n  return checksum.xor(1);\n}\n\n/**\n * Verify that the payload has not been corrupted by checking that the\n * checksum is valid.\n * \n * @private\n * @param {string} prefix Network prefix. E.g.: 'bitcoincash'.\n * @param {Uint8Array} payload Array of 5-bit integers containing the address' payload.\n * @returns {boolean}\n */\nfunction validChecksum(prefix, payload) {\n  var prefixData = concat(prefixToUint5Array(prefix), new Uint8Array(1));\n  var checksumData = concat(prefixData, payload);\n  return polymod(checksumData).equals(0);\n}\n\n/**\n * Returns true if, and only if, the given string contains either uppercase\n * or lowercase letters, but not both.\n *\n * @private\n * @param {string} string Input string.\n * @returns {boolean}\n */\nfunction hasSingleCase(string) {\n  return string === string.toLowerCase() || string === string.toUpperCase();\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n  ValidationError: ValidationError,\n};\n","// Copyright (c) 2017-2018 Emilio Almansi\n// Copyright (c) 2017 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar validate = require('./validation').validate;\n\n/**\n * Converts an array of integers made up of 'from' bits into an\n * array of integers made up of 'to' bits. The output array is\n * zero-padded if necessary, unless strict mode is true.\n * Throws a {@link ValidationError} if input is invalid.\n * Original by Pieter Wuille: https://github.com/sipa/bech32.\n *\n * @param {Uint8Array} data Array of integers made up of 'from' bits.\n * @param {number} from Length in bits of elements in the input array.\n * @param {number} to Length in bits of elements in the output array.\n * @param {bool} strictMode Require the conversion to be completed without padding.\n * @returns {Uint8Array}\n */\nmodule.exports = function(data, from, to, strictMode) {\n  var length = strictMode\n    ? Math.floor(data.length * from / to)\n    : Math.ceil(data.length * from / to);\n  var mask = (1 << to) - 1;\n  var result = new Uint8Array(length);\n  var index = 0;\n  var accumulator = 0;\n  var bits = 0;\n  for (var i = 0; i < data.length; ++i) {\n    var value = data[i];\n    validate(0 <= value && (value >> from) === 0, 'Invalid value: ' + value + '.');\n    accumulator = (accumulator << from) | value;\n    bits += from;\n    while (bits >= to) {\n      bits -= to;\n      result[index] = (accumulator >> bits) & mask;\n      ++index;\n    }\n  }\n  if (!strictMode) {\n    if (bits > 0) {\n      result[index] = (accumulator << (to - bits)) & mask;\n      ++index;\n    }\n  } else {\n    validate(\n      bits < from && ((accumulator << (to - bits)) & mask) === 0,\n      'Input cannot be converted to ' + to + ' bits without padding, but strict mode was used.'\n    );\n  }\n  return result;\n};\n","/**\n * @license\n * https://github.com/ealmansi/cashaddrjs\n * Copyright (c) 2017-2020 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\n/**\n * Validation utility.\n *\n * @module validation\n */\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nfunction ValidationError(message) {\n  var error = new Error();\n  this.name = error.name = 'ValidationError';\n  this.message = error.message = message;\n  this.stack = error.stack;\n}\n\nValidationError.prototype = Object.create(Error.prototype);\n\n/**\n * Validates a given condition, throwing a {@link ValidationError} if\n * the given condition does not hold.\n *\n * @static\n * @param {boolean} condition Condition to validate.\n * @param {string} message Error message in case the condition does not hold.\n */\nfunction validate(condition, message) {\n  if (!condition) {\n    throw new ValidationError(message);\n  }\n}\n\nmodule.exports = {\n  ValidationError: ValidationError,\n  validate: validate,\n};\n"],"names":["decodeAddress","address","isValidAddress","isCashAddress","startsWith","Error","toLegacyAddress","encodeAddress","toCashAddress","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","result","Super","NewTarget","this","constructor","Reflect","construct","arguments","apply","t","Boolean","prototype","valueOf","call","KeyringHardware","_KeyringHardwareBtcBa","_buildHwAllNetworkPrepareAccountsParams","_super","args","_this","coreApi","coreChainApi","bch","hd","hwSdkNetwork","buildHwAllNetworkPrepareAccountsParams","template","index","network","path","buildPrepareAccountsPrefixedPath","showOnOneKey","_x","_KeyringHdBtc","KeyringHd","_KeyringImportedBtc","KeyringImported","imported","_KeyringQrBtc","KeyringQr","_KeyringWatchingBtc","KeyringWatching","ownKeys","e","r","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_VaultBtc","Vault","keyringMap","qr","hw","watching","external","_validateAddress","_proto","validateAddress","getBtcForkNetwork","validateBtcAddress","_addressValidationRes","addressValidationResult","bchAddress","normalizedAddress","displayAddress","Promise","resolve","isValid","getBlockbookCoinName","base58","Buffer","module","exports","checksumFn","decodeRaw","buffer","payload","slice","checksum","newChecksum","encode","concat","decode","string","decodeUnsafe","createHash","bs58checkBase","sha256x2","tmp","update","digest","bs58check","cashaddr","Format","Network","Type","detectAddressFormat","format","detectAddressNetwork","detectAddressType","type","P2PKH","P2SH","VERSION_BYTE","decodeBase58Address","BASE_58_CHECK_PAYLOAD_LENGTH","InvalidAddressError","versionByte","hash","Array","Legacy","Mainnet","Testnet","Bitpay","error","decodeCashAddress","indexOf","decodeCashAddressWithPrefix","prefixes","i","decoded","prefix","Cashaddr","name","message","stack","create","input","encodeAsLegacy","alloc","set","toBitpayAddress","encodeAsBitpay","encodeAsCashaddr","Uint8Array","isLegacyAddress","isBitpayAddress","isMainnetAddress","isTestnetAddress","isP2PKHAddress","isP2SHAddress","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Math","log","Integer","v","radix","parseValue","parseBase","BigInteger","value","sign","isSmall","SmallInteger","isPrecise","n","floor","arrayToSmall","arr","trim","compareAbs","createArray","x","truncate","ceil","add","a","b","sum","l_a","l_b","carry","base","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","multiplyKaratsuba","y","max","d","c","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","abs","comparison","divMod1","quotientDigit","shift","divisorMostSignificantDigit","divMod2","guess","xlen","highx","highy","check","part","unshift","reverse","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","bigInt","modPow","plus","subtractAny","minus","small","multiply","useKaratsuba","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isNegative","isPrime","strict","undefined","bits","bitLength","logN","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","String","shiftRight","remQuo","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","p","min","gcd","text","absBase","toLowerCase","test","charCodeAt","parseInt","isNaN","digits","charCode","start","parseBaseFromArray","val","stringify","digit","charAt","toBase","map","neg","Number","out","left","toBaseString","join","parseStringValue","split","decimalPlace","parseNumberValue","toArray","str","toJSON","minusOne","lcm","isInstance","low","range","random","restricted","top","fromArray","hasOwnProperty","validate","CHARSET_INVERSE_INDEX","data","base32","convertBits","validation","ValidationError","VALID_PREFIXES","prefixToUint5Array","ab","polymod","GENERATOR","topBits","hasSingleCase","toUpperCase","isValidPrefix","prefixData","getTypeBits","getHashSizeBits","payloadData","toUint5Array","checksumData","checksumToUint5Array","pieces","validChecksum","fromUint5Array","subarray","getHashSize","getType","from","to","strictMode","mask","accumulator","condition"],"sourceRoot":""}